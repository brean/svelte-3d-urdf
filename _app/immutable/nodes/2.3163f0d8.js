var Ig=Object.defineProperty;var Lg=(s,e,t)=>e in s?Ig(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var Rs=(s,e,t)=>(Lg(s,typeof e!="symbol"?e+"":e,t),t);import{A as Pg,B as Ii,C as mo,D as Dg,E as sn,s as Ht,r as Un,u as On,v as Fn,w as kn,z as Dn,F as qt,G as cn,o as ar,a as Bt,e as dt,c as zt,i as Ge,d as Ue,H as bn,I as Ut,J as Ti,K as Ng,t as Ug,f as bs,g as Ss,h as ss,j as Cl,L as di,p as fi,M as ap,N as or,O as lr,y as kt,P as Og,Q as Xa,R as vl,S as eu,T as Js,U as qa,V as Fg,W as kg,X as Xh,Y as yl,q as Yr,l as ms,m as gs,n as jr,Z as Bg,x as zg}from"../chunks/scheduler.6e4ca1d0.js";import{g as pn,t as me,c as mn,a as re,S as Zt,i as Jt,b as Ve,d as Je,m as We,e as Xe}from"../chunks/index.27d5ff66.js";import{p as Hg}from"../chunks/stores.460211b0.js";import{w as Yn,j as Wu,r as Gg}from"../chunks/singletons.db1f9dee.js";function xl(s,e){const t=e.token={};function n(i,r,a,o){if(e.token!==t)return;e.resolved=o;let l=e.ctx;a!==void 0&&(l=l.slice(),l[a]=o);const c=i&&(e.current=i)(l);let u=!1;e.block&&(e.blocks?e.blocks.forEach((h,f)=>{f!==r&&h&&(pn(),me(h,1,1,()=>{e.blocks[f]===h&&(e.blocks[f]=null)}),mn())}):e.block.d(1),c.c(),re(c,1),c.m(e.mount(),e.anchor),u=!0),e.block=c,e.blocks&&(e.blocks[r]=c),u&&Dg()}if(Pg(s)){const i=Ii();if(s.then(r=>{mo(i),n(e.then,1,e.value,r),mo(null)},r=>{if(mo(i),n(e.catch,2,e.error,r),mo(null),!e.hasCatch)throw r}),e.current!==e.pending)return n(e.pending,0),!0}else{if(e.current!==e.then)return n(e.then,1,e.value,s),!0;e.resolved=s}}function op(s,e,t){const n=e.slice(),{resolved:i}=s;s.current===s.then&&(n[s.value]=i),s.current===s.catch&&(n[s.error]=i),s.block.p(n,t)}function wi(s){return(s==null?void 0:s.length)!==void 0?s:Array.from(s)}function ni(s,e){const t={},n={},i={$$scope:1};let r=s.length;for(;r--;){const a=s[r],o=e[r];if(o){for(const l in a)l in o||(n[l]=1);for(const l in o)i[l]||(t[l]=o[l],i[l]=1);s[r]=o}else for(const l in a)i[l]=1}for(const a in n)a in t||(t[a]=void 0);return t}function en(s){return typeof s=="object"&&s!==null?s:{}}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ya="157",zs={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Hs={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},lp=0,tu=1,cp=2,Vg=3,Wg=0,Xu=1,Rl=2,Si=3,Ci=0,Nn=1,hi=2,Xg=2,Ji=0,Ks=1,nu=2,iu=3,su=4,up=5,Vs=100,hp=101,fp=102,ru=103,au=104,dp=200,pp=201,mp=202,gp=203,qu=204,Yu=205,_p=206,vp=207,yp=208,xp=209,bp=210,Sp=0,Mp=1,Ep=2,bl=3,Ap=4,Tp=5,wp=6,Cp=7,ja=0,Rp=1,Ip=2,Ki=0,Lp=1,Pp=2,Dp=3,ju=4,Np=5,Il=300,ts=301,xs=302,Ta=303,wa=304,ea=306,ji=1e3,yn=1001,Ca=1002,on=1003,Sl=1004,qg=1004,ba=1005,Yg=1005,ln=1006,Zu=1007,jg=1007,ns=1008,Zg=1008,$i=1009,Up=1010,Op=1011,Ll=1012,Ju=1013,Zi=1014,Mi=1015,Zr=1016,Ku=1017,$u=1018,_s=1020,Fp=1021,$n=1023,kp=1024,Bp=1025,vs=1026,er=1027,zp=1028,Qu=1029,Hp=1030,eh=1031,th=1033,cl=33776,ul=33777,hl=33778,fl=33779,ou=35840,lu=35841,cu=35842,uu=35843,Gp=36196,hu=37492,fu=37496,du=37808,pu=37809,mu=37810,gu=37811,_u=37812,vu=37813,yu=37814,xu=37815,bu=37816,Su=37817,Mu=37818,Eu=37819,Au=37820,Tu=37821,dl=36492,wu=36494,Cu=36495,Vp=36283,Ru=36284,Iu=36285,Lu=36286,Wp=2200,Xp=2201,qp=2202,Ra=2300,Ia=2301,pl=2302,qs=2400,Ys=2401,La=2402,Pl=2500,nh=2501,Jg=0,Kg=1,$g=2,Pa=3e3,Qi=3001,Yp=3200,jp=3201,Ms=0,Zp=1,Qn="",tn="srgb",Ri="srgb-linear",Dl="display-p3",Za="display-p3-linear",Da="linear",Ft="srgb",Na="rec709",Ua="p3",Qg=0,ml=7680,e_=7681,t_=7682,n_=7683,i_=34055,s_=34056,r_=5386,a_=512,o_=513,l_=514,c_=515,u_=516,h_=517,f_=518,Jp=519,Kp=512,$p=513,Qp=514,em=515,tm=516,nm=517,im=518,sm=519,Oa=35044,d_=35048,p_=35040,m_=35045,g_=35049,__=35041,v_=35046,y_=35050,x_=35042,b_="100",Pu="300 es",Ml=1035,Ei=2e3,Fa=2001;class Li{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}}const wn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let qh=1234567;const $s=Math.PI/180,Jr=180/Math.PI;function ei(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(wn[s&255]+wn[s>>8&255]+wn[s>>16&255]+wn[s>>24&255]+"-"+wn[e&255]+wn[e>>8&255]+"-"+wn[e>>16&15|64]+wn[e>>24&255]+"-"+wn[t&63|128]+wn[t>>8&255]+"-"+wn[t>>16&255]+wn[t>>24&255]+wn[n&255]+wn[n>>8&255]+wn[n>>16&255]+wn[n>>24&255]).toLowerCase()}function nn(s,e,t){return Math.max(e,Math.min(t,s))}function ih(s,e){return(s%e+e)%e}function S_(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function M_(s,e,t){return s!==e?(t-s)/(e-s):0}function Sa(s,e,t){return(1-t)*s+t*e}function E_(s,e,t,n){return Sa(s,e,1-Math.exp(-t*n))}function A_(s,e=1){return e-Math.abs(ih(s,e*2)-e)}function T_(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function w_(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function C_(s,e){return s+Math.floor(Math.random()*(e-s+1))}function R_(s,e){return s+Math.random()*(e-s)}function I_(s){return s*(.5-Math.random())}function L_(s){s!==void 0&&(qh=s);let e=qh+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function P_(s){return s*$s}function D_(s){return s*Jr}function Du(s){return(s&s-1)===0&&s!==0}function rm(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function El(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function N_(s,e,t,n,i){const r=Math.cos,a=Math.sin,o=r(t/2),l=a(t/2),c=r((e+n)/2),u=a((e+n)/2),h=r((e-n)/2),f=a((e-n)/2),d=r((n-e)/2),p=a((n-e)/2);switch(i){case"XYX":s.set(o*u,l*h,l*f,o*c);break;case"YZY":s.set(l*f,o*u,l*h,o*c);break;case"ZXZ":s.set(l*h,l*f,o*u,o*c);break;case"XZX":s.set(o*u,l*p,l*d,o*c);break;case"YXY":s.set(l*d,o*u,l*p,o*c);break;case"ZYZ":s.set(l*p,l*d,o*u,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function qn(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function xt(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const Ws={DEG2RAD:$s,RAD2DEG:Jr,generateUUID:ei,clamp:nn,euclideanModulo:ih,mapLinear:S_,inverseLerp:M_,lerp:Sa,damp:E_,pingpong:A_,smoothstep:T_,smootherstep:w_,randInt:C_,randFloat:R_,randFloatSpread:I_,seededRandom:L_,degToRad:P_,radToDeg:D_,isPowerOfTwo:Du,ceilPowerOfTwo:rm,floorPowerOfTwo:El,setQuaternionFromProperEuler:N_,normalize:xt,denormalize:qn};class pe{constructor(e=0,t=0){pe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(nn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class bt{constructor(e,t,n,i,r,a,o,l,c){bt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,a,o,l,c)}set(e,t,n,i,r,a,o,l,c){const u=this.elements;return u[0]=e,u[1]=i,u[2]=o,u[3]=t,u[4]=r,u[5]=l,u[6]=n,u[7]=a,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[3],l=n[6],c=n[1],u=n[4],h=n[7],f=n[2],d=n[5],p=n[8],_=i[0],g=i[3],m=i[6],y=i[1],v=i[4],x=i[7],E=i[2],w=i[5],A=i[8];return r[0]=a*_+o*y+l*E,r[3]=a*g+o*v+l*w,r[6]=a*m+o*x+l*A,r[1]=c*_+u*y+h*E,r[4]=c*g+u*v+h*w,r[7]=c*m+u*x+h*A,r[2]=f*_+d*y+p*E,r[5]=f*g+d*v+p*w,r[8]=f*m+d*x+p*A,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8];return t*a*u-t*o*c-n*r*u+n*o*l+i*r*c-i*a*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8],h=u*a-o*c,f=o*l-u*r,d=c*r-a*l,p=t*h+n*f+i*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/p;return e[0]=h*_,e[1]=(i*c-u*n)*_,e[2]=(o*n-i*a)*_,e[3]=f*_,e[4]=(u*t-i*l)*_,e[5]=(i*r-o*t)*_,e[6]=d*_,e[7]=(n*l-c*t)*_,e[8]=(a*t-n*r)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,o){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*a+c*o)+a+e,-i*c,i*l,-i*(-c*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(dc.makeScale(e,t)),this}rotate(e){return this.premultiply(dc.makeRotation(-e)),this}translate(e,t){return this.premultiply(dc.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const dc=new bt;function am(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const U_={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Gr(s,e){return new U_[s](e)}function ka(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function om(){const s=ka("canvas");return s.style.display="block",s}const Yh={};function Ma(s){s in Yh||(Yh[s]=!0,console.warn(s))}const jh=new bt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Zh=new bt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),go={[Ri]:{transfer:Da,primaries:Na,toReference:s=>s,fromReference:s=>s},[tn]:{transfer:Ft,primaries:Na,toReference:s=>s.convertSRGBToLinear(),fromReference:s=>s.convertLinearToSRGB()},[Za]:{transfer:Da,primaries:Ua,toReference:s=>s.applyMatrix3(Zh),fromReference:s=>s.applyMatrix3(jh)},[Dl]:{transfer:Ft,primaries:Ua,toReference:s=>s.convertSRGBToLinear().applyMatrix3(Zh),fromReference:s=>s.applyMatrix3(jh).convertLinearToSRGB()}},O_=new Set([Ri,Za]),It={enabled:!0,_workingColorSpace:Ri,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(s){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!s},get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(s){if(!O_.has(s))throw new Error(`Unsupported working color space, "${s}".`);this._workingColorSpace=s},convert:function(s,e,t){if(this.enabled===!1||e===t||!e||!t)return s;const n=go[e].toReference,i=go[t].fromReference;return i(n(s))},fromWorkingColorSpace:function(s,e){return this.convert(s,this._workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this._workingColorSpace)},getPrimaries:function(s){return go[s].primaries},getTransfer:function(s){return s===Qn?Da:go[s].transfer}};function Xr(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function pc(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let vr;class sh{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{vr===void 0&&(vr=ka("canvas")),vr.width=e.width,vr.height=e.height;const n=vr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=vr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ka("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let a=0;a<r.length;a++)r[a]=Xr(r[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Xr(t[n]/255)*255):t[n]=Xr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let F_=0;class js{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:F_++}),this.uuid=ei(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?r.push(mc(i[a].image)):r.push(mc(i[a]))}else r=mc(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function mc(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?sh.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let k_=0;class un extends Li{constructor(e=un.DEFAULT_IMAGE,t=un.DEFAULT_MAPPING,n=yn,i=yn,r=ln,a=ns,o=$n,l=$i,c=un.DEFAULT_ANISOTROPY,u=Qn){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:k_++}),this.uuid=ei(),this.name="",this.source=new js(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new pe(0,0),this.repeat=new pe(1,1),this.center=new pe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new bt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof u=="string"?this.colorSpace=u:(Ma("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=u===Qi?tn:Qn),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Il)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ji:e.x=e.x-Math.floor(e.x);break;case yn:e.x=e.x<0?0:1;break;case Ca:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ji:e.y=e.y-Math.floor(e.y);break;case yn:e.y=e.y<0?0:1;break;case Ca:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Ma("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===tn?Qi:Pa}set encoding(e){Ma("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Qi?tn:Qn}}un.DEFAULT_IMAGE=null;un.DEFAULT_MAPPING=Il;un.DEFAULT_ANISOTROPY=1;class Nt{constructor(e=0,t=0,n=0,i=1){Nt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],p=l[9],_=l[2],g=l[6],m=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-_)<.01&&Math.abs(p-g)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+_)<.1&&Math.abs(p+g)<.1&&Math.abs(c+d+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const v=(c+1)/2,x=(d+1)/2,E=(m+1)/2,w=(u+f)/4,A=(h+_)/4,P=(p+g)/4;return v>x&&v>E?v<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(v),i=w/n,r=A/n):x>E?x<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(x),n=w/i,r=P/i):E<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(E),n=A/r,i=P/r),this.set(n,i,r,t),this}let y=Math.sqrt((g-p)*(g-p)+(h-_)*(h-_)+(f-u)*(f-u));return Math.abs(y)<.001&&(y=1),this.x=(g-p)/y,this.y=(h-_)/y,this.z=(f-u)/y,this.w=Math.acos((c+d+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class lm extends Li{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Nt(0,0,e,t),this.scissorTest=!1,this.viewport=new Nt(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(Ma("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Qi?tn:Qn),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ln,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},n),this.texture=new un(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps,this.texture.internalFormat=n.internalFormat,this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new js(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ii extends lm{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Nl extends un{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=on,this.minFilter=on,this.wrapR=yn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class B_ extends ii{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Nl(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class rh extends un{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=on,this.minFilter=on,this.wrapR=yn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class z_ extends ii{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new rh(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class H_ extends ii{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const r=this.texture;this.texture=[];for(let a=0;a<n;a++)this.texture[a]=r.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class xn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,o){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const f=r[a+0],d=r[a+1],p=r[a+2],_=r[a+3];if(o===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(o===1){e[t+0]=f,e[t+1]=d,e[t+2]=p,e[t+3]=_;return}if(h!==_||l!==f||c!==d||u!==p){let g=1-o;const m=l*f+c*d+u*p+h*_,y=m>=0?1:-1,v=1-m*m;if(v>Number.EPSILON){const E=Math.sqrt(v),w=Math.atan2(E,m*y);g=Math.sin(g*w)/E,o=Math.sin(o*w)/E}const x=o*y;if(l=l*g+f*x,c=c*g+d*x,u=u*g+p*x,h=h*g+_*x,g===1-o){const E=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=E,c*=E,u*=E,h*=E}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,r,a){const o=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=r[a],f=r[a+1],d=r[a+2],p=r[a+3];return e[t]=o*p+u*h+l*d-c*f,e[t+1]=l*p+u*f+c*h-o*d,e[t+2]=c*p+u*d+o*f-l*h,e[t+3]=u*p-o*h-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(n/2),u=o(i/2),h=o(r/2),f=l(n/2),d=l(i/2),p=l(r/2);switch(a){case"XYZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"YXZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"ZXY":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"ZYX":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"YZX":this._x=f*u*h+c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h-f*d*p;break;case"XZY":this._x=f*u*h-c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],o=t[5],l=t[9],c=t[2],u=t[6],h=t[10],f=n+o+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(r-c)*d,this._z=(a-i)*d}else if(n>o&&n>h){const d=2*Math.sqrt(1+n-o-h);this._w=(u-l)/d,this._x=.25*d,this._y=(i+a)/d,this._z=(r+c)/d}else if(o>h){const d=2*Math.sqrt(1+o-n-h);this._w=(r-c)/d,this._x=(i+a)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-n-o);this._w=(a-i)/d,this._x=(r+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(nn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,o=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+a*o+i*c-r*l,this._y=i*u+a*l+r*o-n*c,this._z=r*u+a*c+n*l-i*o,this._w=a*u-n*o-i*l-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const l=1-o*o;if(l<=Number.EPSILON){const d=1-t;return this._w=d*a+t*this._w,this._x=d*n+t*this._x,this._y=d*i+t*this._y,this._z=d*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,o),h=Math.sin((1-t)*u)/c,f=Math.sin(t*u)/c;return this._w=a*h+this._w*f,this._x=n*h+this._x*f,this._y=i*h+this._y*f,this._z=r*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,n=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Jh.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Jh.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,o=e.z,l=e.w,c=l*t+a*i-o*n,u=l*n+o*t-r*i,h=l*i+r*n-a*t,f=-r*t-a*n-o*i;return this.x=c*l+f*-r+u*-o-h*-a,this.y=u*l+f*-a+h*-r-c*-o,this.z=h*l+f*-o+c*-a-u*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,o=t.y,l=t.z;return this.x=i*l-r*o,this.y=r*a-n*l,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return gc.copy(this).projectOnVector(e),this.sub(gc)}reflect(e){return this.sub(gc.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(nn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const gc=new D,Jh=new xn;class Pi{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Fi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Fi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Fi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),yr.copy(e.boundingBox),yr.applyMatrix4(e.matrixWorld),this.union(yr);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const r=i.attributes.position;for(let a=0,o=r.count;a<o;a++)Fi.fromBufferAttribute(r,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Fi)}else i.boundingBox===null&&i.computeBoundingBox(),yr.copy(i.boundingBox),yr.applyMatrix4(e.matrixWorld),this.union(yr)}const n=e.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Fi),Fi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ca),_o.subVectors(this.max,ca),xr.subVectors(e.a,ca),br.subVectors(e.b,ca),Sr.subVectors(e.c,ca),as.subVectors(br,xr),os.subVectors(Sr,br),Is.subVectors(xr,Sr);let t=[0,-as.z,as.y,0,-os.z,os.y,0,-Is.z,Is.y,as.z,0,-as.x,os.z,0,-os.x,Is.z,0,-Is.x,-as.y,as.x,0,-os.y,os.x,0,-Is.y,Is.x,0];return!_c(t,xr,br,Sr,_o)||(t=[1,0,0,0,1,0,0,0,1],!_c(t,xr,br,Sr,_o))?!1:(vo.crossVectors(as,os),t=[vo.x,vo.y,vo.z],_c(t,xr,br,Sr,_o))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Fi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Fi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Oi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Oi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Oi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Oi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Oi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Oi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Oi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Oi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Oi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Oi=[new D,new D,new D,new D,new D,new D,new D,new D],Fi=new D,yr=new Pi,xr=new D,br=new D,Sr=new D,as=new D,os=new D,Is=new D,ca=new D,_o=new D,vo=new D,Ls=new D;function _c(s,e,t,n,i){for(let r=0,a=s.length-3;r<=a;r+=3){Ls.fromArray(s,r);const o=i.x*Math.abs(Ls.x)+i.y*Math.abs(Ls.y)+i.z*Math.abs(Ls.z),l=e.dot(Ls),c=t.dot(Ls),u=n.dot(Ls);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>o)return!1}return!0}const G_=new Pi,ua=new D,vc=new D;class gi{constructor(e=new D,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):G_.setFromPoints(e).getCenter(n);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ua.subVectors(e,this.center);const t=ua.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ua,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(vc.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ua.copy(e.center).add(vc)),this.expandByPoint(ua.copy(e.center).sub(vc))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const ki=new D,yc=new D,yo=new D,ls=new D,xc=new D,xo=new D,bc=new D;class cr{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ki)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=ki.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ki.copy(this.origin).addScaledVector(this.direction,t),ki.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){yc.copy(e).add(t).multiplyScalar(.5),yo.copy(t).sub(e).normalize(),ls.copy(this.origin).sub(yc);const r=e.distanceTo(t)*.5,a=-this.direction.dot(yo),o=ls.dot(this.direction),l=-ls.dot(yo),c=ls.lengthSq(),u=Math.abs(1-a*a);let h,f,d,p;if(u>0)if(h=a*l-o,f=a*o-l,p=r*u,h>=0)if(f>=-p)if(f<=p){const _=1/u;h*=_,f*=_,d=h*(h+a*f+2*o)+f*(a*h+f+2*l)+c}else f=r,h=Math.max(0,-(a*f+o)),d=-h*h+f*(f+2*l)+c;else f=-r,h=Math.max(0,-(a*f+o)),d=-h*h+f*(f+2*l)+c;else f<=-p?(h=Math.max(0,-(-a*r+o)),f=h>0?-r:Math.min(Math.max(-r,-l),r),d=-h*h+f*(f+2*l)+c):f<=p?(h=0,f=Math.min(Math.max(-r,-l),r),d=f*(f+2*l)+c):(h=Math.max(0,-(a*r+o)),f=h>0?r:Math.min(Math.max(-r,-l),r),d=-h*h+f*(f+2*l)+c);else f=a>0?-r:r,h=Math.max(0,-(a*f+o)),d=-h*h+f*(f+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(yc).addScaledVector(yo,f),d}intersectSphere(e,t){ki.subVectors(e.center,this.origin);const n=ki.dot(this.direction),i=ki.dot(ki)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),o=n-a,l=n+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,o,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(n=(e.min.x-f.x)*c,i=(e.max.x-f.x)*c):(n=(e.max.x-f.x)*c,i=(e.min.x-f.x)*c),u>=0?(r=(e.min.y-f.y)*u,a=(e.max.y-f.y)*u):(r=(e.max.y-f.y)*u,a=(e.min.y-f.y)*u),n>a||r>i||((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),h>=0?(o=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(o=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),n>l||o>i)||((o>n||n!==n)&&(n=o),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,ki)!==null}intersectTriangle(e,t,n,i,r){xc.subVectors(t,e),xo.subVectors(n,e),bc.crossVectors(xc,xo);let a=this.direction.dot(bc),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;ls.subVectors(this.origin,e);const l=o*this.direction.dot(xo.crossVectors(ls,xo));if(l<0)return null;const c=o*this.direction.dot(xc.cross(ls));if(c<0||l+c>a)return null;const u=-o*ls.dot(bc);return u<0?null:this.at(u/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class at{constructor(e,t,n,i,r,a,o,l,c,u,h,f,d,p,_,g){at.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,a,o,l,c,u,h,f,d,p,_,g)}set(e,t,n,i,r,a,o,l,c,u,h,f,d,p,_,g){const m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=i,m[1]=r,m[5]=a,m[9]=o,m[13]=l,m[2]=c,m[6]=u,m[10]=h,m[14]=f,m[3]=d,m[7]=p,m[11]=_,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new at().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Mr.setFromMatrixColumn(e,0).length(),r=1/Mr.setFromMatrixColumn(e,1).length(),a=1/Mr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const f=a*u,d=a*h,p=o*u,_=o*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=d+p*c,t[5]=f-_*c,t[9]=-o*l,t[2]=_-f*c,t[6]=p+d*c,t[10]=a*l}else if(e.order==="YXZ"){const f=l*u,d=l*h,p=c*u,_=c*h;t[0]=f+_*o,t[4]=p*o-d,t[8]=a*c,t[1]=a*h,t[5]=a*u,t[9]=-o,t[2]=d*o-p,t[6]=_+f*o,t[10]=a*l}else if(e.order==="ZXY"){const f=l*u,d=l*h,p=c*u,_=c*h;t[0]=f-_*o,t[4]=-a*h,t[8]=p+d*o,t[1]=d+p*o,t[5]=a*u,t[9]=_-f*o,t[2]=-a*c,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const f=a*u,d=a*h,p=o*u,_=o*h;t[0]=l*u,t[4]=p*c-d,t[8]=f*c+_,t[1]=l*h,t[5]=_*c+f,t[9]=d*c-p,t[2]=-c,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const f=a*l,d=a*c,p=o*l,_=o*c;t[0]=l*u,t[4]=_-f*h,t[8]=p*h+d,t[1]=h,t[5]=a*u,t[9]=-o*u,t[2]=-c*u,t[6]=d*h+p,t[10]=f-_*h}else if(e.order==="XZY"){const f=a*l,d=a*c,p=o*l,_=o*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=f*h+_,t[5]=a*u,t[9]=d*h-p,t[2]=p*h-d,t[6]=o*u,t[10]=_*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(V_,e,W_)}lookAt(e,t,n){const i=this.elements;return Jn.subVectors(e,t),Jn.lengthSq()===0&&(Jn.z=1),Jn.normalize(),cs.crossVectors(n,Jn),cs.lengthSq()===0&&(Math.abs(n.z)===1?Jn.x+=1e-4:Jn.z+=1e-4,Jn.normalize(),cs.crossVectors(n,Jn)),cs.normalize(),bo.crossVectors(Jn,cs),i[0]=cs.x,i[4]=bo.x,i[8]=Jn.x,i[1]=cs.y,i[5]=bo.y,i[9]=Jn.y,i[2]=cs.z,i[6]=bo.z,i[10]=Jn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[4],l=n[8],c=n[12],u=n[1],h=n[5],f=n[9],d=n[13],p=n[2],_=n[6],g=n[10],m=n[14],y=n[3],v=n[7],x=n[11],E=n[15],w=i[0],A=i[4],P=i[8],M=i[12],R=i[1],V=i[5],j=i[9],ne=i[13],F=i[2],H=i[6],B=i[10],q=i[14],ee=i[3],Z=i[7],ie=i[11],G=i[15];return r[0]=a*w+o*R+l*F+c*ee,r[4]=a*A+o*V+l*H+c*Z,r[8]=a*P+o*j+l*B+c*ie,r[12]=a*M+o*ne+l*q+c*G,r[1]=u*w+h*R+f*F+d*ee,r[5]=u*A+h*V+f*H+d*Z,r[9]=u*P+h*j+f*B+d*ie,r[13]=u*M+h*ne+f*q+d*G,r[2]=p*w+_*R+g*F+m*ee,r[6]=p*A+_*V+g*H+m*Z,r[10]=p*P+_*j+g*B+m*ie,r[14]=p*M+_*ne+g*q+m*G,r[3]=y*w+v*R+x*F+E*ee,r[7]=y*A+v*V+x*H+E*Z,r[11]=y*P+v*j+x*B+E*ie,r[15]=y*M+v*ne+x*q+E*G,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],o=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],d=e[14],p=e[3],_=e[7],g=e[11],m=e[15];return p*(+r*l*h-i*c*h-r*o*f+n*c*f+i*o*d-n*l*d)+_*(+t*l*d-t*c*f+r*a*f-i*a*d+i*c*u-r*l*u)+g*(+t*c*h-t*o*d-r*a*h+n*a*d+r*o*u-n*c*u)+m*(-i*o*u-t*l*h+t*o*f+i*a*h-n*a*f+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],d=e[11],p=e[12],_=e[13],g=e[14],m=e[15],y=h*g*c-_*f*c+_*l*d-o*g*d-h*l*m+o*f*m,v=p*f*c-u*g*c-p*l*d+a*g*d+u*l*m-a*f*m,x=u*_*c-p*h*c+p*o*d-a*_*d-u*o*m+a*h*m,E=p*h*l-u*_*l-p*o*f+a*_*f+u*o*g-a*h*g,w=t*y+n*v+i*x+r*E;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const A=1/w;return e[0]=y*A,e[1]=(_*f*r-h*g*r-_*i*d+n*g*d+h*i*m-n*f*m)*A,e[2]=(o*g*r-_*l*r+_*i*c-n*g*c-o*i*m+n*l*m)*A,e[3]=(h*l*r-o*f*r-h*i*c+n*f*c+o*i*d-n*l*d)*A,e[4]=v*A,e[5]=(u*g*r-p*f*r+p*i*d-t*g*d-u*i*m+t*f*m)*A,e[6]=(p*l*r-a*g*r-p*i*c+t*g*c+a*i*m-t*l*m)*A,e[7]=(a*f*r-u*l*r+u*i*c-t*f*c-a*i*d+t*l*d)*A,e[8]=x*A,e[9]=(p*h*r-u*_*r-p*n*d+t*_*d+u*n*m-t*h*m)*A,e[10]=(a*_*r-p*o*r+p*n*c-t*_*c-a*n*m+t*o*m)*A,e[11]=(u*o*r-a*h*r-u*n*c+t*h*c+a*n*d-t*o*d)*A,e[12]=E*A,e[13]=(u*_*i-p*h*i+p*n*f-t*_*f-u*n*g+t*h*g)*A,e[14]=(p*o*i-a*_*i-p*n*l+t*_*l+a*n*g-t*o*g)*A,e[15]=(a*h*i-u*o*i+u*n*l-t*h*l-a*n*f+t*o*f)*A,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,o=e.y,l=e.z,c=r*a,u=r*o;return this.set(c*a+n,c*o-i*l,c*l+i*o,0,c*o+i*l,u*o+n,u*l-i*a,0,c*l-i*o,u*l+i*a,r*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,o=t._z,l=t._w,c=r+r,u=a+a,h=o+o,f=r*c,d=r*u,p=r*h,_=a*u,g=a*h,m=o*h,y=l*c,v=l*u,x=l*h,E=n.x,w=n.y,A=n.z;return i[0]=(1-(_+m))*E,i[1]=(d+x)*E,i[2]=(p-v)*E,i[3]=0,i[4]=(d-x)*w,i[5]=(1-(f+m))*w,i[6]=(g+y)*w,i[7]=0,i[8]=(p+v)*A,i[9]=(g-y)*A,i[10]=(1-(f+_))*A,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Mr.set(i[0],i[1],i[2]).length();const a=Mr.set(i[4],i[5],i[6]).length(),o=Mr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],li.copy(this);const c=1/r,u=1/a,h=1/o;return li.elements[0]*=c,li.elements[1]*=c,li.elements[2]*=c,li.elements[4]*=u,li.elements[5]*=u,li.elements[6]*=u,li.elements[8]*=h,li.elements[9]*=h,li.elements[10]*=h,t.setFromRotationMatrix(li),n.x=r,n.y=a,n.z=o,this}makePerspective(e,t,n,i,r,a,o=Ei){const l=this.elements,c=2*r/(t-e),u=2*r/(n-i),h=(t+e)/(t-e),f=(n+i)/(n-i);let d,p;if(o===Ei)d=-(a+r)/(a-r),p=-2*a*r/(a-r);else if(o===Fa)d=-a/(a-r),p=-a*r/(a-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=c,l[4]=0,l[8]=h,l[12]=0,l[1]=0,l[5]=u,l[9]=f,l[13]=0,l[2]=0,l[6]=0,l[10]=d,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,r,a,o=Ei){const l=this.elements,c=1/(t-e),u=1/(n-i),h=1/(a-r),f=(t+e)*c,d=(n+i)*u;let p,_;if(o===Ei)p=(a+r)*h,_=-2*h;else if(o===Fa)p=r*h,_=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-f,l[1]=0,l[5]=2*u,l[9]=0,l[13]=-d,l[2]=0,l[6]=0,l[10]=_,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Mr=new D,li=new at,V_=new D(0,0,0),W_=new D(1,1,1),cs=new D,bo=new D,Jn=new D,Kh=new at,$h=new xn;class Ja{constructor(e=0,t=0,n=0,i=Ja.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],o=i[8],l=i[1],c=i[5],u=i[9],h=i[2],f=i[6],d=i[10];switch(t){case"XYZ":this._y=Math.asin(nn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-nn(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(nn(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-nn(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(nn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-nn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Kh.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Kh,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return $h.setFromEuler(this),this.setFromQuaternion($h,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ja.DEFAULT_ORDER="XYZ";class Ul{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let X_=0;const Qh=new D,Er=new xn,Bi=new at,So=new D,ha=new D,q_=new D,Y_=new xn,ef=new D(1,0,0),tf=new D(0,1,0),nf=new D(0,0,1),j_={type:"added"},Z_={type:"removed"};class Rt extends Li{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:X_++}),this.uuid=ei(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Rt.DEFAULT_UP.clone();const e=new D,t=new Ja,n=new xn,i=new D(1,1,1);function r(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new at},normalMatrix:{value:new bt}}),this.matrix=new at,this.matrixWorld=new at,this.matrixAutoUpdate=Rt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Rt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Ul,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Er.setFromAxisAngle(e,t),this.quaternion.multiply(Er),this}rotateOnWorldAxis(e,t){return Er.setFromAxisAngle(e,t),this.quaternion.premultiply(Er),this}rotateX(e){return this.rotateOnAxis(ef,e)}rotateY(e){return this.rotateOnAxis(tf,e)}rotateZ(e){return this.rotateOnAxis(nf,e)}translateOnAxis(e,t){return Qh.copy(e).applyQuaternion(this.quaternion),this.position.add(Qh.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(ef,e)}translateY(e){return this.translateOnAxis(tf,e)}translateZ(e){return this.translateOnAxis(nf,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Bi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?So.copy(e):So.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ha.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Bi.lookAt(ha,So,this.up):Bi.lookAt(So,ha,this.up),this.quaternion.setFromRotationMatrix(Bi),i&&(Bi.extractRotation(i.matrixWorld),Er.setFromRotationMatrix(Bi),this.quaternion.premultiply(Er.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(j_)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Z_)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Bi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Bi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Bi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const a=this.children[i].getObjectsByProperty(e,t);a.length>0&&(n=n.concat(a))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ha,e,q_),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ha,Y_,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,a=i.length;r<a;r++){const o=i[r];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];r(e.shapes,h)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(r(e.materials,this.material[l]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];i.animations.push(r(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),c=a(e.textures),u=a(e.images),h=a(e.shapes),f=a(e.skeletons),d=a(e.animations),p=a(e.nodes);o.length>0&&(n.geometries=o),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d),p.length>0&&(n.nodes=p)}return n.object=i,n;function a(o){const l=[];for(const c in o){const u=o[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Rt.DEFAULT_UP=new D(0,1,0);Rt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Rt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ci=new D,zi=new D,Sc=new D,Hi=new D,Ar=new D,Tr=new D,sf=new D,Mc=new D,Ec=new D,Ac=new D;let Mo=!1;class Xn{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),ci.subVectors(e,t),i.cross(ci);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){ci.subVectors(i,t),zi.subVectors(n,t),Sc.subVectors(e,t);const a=ci.dot(ci),o=ci.dot(zi),l=ci.dot(Sc),c=zi.dot(zi),u=zi.dot(Sc),h=a*c-o*o;if(h===0)return r.set(-2,-1,-1);const f=1/h,d=(c*l-o*u)*f,p=(a*u-o*l)*f;return r.set(1-d-p,p,d)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Hi),Hi.x>=0&&Hi.y>=0&&Hi.x+Hi.y<=1}static getUV(e,t,n,i,r,a,o,l){return Mo===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Mo=!0),this.getInterpolation(e,t,n,i,r,a,o,l)}static getInterpolation(e,t,n,i,r,a,o,l){return this.getBarycoord(e,t,n,i,Hi),l.setScalar(0),l.addScaledVector(r,Hi.x),l.addScaledVector(a,Hi.y),l.addScaledVector(o,Hi.z),l}static isFrontFacing(e,t,n,i){return ci.subVectors(n,t),zi.subVectors(e,t),ci.cross(zi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return ci.subVectors(this.c,this.b),zi.subVectors(this.a,this.b),ci.cross(zi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Xn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Xn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return Mo===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Mo=!0),Xn.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}getInterpolation(e,t,n,i,r){return Xn.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return Xn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Xn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,o;Ar.subVectors(i,n),Tr.subVectors(r,n),Mc.subVectors(e,n);const l=Ar.dot(Mc),c=Tr.dot(Mc);if(l<=0&&c<=0)return t.copy(n);Ec.subVectors(e,i);const u=Ar.dot(Ec),h=Tr.dot(Ec);if(u>=0&&h<=u)return t.copy(i);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return a=l/(l-u),t.copy(n).addScaledVector(Ar,a);Ac.subVectors(e,r);const d=Ar.dot(Ac),p=Tr.dot(Ac);if(p>=0&&d<=p)return t.copy(r);const _=d*c-l*p;if(_<=0&&c>=0&&p<=0)return o=c/(c-p),t.copy(n).addScaledVector(Tr,o);const g=u*p-d*h;if(g<=0&&h-u>=0&&d-p>=0)return sf.subVectors(r,i),o=(h-u)/(h-u+(d-p)),t.copy(i).addScaledVector(sf,o);const m=1/(g+_+f);return a=_*m,o=f*m,t.copy(n).addScaledVector(Ar,a).addScaledVector(Tr,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let J_=0;class In extends Li{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:J_++}),this.uuid=ei(),this.name="",this.type="Material",this.blending=Ks,this.side=Ci,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=qu,this.blendDst=Yu,this.blendEquation=Vs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=bl,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Jp,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ml,this.stencilZFail=ml,this.stencilZPass=ml,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ks&&(n.blending=this.blending),this.side!==Ci&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const a=[];for(const o in r){const l=r[o];delete l.metadata,a.push(l)}return a}if(t){const r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const cm={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},us={h:0,s:0,l:0},Eo={h:0,s:0,l:0};function Tc(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Oe{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=tn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,It.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=It.workingColorSpace){return this.r=e,this.g=t,this.b=n,It.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=It.workingColorSpace){if(e=ih(e,1),t=nn(t,0,1),n=nn(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=Tc(a,r,e+1/3),this.g=Tc(a,r,e),this.b=Tc(a,r,e-1/3)}return It.toWorkingColorSpace(this,i),this}setStyle(e,t=tn){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],o=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],a=r.length;if(a===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=tn){const n=cm[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Xr(e.r),this.g=Xr(e.g),this.b=Xr(e.b),this}copyLinearToSRGB(e){return this.r=pc(e.r),this.g=pc(e.g),this.b=pc(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=tn){return It.fromWorkingColorSpace(Cn.copy(this),e),Math.round(nn(Cn.r*255,0,255))*65536+Math.round(nn(Cn.g*255,0,255))*256+Math.round(nn(Cn.b*255,0,255))}getHexString(e=tn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=It.workingColorSpace){It.fromWorkingColorSpace(Cn.copy(this),t);const n=Cn.r,i=Cn.g,r=Cn.b,a=Math.max(n,i,r),o=Math.min(n,i,r);let l,c;const u=(o+a)/2;if(o===a)l=0,c=0;else{const h=a-o;switch(c=u<=.5?h/(a+o):h/(2-a-o),a){case n:l=(i-r)/h+(i<r?6:0);break;case i:l=(r-n)/h+2;break;case r:l=(n-i)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=It.workingColorSpace){return It.fromWorkingColorSpace(Cn.copy(this),t),e.r=Cn.r,e.g=Cn.g,e.b=Cn.b,e}getStyle(e=tn){It.fromWorkingColorSpace(Cn.copy(this),e);const t=Cn.r,n=Cn.g,i=Cn.b;return e!==tn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(us),this.setHSL(us.h+e,us.s+t,us.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(us),e.getHSL(Eo);const n=Sa(us.h,Eo.h,t),i=Sa(us.s,Eo.s,t),r=Sa(us.l,Eo.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Cn=new Oe;Oe.NAMES=cm;class pi extends In{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Oe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ja,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Yi=K_();function K_(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,i[l]=-c-1,i[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,i[l]=13,i[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,u=0;for(;!(c&8388608);)c<<=1,u-=8388608;c&=-8388609,u+=947912704,r[l]=c|u}for(let l=1024;l<2048;++l)r[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)a[l]=l<<23;a[31]=1199570944,a[32]=2147483648;for(let l=33;l<63;++l)a[l]=2147483648+(l-32<<23);a[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(o[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:a,offsetTable:o}}function Wn(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=nn(s,-65504,65504),Yi.floatView[0]=s;const e=Yi.uint32View[0],t=e>>23&511;return Yi.baseTable[t]+((e&8388607)>>Yi.shiftTable[t])}function ya(s){const e=s>>10;return Yi.uint32View[0]=Yi.mantissaTable[Yi.offsetTable[e]+(s&1023)]+Yi.exponentTable[e],Yi.floatView[0]}const $_={toHalfFloat:Wn,fromHalfFloat:ya},hn=new D,Ao=new pe;class Pt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Oa,this.updateRange={offset:0,count:-1},this.gpuType=Mi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Ao.fromBufferAttribute(this,t),Ao.applyMatrix3(e),this.setXY(t,Ao.x,Ao.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)hn.fromBufferAttribute(this,t),hn.applyMatrix3(e),this.setXYZ(t,hn.x,hn.y,hn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)hn.fromBufferAttribute(this,t),hn.applyMatrix4(e),this.setXYZ(t,hn.x,hn.y,hn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)hn.fromBufferAttribute(this,t),hn.applyNormalMatrix(e),this.setXYZ(t,hn.x,hn.y,hn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)hn.fromBufferAttribute(this,t),hn.transformDirection(e),this.setXYZ(t,hn.x,hn.y,hn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=qn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=xt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=qn(t,this.array)),t}setX(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=qn(t,this.array)),t}setY(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=qn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=qn(t,this.array)),t}setW(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array),i=xt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array),i=xt(i,this.array),r=xt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Oa&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class Q_ extends Pt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class e0 extends Pt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class t0 extends Pt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class n0 extends Pt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class ah extends Pt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class i0 extends Pt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class oh extends Pt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class s0 extends Pt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=ya(this.array[e*this.itemSize]);return this.normalized&&(t=qn(t,this.array)),t}setX(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize]=Wn(t),this}getY(e){let t=ya(this.array[e*this.itemSize+1]);return this.normalized&&(t=qn(t,this.array)),t}setY(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+1]=Wn(t),this}getZ(e){let t=ya(this.array[e*this.itemSize+2]);return this.normalized&&(t=qn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+2]=Wn(t),this}getW(e){let t=ya(this.array[e*this.itemSize+3]);return this.normalized&&(t=qn(t,this.array)),t}setW(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+3]=Wn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array)),this.array[e+0]=Wn(t),this.array[e+1]=Wn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array),i=xt(i,this.array)),this.array[e+0]=Wn(t),this.array[e+1]=Wn(n),this.array[e+2]=Wn(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array),i=xt(i,this.array),r=xt(r,this.array)),this.array[e+0]=Wn(t),this.array[e+1]=Wn(n),this.array[e+2]=Wn(i),this.array[e+3]=Wn(r),this}}class Be extends Pt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class r0 extends Pt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let a0=0;const si=new at,wc=new Rt,wr=new D,Kn=new Pi,fa=new Pi,vn=new D;class yt extends Li{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:a0++}),this.uuid=ei(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(am(e)?oh:ah)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new bt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return si.makeRotationFromQuaternion(e),this.applyMatrix4(si),this}rotateX(e){return si.makeRotationX(e),this.applyMatrix4(si),this}rotateY(e){return si.makeRotationY(e),this.applyMatrix4(si),this}rotateZ(e){return si.makeRotationZ(e),this.applyMatrix4(si),this}translate(e,t,n){return si.makeTranslation(e,t,n),this.applyMatrix4(si),this}scale(e,t,n){return si.makeScale(e,t,n),this.applyMatrix4(si),this}lookAt(e){return wc.lookAt(e),wc.updateMatrix(),this.applyMatrix4(wc.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(wr).negate(),this.translate(wr.x,wr.y,wr.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Be(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Pi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Kn.setFromBufferAttribute(r),this.morphTargetsRelative?(vn.addVectors(this.boundingBox.min,Kn.min),this.boundingBox.expandByPoint(vn),vn.addVectors(this.boundingBox.max,Kn.max),this.boundingBox.expandByPoint(vn)):(this.boundingBox.expandByPoint(Kn.min),this.boundingBox.expandByPoint(Kn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new gi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if(Kn.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const o=t[r];fa.setFromBufferAttribute(o),this.morphTargetsRelative?(vn.addVectors(Kn.min,fa.min),Kn.expandByPoint(vn),vn.addVectors(Kn.max,fa.max),Kn.expandByPoint(vn)):(Kn.expandByPoint(fa.min),Kn.expandByPoint(fa.max))}Kn.getCenter(n);let i=0;for(let r=0,a=e.count;r<a;r++)vn.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(vn));if(t)for(let r=0,a=t.length;r<a;r++){const o=t[r],l=this.morphTargetsRelative;for(let c=0,u=o.count;c<u;c++)vn.fromBufferAttribute(o,c),l&&(wr.fromBufferAttribute(e,c),vn.add(wr)),i=Math.max(i,n.distanceToSquared(vn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,o=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Pt(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let R=0;R<o;R++)c[R]=new D,u[R]=new D;const h=new D,f=new D,d=new D,p=new pe,_=new pe,g=new pe,m=new D,y=new D;function v(R,V,j){h.fromArray(i,R*3),f.fromArray(i,V*3),d.fromArray(i,j*3),p.fromArray(a,R*2),_.fromArray(a,V*2),g.fromArray(a,j*2),f.sub(h),d.sub(h),_.sub(p),g.sub(p);const ne=1/(_.x*g.y-g.x*_.y);isFinite(ne)&&(m.copy(f).multiplyScalar(g.y).addScaledVector(d,-_.y).multiplyScalar(ne),y.copy(d).multiplyScalar(_.x).addScaledVector(f,-g.x).multiplyScalar(ne),c[R].add(m),c[V].add(m),c[j].add(m),u[R].add(y),u[V].add(y),u[j].add(y))}let x=this.groups;x.length===0&&(x=[{start:0,count:n.length}]);for(let R=0,V=x.length;R<V;++R){const j=x[R],ne=j.start,F=j.count;for(let H=ne,B=ne+F;H<B;H+=3)v(n[H+0],n[H+1],n[H+2])}const E=new D,w=new D,A=new D,P=new D;function M(R){A.fromArray(r,R*3),P.copy(A);const V=c[R];E.copy(V),E.sub(A.multiplyScalar(A.dot(V))).normalize(),w.crossVectors(P,V);const ne=w.dot(u[R])<0?-1:1;l[R*4]=E.x,l[R*4+1]=E.y,l[R*4+2]=E.z,l[R*4+3]=ne}for(let R=0,V=x.length;R<V;++R){const j=x[R],ne=j.start,F=j.count;for(let H=ne,B=ne+F;H<B;H+=3)M(n[H+0]),M(n[H+1]),M(n[H+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Pt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const i=new D,r=new D,a=new D,o=new D,l=new D,c=new D,u=new D,h=new D;if(e)for(let f=0,d=e.count;f<d;f+=3){const p=e.getX(f+0),_=e.getX(f+1),g=e.getX(f+2);i.fromBufferAttribute(t,p),r.fromBufferAttribute(t,_),a.fromBufferAttribute(t,g),u.subVectors(a,r),h.subVectors(i,r),u.cross(h),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,_),c.fromBufferAttribute(n,g),o.add(u),l.add(u),c.add(u),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(_,l.x,l.y,l.z),n.setXYZ(g,c.x,c.y,c.z)}else for(let f=0,d=t.count;f<d;f+=3)i.fromBufferAttribute(t,f+0),r.fromBufferAttribute(t,f+1),a.fromBufferAttribute(t,f+2),u.subVectors(a,r),h.subVectors(i,r),u.cross(h),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)vn.fromBufferAttribute(e,t),vn.normalize(),e.setXYZ(t,vn.x,vn.y,vn.z)}toNonIndexed(){function e(o,l){const c=o.array,u=o.itemSize,h=o.normalized,f=new c.constructor(l.length*u);let d=0,p=0;for(let _=0,g=l.length;_<g;_++){o.isInterleavedBufferAttribute?d=l[_]*o.data.stride+o.offset:d=l[_]*u;for(let m=0;m<u;m++)f[p++]=c[d++]}return new Pt(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new yt,n=this.index.array,i=this.attributes;for(const o in i){const l=i[o],c=e(l,n);t.setAttribute(o,c)}const r=this.morphAttributes;for(const o in r){const l=[],c=r[o];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=e(f,n);l.push(d)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h];u.push(d.toJSON(e.data))}u.length>0&&(i[l]=u,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(t))}const r=e.morphAttributes;for(const c in r){const u=[],h=r[c];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let c=0,u=a.length;c<u;c++){const h=a[c];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const rf=new at,Ps=new cr,To=new gi,af=new D,Cr=new D,Rr=new D,Ir=new D,Cc=new D,wo=new D,Co=new pe,Ro=new pe,Io=new pe,of=new D,lf=new D,cf=new D,Lo=new D,Po=new D;class dn extends Rt{constructor(e=new yt,t=new pi){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const o=this.morphTargetInfluences;if(r&&o){wo.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const u=o[l],h=r[l];u!==0&&(Cc.fromBufferAttribute(h,e),a?wo.addScaledVector(Cc,u):wo.addScaledVector(Cc.sub(t),u))}t.add(wo)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),To.copy(n.boundingSphere),To.applyMatrix4(r),Ps.copy(e.ray).recast(e.near),!(To.containsPoint(Ps.origin)===!1&&(Ps.intersectSphere(To,af)===null||Ps.origin.distanceToSquared(af)>(e.far-e.near)**2))&&(rf.copy(r).invert(),Ps.copy(e.ray).applyMatrix4(rf),!(n.boundingBox!==null&&Ps.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Ps)))}_computeIntersections(e,t,n){let i;const r=this.geometry,a=this.material,o=r.index,l=r.attributes.position,c=r.attributes.uv,u=r.attributes.uv1,h=r.attributes.normal,f=r.groups,d=r.drawRange;if(o!==null)if(Array.isArray(a))for(let p=0,_=f.length;p<_;p++){const g=f[p],m=a[g.materialIndex],y=Math.max(g.start,d.start),v=Math.min(o.count,Math.min(g.start+g.count,d.start+d.count));for(let x=y,E=v;x<E;x+=3){const w=o.getX(x),A=o.getX(x+1),P=o.getX(x+2);i=Do(this,m,e,n,c,u,h,w,A,P),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,d.start),_=Math.min(o.count,d.start+d.count);for(let g=p,m=_;g<m;g+=3){const y=o.getX(g),v=o.getX(g+1),x=o.getX(g+2);i=Do(this,a,e,n,c,u,h,y,v,x),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}else if(l!==void 0)if(Array.isArray(a))for(let p=0,_=f.length;p<_;p++){const g=f[p],m=a[g.materialIndex],y=Math.max(g.start,d.start),v=Math.min(l.count,Math.min(g.start+g.count,d.start+d.count));for(let x=y,E=v;x<E;x+=3){const w=x,A=x+1,P=x+2;i=Do(this,m,e,n,c,u,h,w,A,P),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,d.start),_=Math.min(l.count,d.start+d.count);for(let g=p,m=_;g<m;g+=3){const y=g,v=g+1,x=g+2;i=Do(this,a,e,n,c,u,h,y,v,x),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}}}function o0(s,e,t,n,i,r,a,o){let l;if(e.side===Nn?l=n.intersectTriangle(a,r,i,!0,o):l=n.intersectTriangle(i,r,a,e.side===Ci,o),l===null)return null;Po.copy(o),Po.applyMatrix4(s.matrixWorld);const c=t.ray.origin.distanceTo(Po);return c<t.near||c>t.far?null:{distance:c,point:Po.clone(),object:s}}function Do(s,e,t,n,i,r,a,o,l,c){s.getVertexPosition(o,Cr),s.getVertexPosition(l,Rr),s.getVertexPosition(c,Ir);const u=o0(s,e,t,n,Cr,Rr,Ir,Lo);if(u){i&&(Co.fromBufferAttribute(i,o),Ro.fromBufferAttribute(i,l),Io.fromBufferAttribute(i,c),u.uv=Xn.getInterpolation(Lo,Cr,Rr,Ir,Co,Ro,Io,new pe)),r&&(Co.fromBufferAttribute(r,o),Ro.fromBufferAttribute(r,l),Io.fromBufferAttribute(r,c),u.uv1=Xn.getInterpolation(Lo,Cr,Rr,Ir,Co,Ro,Io,new pe),u.uv2=u.uv1),a&&(of.fromBufferAttribute(a,o),lf.fromBufferAttribute(a,l),cf.fromBufferAttribute(a,c),u.normal=Xn.getInterpolation(Lo,Cr,Rr,Ir,of,lf,cf,new D),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const h={a:o,b:l,c,normal:new D,materialIndex:0};Xn.getNormal(Cr,Rr,Ir,h.normal),u.face=h}return u}class ur extends yt{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const o=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const l=[],c=[],u=[],h=[];let f=0,d=0;p("z","y","x",-1,-1,n,t,e,a,r,0),p("z","y","x",1,-1,n,t,-e,a,r,1),p("x","z","y",1,1,e,n,t,i,a,2),p("x","z","y",1,-1,e,n,-t,i,a,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new Be(c,3)),this.setAttribute("normal",new Be(u,3)),this.setAttribute("uv",new Be(h,2));function p(_,g,m,y,v,x,E,w,A,P,M){const R=x/A,V=E/P,j=x/2,ne=E/2,F=w/2,H=A+1,B=P+1;let q=0,ee=0;const Z=new D;for(let ie=0;ie<B;ie++){const G=ie*V-ne;for(let Y=0;Y<H;Y++){const ce=Y*R-j;Z[_]=ce*y,Z[g]=G*v,Z[m]=F,c.push(Z.x,Z.y,Z.z),Z[_]=0,Z[g]=0,Z[m]=w>0?1:-1,u.push(Z.x,Z.y,Z.z),h.push(Y/A),h.push(1-ie/P),q+=1}}for(let ie=0;ie<P;ie++)for(let G=0;G<A;G++){const Y=f+G+H*ie,ce=f+G+H*(ie+1),ae=f+(G+1)+H*(ie+1),ue=f+(G+1)+H*ie;l.push(Y,ce,ue),l.push(ce,ae,ue),ee+=6}o.addGroup(d,ee,M),d+=ee,f+=q}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ur(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Kr(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Pn(s){const e={};for(let t=0;t<s.length;t++){const n=Kr(s[t]);for(const i in n)e[i]=n[i]}return e}function l0(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function um(s){return s.getRenderTarget()===null?s.outputColorSpace:It.workingColorSpace}const hm={clone:Kr,merge:Pn};var c0=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,u0=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ai extends In{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=c0,this.fragmentShader=u0,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Kr(e.uniforms),this.uniformsGroups=l0(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Ol extends Rt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new at,this.projectionMatrix=new at,this.projectionMatrixInverse=new at,this.coordinateSystem=Ei}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class fn extends Ol{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Jr*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan($s*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Jr*2*Math.atan(Math.tan($s*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan($s*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;r+=a.offsetX*i/l,t-=a.offsetY*n/c,i*=a.width/l,n*=a.height/c}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Lr=-90,Pr=1;class fm extends Rt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new fn(Lr,Pr,e,t);i.layers=this.layers,this.add(i);const r=new fn(Lr,Pr,e,t);r.layers=this.layers,this.add(r);const a=new fn(Lr,Pr,e,t);a.layers=this.layers,this.add(a);const o=new fn(Lr,Pr,e,t);o.layers=this.layers,this.add(o);const l=new fn(Lr,Pr,e,t);l.layers=this.layers,this.add(l);const c=new fn(Lr,Pr,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,a,o,l]=t;for(const c of t)this.remove(c);if(e===Ei)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Fa)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,a,o,l,c,u]=this.children,h=e.getRenderTarget(),f=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,a),e.setRenderTarget(n,2,i),e.render(t,o),e.setRenderTarget(n,3,i),e.render(t,l),e.setRenderTarget(n,4,i),e.render(t,c),n.texture.generateMipmaps=_,e.setRenderTarget(n,5,i),e.render(t,u),e.setRenderTarget(h,f,d),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Ka extends un{constructor(e,t,n,i,r,a,o,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:ts,super(e,t,n,i,r,a,o,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class dm extends ii{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(Ma("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Qi?tn:Qn),this.texture=new Ka(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:ln}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new ur(5,5,5),r=new ai({name:"CubemapFromEquirect",uniforms:Kr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Nn,blending:Ji});r.uniforms.tEquirect.value=t;const a=new dn(i,r),o=t.minFilter;return t.minFilter===ns&&(t.minFilter=ln),new fm(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}const Rc=new D,h0=new D,f0=new bt;class Xi{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Rc.subVectors(n,t).cross(h0.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Rc),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||f0.getNormalMatrix(e),i=this.coplanarPoint(Rc).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ds=new gi,No=new D;class Fl{constructor(e=new Xi,t=new Xi,n=new Xi,i=new Xi,r=new Xi,a=new Xi){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Ei){const n=this.planes,i=e.elements,r=i[0],a=i[1],o=i[2],l=i[3],c=i[4],u=i[5],h=i[6],f=i[7],d=i[8],p=i[9],_=i[10],g=i[11],m=i[12],y=i[13],v=i[14],x=i[15];if(n[0].setComponents(l-r,f-c,g-d,x-m).normalize(),n[1].setComponents(l+r,f+c,g+d,x+m).normalize(),n[2].setComponents(l+a,f+u,g+p,x+y).normalize(),n[3].setComponents(l-a,f-u,g-p,x-y).normalize(),n[4].setComponents(l-o,f-h,g-_,x-v).normalize(),t===Ei)n[5].setComponents(l+o,f+h,g+_,x+v).normalize();else if(t===Fa)n[5].setComponents(o,h,_,v).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Ds.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Ds.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Ds)}intersectsSprite(e){return Ds.center.set(0,0,0),Ds.radius=.7071067811865476,Ds.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ds)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(No.x=i.normal.x>0?e.max.x:e.min.x,No.y=i.normal.y>0?e.max.y:e.min.y,No.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(No)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function pm(){let s=null,e=!1,t=null,n=null;function i(r,a){t(r,a),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function d0(s,e){const t=e.isWebGL2,n=new WeakMap;function i(c,u){const h=c.array,f=c.usage,d=s.createBuffer();s.bindBuffer(u,d),s.bufferData(u,h,f),c.onUploadCallback();let p;if(h instanceof Float32Array)p=s.FLOAT;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)p=s.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=s.UNSIGNED_SHORT;else if(h instanceof Int16Array)p=s.SHORT;else if(h instanceof Uint32Array)p=s.UNSIGNED_INT;else if(h instanceof Int32Array)p=s.INT;else if(h instanceof Int8Array)p=s.BYTE;else if(h instanceof Uint8Array)p=s.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)p=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:d,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function r(c,u,h){const f=u.array,d=u.updateRange;s.bindBuffer(h,c),d.count===-1?s.bufferSubData(h,0,f):(t?s.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):s.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1),u.onUploadCallback()}function a(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(s.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=n.get(c);(!f||f.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,i(c,u)):h.version<c.version&&(r(h.buffer,c,u),h.version=c.version)}return{get:a,remove:o,update:l}}class ta extends yt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,o=Math.floor(n),l=Math.floor(i),c=o+1,u=l+1,h=e/o,f=t/l,d=[],p=[],_=[],g=[];for(let m=0;m<u;m++){const y=m*f-a;for(let v=0;v<c;v++){const x=v*h-r;p.push(x,-y,0),_.push(0,0,1),g.push(v/o),g.push(1-m/l)}}for(let m=0;m<l;m++)for(let y=0;y<o;y++){const v=y+c*m,x=y+c*(m+1),E=y+1+c*(m+1),w=y+1+c*m;d.push(v,x,w),d.push(x,E,w)}this.setIndex(d),this.setAttribute("position",new Be(p,3)),this.setAttribute("normal",new Be(_,3)),this.setAttribute("uv",new Be(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ta(e.width,e.height,e.widthSegments,e.heightSegments)}}var p0=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,m0=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,g0=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,_0=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,v0=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,y0=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,x0=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,b0=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,S0=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,M0=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,E0=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,A0=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,T0=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,w0=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,C0=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,R0=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,I0=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,L0=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,P0=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,D0=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,N0=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,U0=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,O0=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,F0=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,k0=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,B0=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,z0=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,H0=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,G0="gl_FragColor = linearToOutputTexel( gl_FragColor );",V0=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,W0=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,X0=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,q0=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Y0=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,j0=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Z0=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,J0=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,K0=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,$0=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Q0=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,ev=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,tv=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,nv=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,iv=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,sv=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,rv=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,av=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,ov=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,lv=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,cv=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,uv=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,hv=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,fv=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal;
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,dv=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,pv=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,mv=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,gv=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,_v=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,vv=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,yv=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,xv=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,bv=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Sv=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Mv=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Ev=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Av=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Tv=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,wv=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Cv=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Rv=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Iv=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Lv=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Pv=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Dv=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Nv=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Uv=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,Ov=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Fv=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,kv=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Bv=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,zv=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Hv=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Gv=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Vv=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Wv=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Xv=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,qv=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Yv=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,jv=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Zv=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Jv=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Kv=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,$v=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,Qv=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,ey=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,ty=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,ny=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,iy=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,sy=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,ry=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,ay=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,oy=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,ly=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,cy=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,uy=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const hy=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,fy=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,dy=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,py=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,my=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,gy=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,_y=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,vy=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,yy=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,xy=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,by=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Sy=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,My=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ey=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Ay=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Ty=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wy=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Cy=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ry=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Iy=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ly=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Py=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Dy=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ny=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Uy=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Oy=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Fy=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ky=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,By=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,zy=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Hy=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Gy=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Vy=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Wy=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,gt={alphahash_fragment:p0,alphahash_pars_fragment:m0,alphamap_fragment:g0,alphamap_pars_fragment:_0,alphatest_fragment:v0,alphatest_pars_fragment:y0,aomap_fragment:x0,aomap_pars_fragment:b0,begin_vertex:S0,beginnormal_vertex:M0,bsdfs:E0,iridescence_fragment:A0,bumpmap_pars_fragment:T0,clipping_planes_fragment:w0,clipping_planes_pars_fragment:C0,clipping_planes_pars_vertex:R0,clipping_planes_vertex:I0,color_fragment:L0,color_pars_fragment:P0,color_pars_vertex:D0,color_vertex:N0,common:U0,cube_uv_reflection_fragment:O0,defaultnormal_vertex:F0,displacementmap_pars_vertex:k0,displacementmap_vertex:B0,emissivemap_fragment:z0,emissivemap_pars_fragment:H0,colorspace_fragment:G0,colorspace_pars_fragment:V0,envmap_fragment:W0,envmap_common_pars_fragment:X0,envmap_pars_fragment:q0,envmap_pars_vertex:Y0,envmap_physical_pars_fragment:rv,envmap_vertex:j0,fog_vertex:Z0,fog_pars_vertex:J0,fog_fragment:K0,fog_pars_fragment:$0,gradientmap_pars_fragment:Q0,lightmap_fragment:ev,lightmap_pars_fragment:tv,lights_lambert_fragment:nv,lights_lambert_pars_fragment:iv,lights_pars_begin:sv,lights_toon_fragment:av,lights_toon_pars_fragment:ov,lights_phong_fragment:lv,lights_phong_pars_fragment:cv,lights_physical_fragment:uv,lights_physical_pars_fragment:hv,lights_fragment_begin:fv,lights_fragment_maps:dv,lights_fragment_end:pv,logdepthbuf_fragment:mv,logdepthbuf_pars_fragment:gv,logdepthbuf_pars_vertex:_v,logdepthbuf_vertex:vv,map_fragment:yv,map_pars_fragment:xv,map_particle_fragment:bv,map_particle_pars_fragment:Sv,metalnessmap_fragment:Mv,metalnessmap_pars_fragment:Ev,morphcolor_vertex:Av,morphnormal_vertex:Tv,morphtarget_pars_vertex:wv,morphtarget_vertex:Cv,normal_fragment_begin:Rv,normal_fragment_maps:Iv,normal_pars_fragment:Lv,normal_pars_vertex:Pv,normal_vertex:Dv,normalmap_pars_fragment:Nv,clearcoat_normal_fragment_begin:Uv,clearcoat_normal_fragment_maps:Ov,clearcoat_pars_fragment:Fv,iridescence_pars_fragment:kv,opaque_fragment:Bv,packing:zv,premultiplied_alpha_fragment:Hv,project_vertex:Gv,dithering_fragment:Vv,dithering_pars_fragment:Wv,roughnessmap_fragment:Xv,roughnessmap_pars_fragment:qv,shadowmap_pars_fragment:Yv,shadowmap_pars_vertex:jv,shadowmap_vertex:Zv,shadowmask_pars_fragment:Jv,skinbase_vertex:Kv,skinning_pars_vertex:$v,skinning_vertex:Qv,skinnormal_vertex:ey,specularmap_fragment:ty,specularmap_pars_fragment:ny,tonemapping_fragment:iy,tonemapping_pars_fragment:sy,transmission_fragment:ry,transmission_pars_fragment:ay,uv_pars_fragment:oy,uv_pars_vertex:ly,uv_vertex:cy,worldpos_vertex:uy,background_vert:hy,background_frag:fy,backgroundCube_vert:dy,backgroundCube_frag:py,cube_vert:my,cube_frag:gy,depth_vert:_y,depth_frag:vy,distanceRGBA_vert:yy,distanceRGBA_frag:xy,equirect_vert:by,equirect_frag:Sy,linedashed_vert:My,linedashed_frag:Ey,meshbasic_vert:Ay,meshbasic_frag:Ty,meshlambert_vert:wy,meshlambert_frag:Cy,meshmatcap_vert:Ry,meshmatcap_frag:Iy,meshnormal_vert:Ly,meshnormal_frag:Py,meshphong_vert:Dy,meshphong_frag:Ny,meshphysical_vert:Uy,meshphysical_frag:Oy,meshtoon_vert:Fy,meshtoon_frag:ky,points_vert:By,points_frag:zy,shadow_vert:Hy,shadow_frag:Gy,sprite_vert:Vy,sprite_frag:Wy},Pe={common:{diffuse:{value:new Oe(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new bt},alphaMap:{value:null},alphaMapTransform:{value:new bt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new bt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new bt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new bt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new bt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new bt},normalScale:{value:new pe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new bt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new bt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new bt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new bt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Oe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Oe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new bt},alphaTest:{value:0},uvTransform:{value:new bt}},sprite:{diffuse:{value:new Oe(16777215)},opacity:{value:1},center:{value:new pe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new bt},alphaMap:{value:null},alphaMapTransform:{value:new bt},alphaTest:{value:0}}},ui={basic:{uniforms:Pn([Pe.common,Pe.specularmap,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.fog]),vertexShader:gt.meshbasic_vert,fragmentShader:gt.meshbasic_frag},lambert:{uniforms:Pn([Pe.common,Pe.specularmap,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.fog,Pe.lights,{emissive:{value:new Oe(0)}}]),vertexShader:gt.meshlambert_vert,fragmentShader:gt.meshlambert_frag},phong:{uniforms:Pn([Pe.common,Pe.specularmap,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.fog,Pe.lights,{emissive:{value:new Oe(0)},specular:{value:new Oe(1118481)},shininess:{value:30}}]),vertexShader:gt.meshphong_vert,fragmentShader:gt.meshphong_frag},standard:{uniforms:Pn([Pe.common,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.roughnessmap,Pe.metalnessmap,Pe.fog,Pe.lights,{emissive:{value:new Oe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag},toon:{uniforms:Pn([Pe.common,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.gradientmap,Pe.fog,Pe.lights,{emissive:{value:new Oe(0)}}]),vertexShader:gt.meshtoon_vert,fragmentShader:gt.meshtoon_frag},matcap:{uniforms:Pn([Pe.common,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.fog,{matcap:{value:null}}]),vertexShader:gt.meshmatcap_vert,fragmentShader:gt.meshmatcap_frag},points:{uniforms:Pn([Pe.points,Pe.fog]),vertexShader:gt.points_vert,fragmentShader:gt.points_frag},dashed:{uniforms:Pn([Pe.common,Pe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:gt.linedashed_vert,fragmentShader:gt.linedashed_frag},depth:{uniforms:Pn([Pe.common,Pe.displacementmap]),vertexShader:gt.depth_vert,fragmentShader:gt.depth_frag},normal:{uniforms:Pn([Pe.common,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,{opacity:{value:1}}]),vertexShader:gt.meshnormal_vert,fragmentShader:gt.meshnormal_frag},sprite:{uniforms:Pn([Pe.sprite,Pe.fog]),vertexShader:gt.sprite_vert,fragmentShader:gt.sprite_frag},background:{uniforms:{uvTransform:{value:new bt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:gt.background_vert,fragmentShader:gt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:gt.backgroundCube_vert,fragmentShader:gt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:gt.cube_vert,fragmentShader:gt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:gt.equirect_vert,fragmentShader:gt.equirect_frag},distanceRGBA:{uniforms:Pn([Pe.common,Pe.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:gt.distanceRGBA_vert,fragmentShader:gt.distanceRGBA_frag},shadow:{uniforms:Pn([Pe.lights,Pe.fog,{color:{value:new Oe(0)},opacity:{value:1}}]),vertexShader:gt.shadow_vert,fragmentShader:gt.shadow_frag}};ui.physical={uniforms:Pn([ui.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new bt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new bt},clearcoatNormalScale:{value:new pe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new bt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new bt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new bt},sheen:{value:0},sheenColor:{value:new Oe(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new bt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new bt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new bt},transmissionSamplerSize:{value:new pe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new bt},attenuationDistance:{value:0},attenuationColor:{value:new Oe(0)},specularColor:{value:new Oe(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new bt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new bt},anisotropyVector:{value:new pe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new bt}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag};const Uo={r:0,b:0,g:0};function Xy(s,e,t,n,i,r,a){const o=new Oe(0);let l=r===!0?0:1,c,u,h=null,f=0,d=null;function p(g,m){let y=!1,v=m.isScene===!0?m.background:null;v&&v.isTexture&&(v=(m.backgroundBlurriness>0?t:e).get(v)),v===null?_(o,l):v&&v.isColor&&(_(v,1),y=!0);const x=s.xr.getEnvironmentBlendMode();x==="additive"?n.buffers.color.setClear(0,0,0,1,a):x==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(s.autoClear||y)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),v&&(v.isCubeTexture||v.mapping===ea)?(u===void 0&&(u=new dn(new ur(1,1,1),new ai({name:"BackgroundCubeMaterial",uniforms:Kr(ui.backgroundCube.uniforms),vertexShader:ui.backgroundCube.vertexShader,fragmentShader:ui.backgroundCube.fragmentShader,side:Nn,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(E,w,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=v,u.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=m.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,u.material.toneMapped=It.getTransfer(v.colorSpace)!==Ft,(h!==v||f!==v.version||d!==s.toneMapping)&&(u.material.needsUpdate=!0,h=v,f=v.version,d=s.toneMapping),u.layers.enableAll(),g.unshift(u,u.geometry,u.material,0,0,null)):v&&v.isTexture&&(c===void 0&&(c=new dn(new ta(2,2),new ai({name:"BackgroundMaterial",uniforms:Kr(ui.background.uniforms),vertexShader:ui.background.vertexShader,fragmentShader:ui.background.fragmentShader,side:Ci,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=v,c.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,c.material.toneMapped=It.getTransfer(v.colorSpace)!==Ft,v.matrixAutoUpdate===!0&&v.updateMatrix(),c.material.uniforms.uvTransform.value.copy(v.matrix),(h!==v||f!==v.version||d!==s.toneMapping)&&(c.material.needsUpdate=!0,h=v,f=v.version,d=s.toneMapping),c.layers.enableAll(),g.unshift(c,c.geometry,c.material,0,0,null))}function _(g,m){g.getRGB(Uo,um(s)),n.buffers.color.setClear(Uo.r,Uo.g,Uo.b,m,a)}return{getClearColor:function(){return o},setClearColor:function(g,m=1){o.set(g),l=m,_(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(g){l=g,_(o,l)},render:p}}function qy(s,e,t,n){const i=s.getParameter(s.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||r!==null,o={},l=g(null);let c=l,u=!1;function h(F,H,B,q,ee){let Z=!1;if(a){const ie=_(q,B,H);c!==ie&&(c=ie,d(c.object)),Z=m(F,q,B,ee),Z&&y(F,q,B,ee)}else{const ie=H.wireframe===!0;(c.geometry!==q.id||c.program!==B.id||c.wireframe!==ie)&&(c.geometry=q.id,c.program=B.id,c.wireframe=ie,Z=!0)}ee!==null&&t.update(ee,s.ELEMENT_ARRAY_BUFFER),(Z||u)&&(u=!1,P(F,H,B,q),ee!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(ee).buffer))}function f(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function d(F){return n.isWebGL2?s.bindVertexArray(F):r.bindVertexArrayOES(F)}function p(F){return n.isWebGL2?s.deleteVertexArray(F):r.deleteVertexArrayOES(F)}function _(F,H,B){const q=B.wireframe===!0;let ee=o[F.id];ee===void 0&&(ee={},o[F.id]=ee);let Z=ee[H.id];Z===void 0&&(Z={},ee[H.id]=Z);let ie=Z[q];return ie===void 0&&(ie=g(f()),Z[q]=ie),ie}function g(F){const H=[],B=[],q=[];for(let ee=0;ee<i;ee++)H[ee]=0,B[ee]=0,q[ee]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:H,enabledAttributes:B,attributeDivisors:q,object:F,attributes:{},index:null}}function m(F,H,B,q){const ee=c.attributes,Z=H.attributes;let ie=0;const G=B.getAttributes();for(const Y in G)if(G[Y].location>=0){const ae=ee[Y];let ue=Z[Y];if(ue===void 0&&(Y==="instanceMatrix"&&F.instanceMatrix&&(ue=F.instanceMatrix),Y==="instanceColor"&&F.instanceColor&&(ue=F.instanceColor)),ae===void 0||ae.attribute!==ue||ue&&ae.data!==ue.data)return!0;ie++}return c.attributesNum!==ie||c.index!==q}function y(F,H,B,q){const ee={},Z=H.attributes;let ie=0;const G=B.getAttributes();for(const Y in G)if(G[Y].location>=0){let ae=Z[Y];ae===void 0&&(Y==="instanceMatrix"&&F.instanceMatrix&&(ae=F.instanceMatrix),Y==="instanceColor"&&F.instanceColor&&(ae=F.instanceColor));const ue={};ue.attribute=ae,ae&&ae.data&&(ue.data=ae.data),ee[Y]=ue,ie++}c.attributes=ee,c.attributesNum=ie,c.index=q}function v(){const F=c.newAttributes;for(let H=0,B=F.length;H<B;H++)F[H]=0}function x(F){E(F,0)}function E(F,H){const B=c.newAttributes,q=c.enabledAttributes,ee=c.attributeDivisors;B[F]=1,q[F]===0&&(s.enableVertexAttribArray(F),q[F]=1),ee[F]!==H&&((n.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](F,H),ee[F]=H)}function w(){const F=c.newAttributes,H=c.enabledAttributes;for(let B=0,q=H.length;B<q;B++)H[B]!==F[B]&&(s.disableVertexAttribArray(B),H[B]=0)}function A(F,H,B,q,ee,Z,ie){ie===!0?s.vertexAttribIPointer(F,H,B,ee,Z):s.vertexAttribPointer(F,H,B,q,ee,Z)}function P(F,H,B,q){if(n.isWebGL2===!1&&(F.isInstancedMesh||q.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;v();const ee=q.attributes,Z=B.getAttributes(),ie=H.defaultAttributeValues;for(const G in Z){const Y=Z[G];if(Y.location>=0){let ce=ee[G];if(ce===void 0&&(G==="instanceMatrix"&&F.instanceMatrix&&(ce=F.instanceMatrix),G==="instanceColor"&&F.instanceColor&&(ce=F.instanceColor)),ce!==void 0){const ae=ce.normalized,ue=ce.itemSize,he=t.get(ce);if(he===void 0)continue;const ye=he.buffer,we=he.type,ge=he.bytesPerElement,et=n.isWebGL2===!0&&(we===s.INT||we===s.UNSIGNED_INT||ce.gpuType===Ju);if(ce.isInterleavedBufferAttribute){const Ke=ce.data,k=Ke.stride,xe=ce.offset;if(Ke.isInstancedInterleavedBuffer){for(let de=0;de<Y.locationSize;de++)E(Y.location+de,Ke.meshPerAttribute);F.isInstancedMesh!==!0&&q._maxInstanceCount===void 0&&(q._maxInstanceCount=Ke.meshPerAttribute*Ke.count)}else for(let de=0;de<Y.locationSize;de++)x(Y.location+de);s.bindBuffer(s.ARRAY_BUFFER,ye);for(let de=0;de<Y.locationSize;de++)A(Y.location+de,ue/Y.locationSize,we,ae,k*ge,(xe+ue/Y.locationSize*de)*ge,et)}else{if(ce.isInstancedBufferAttribute){for(let Ke=0;Ke<Y.locationSize;Ke++)E(Y.location+Ke,ce.meshPerAttribute);F.isInstancedMesh!==!0&&q._maxInstanceCount===void 0&&(q._maxInstanceCount=ce.meshPerAttribute*ce.count)}else for(let Ke=0;Ke<Y.locationSize;Ke++)x(Y.location+Ke);s.bindBuffer(s.ARRAY_BUFFER,ye);for(let Ke=0;Ke<Y.locationSize;Ke++)A(Y.location+Ke,ue/Y.locationSize,we,ae,ue*ge,ue/Y.locationSize*Ke*ge,et)}}else if(ie!==void 0){const ae=ie[G];if(ae!==void 0)switch(ae.length){case 2:s.vertexAttrib2fv(Y.location,ae);break;case 3:s.vertexAttrib3fv(Y.location,ae);break;case 4:s.vertexAttrib4fv(Y.location,ae);break;default:s.vertexAttrib1fv(Y.location,ae)}}}}w()}function M(){j();for(const F in o){const H=o[F];for(const B in H){const q=H[B];for(const ee in q)p(q[ee].object),delete q[ee];delete H[B]}delete o[F]}}function R(F){if(o[F.id]===void 0)return;const H=o[F.id];for(const B in H){const q=H[B];for(const ee in q)p(q[ee].object),delete q[ee];delete H[B]}delete o[F.id]}function V(F){for(const H in o){const B=o[H];if(B[F.id]===void 0)continue;const q=B[F.id];for(const ee in q)p(q[ee].object),delete q[ee];delete B[F.id]}}function j(){ne(),u=!0,c!==l&&(c=l,d(c.object))}function ne(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:j,resetDefaultState:ne,dispose:M,releaseStatesOfGeometry:R,releaseStatesOfProgram:V,initAttributes:v,enableAttribute:x,disableUnusedAttributes:w}}function Yy(s,e,t,n){const i=n.isWebGL2;let r;function a(c){r=c}function o(c,u){s.drawArrays(r,c,u),t.update(u,r,1)}function l(c,u,h){if(h===0)return;let f,d;if(i)f=s,d="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](r,c,u,h),t.update(u,r,h)}this.setMode=a,this.render=o,this.renderInstances=l}function jy(s,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const A=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(A.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(A){if(A==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";A="mediump"}return A==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&s.constructor.name==="WebGL2RenderingContext";let o=t.precision!==void 0?t.precision:"highp";const l=r(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=a||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,h=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),f=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=s.getParameter(s.MAX_TEXTURE_SIZE),p=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),_=s.getParameter(s.MAX_VERTEX_ATTRIBS),g=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),m=s.getParameter(s.MAX_VARYING_VECTORS),y=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),v=f>0,x=a||e.has("OES_texture_float"),E=v&&x,w=a?s.getParameter(s.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:o,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:p,maxAttributes:_,maxVertexUniforms:g,maxVaryings:m,maxFragmentUniforms:y,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:E,maxSamples:w}}function Zy(s){const e=this;let t=null,n=0,i=!1,r=!1;const a=new Xi,o=new bt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f){const d=h.length!==0||f||n!==0||i;return i=f,n=h.length,d},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(h,f){t=u(h,f,0)},this.setState=function(h,f,d){const p=h.clippingPlanes,_=h.clipIntersection,g=h.clipShadows,m=s.get(h);if(!i||p===null||p.length===0||r&&!g)r?u(null):c();else{const y=r?0:n,v=y*4;let x=m.clippingState||null;l.value=x,x=u(p,f,v,d);for(let E=0;E!==v;++E)x[E]=t[E];m.clippingState=x,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=y}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,f,d,p){const _=h!==null?h.length:0;let g=null;if(_!==0){if(g=l.value,p!==!0||g===null){const m=d+_*4,y=f.matrixWorldInverse;o.getNormalMatrix(y),(g===null||g.length<m)&&(g=new Float32Array(m));for(let v=0,x=d;v!==_;++v,x+=4)a.copy(h[v]).applyMatrix4(y,o),a.normal.toArray(g,x),g[x+3]=a.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,g}}function Jy(s){let e=new WeakMap;function t(a,o){return o===Ta?a.mapping=ts:o===wa&&(a.mapping=xs),a}function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===Ta||o===wa)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=new dm(l.height/2);return c.fromEquirectangularTexture(s,a),e.set(a,c),a.addEventListener("dispose",i),t(c.texture,a.mapping)}else return null}}return a}function i(a){const o=a.target;o.removeEventListener("dispose",i);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class na extends Ol{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,o=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,a=r+c*this.view.width,o-=u*this.view.offsetY,l=o-u*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Vr=4,uf=[.125,.215,.35,.446,.526,.582],Xs=20,Ic=new na,hf=new Oe;let Lc=null;const Gs=(1+Math.sqrt(5))/2,Dr=1/Gs,ff=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,Gs,Dr),new D(0,Gs,-Dr),new D(Dr,0,Gs),new D(-Dr,0,Gs),new D(Gs,Dr,0),new D(-Gs,Dr,0)];class Nu{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Lc=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=mf(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=pf(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Lc),e.scissorTest=!1,Oo(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ts||e.mapping===xs?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Lc=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:ln,minFilter:ln,generateMipmaps:!1,type:Zr,format:$n,colorSpace:Ri,depthBuffer:!1},i=df(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=df(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Ky(r)),this._blurMaterial=$y(r,e,t)}return i}_compileMaterial(e){const t=new dn(this._lodPlanes[0],e);this._renderer.compile(t,Ic)}_sceneToCubeUV(e,t,n,i){const o=new fn(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,f=u.toneMapping;u.getClearColor(hf),u.toneMapping=Ki,u.autoClear=!1;const d=new pi({name:"PMREM.Background",side:Nn,depthWrite:!1,depthTest:!1}),p=new dn(new ur,d);let _=!1;const g=e.background;g?g.isColor&&(d.color.copy(g),e.background=null,_=!0):(d.color.copy(hf),_=!0);for(let m=0;m<6;m++){const y=m%3;y===0?(o.up.set(0,l[m],0),o.lookAt(c[m],0,0)):y===1?(o.up.set(0,0,l[m]),o.lookAt(0,c[m],0)):(o.up.set(0,l[m],0),o.lookAt(0,0,c[m]));const v=this._cubeSize;Oo(i,y*v,m>2?v:0,v,v),u.setRenderTarget(i),_&&u.render(p,o),u.render(e,o)}p.geometry.dispose(),p.material.dispose(),u.toneMapping=f,u.autoClear=h,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===ts||e.mapping===xs;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=mf()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=pf());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new dn(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=e;const l=this._cubeSize;Oo(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(a,Ic)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=ff[(i-1)%ff.length];this._blur(e,i-1,i,r,a)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new dn(this._lodPlanes[i],c),f=c.uniforms,d=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*d):2*Math.PI/(2*Xs-1),_=r/p,g=isFinite(r)?1+Math.floor(u*_):Xs;g>Xs&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Xs}`);const m=[];let y=0;for(let A=0;A<Xs;++A){const P=A/_,M=Math.exp(-P*P/2);m.push(M),A===0?y+=M:A<g&&(y+=2*M)}for(let A=0;A<m.length;A++)m[A]=m[A]/y;f.envMap.value=e.texture,f.samples.value=g,f.weights.value=m,f.latitudinal.value=a==="latitudinal",o&&(f.poleAxis.value=o);const{_lodMax:v}=this;f.dTheta.value=p,f.mipInt.value=v-n;const x=this._sizeLods[i],E=3*x*(i>v-Vr?i-v+Vr:0),w=4*(this._cubeSize-x);Oo(t,E,w,3*x,2*x),l.setRenderTarget(t),l.render(h,Ic)}}function Ky(s){const e=[],t=[],n=[];let i=s;const r=s-Vr+1+uf.length;for(let a=0;a<r;a++){const o=Math.pow(2,i);t.push(o);let l=1/o;a>s-Vr?l=uf[a-s+Vr-1]:a===0&&(l=0),n.push(l);const c=1/(o-2),u=-c,h=1+c,f=[u,u,h,u,h,h,u,u,h,h,u,h],d=6,p=6,_=3,g=2,m=1,y=new Float32Array(_*p*d),v=new Float32Array(g*p*d),x=new Float32Array(m*p*d);for(let w=0;w<d;w++){const A=w%3*2/3-1,P=w>2?0:-1,M=[A,P,0,A+2/3,P,0,A+2/3,P+1,0,A,P,0,A+2/3,P+1,0,A,P+1,0];y.set(M,_*p*w),v.set(f,g*p*w);const R=[w,w,w,w,w,w];x.set(R,m*p*w)}const E=new yt;E.setAttribute("position",new Pt(y,_)),E.setAttribute("uv",new Pt(v,g)),E.setAttribute("faceIndex",new Pt(x,m)),e.push(E),i>Vr&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function df(s,e,t){const n=new ii(s,e,t);return n.texture.mapping=ea,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Oo(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function $y(s,e,t){const n=new Float32Array(Xs),i=new D(0,1,0);return new ai({name:"SphericalGaussianBlur",defines:{n:Xs,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:lh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ji,depthTest:!1,depthWrite:!1})}function pf(){return new ai({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:lh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ji,depthTest:!1,depthWrite:!1})}function mf(){return new ai({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:lh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ji,depthTest:!1,depthWrite:!1})}function lh(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Qy(s){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const l=o.mapping,c=l===Ta||l===wa,u=l===ts||l===xs;if(c||u)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let h=e.get(o);return t===null&&(t=new Nu(s)),h=c?t.fromEquirectangular(o,h):t.fromCubemap(o,h),e.set(o,h),h.texture}else{if(e.has(o))return e.get(o).texture;{const h=o.image;if(c&&h&&h.height>0||u&&h&&i(h)){t===null&&(t=new Nu(s));const f=c?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,f),o.addEventListener("dispose",r),f.texture}else return null}}}return o}function i(o){let l=0;const c=6;for(let u=0;u<c;u++)o[u]!==void 0&&l++;return l===c}function r(o){const l=o.target;l.removeEventListener("dispose",r);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function ex(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function tx(s,e,t,n){const i={},r=new WeakMap;function a(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);for(const p in f.morphAttributes){const _=f.morphAttributes[p];for(let g=0,m=_.length;g<m;g++)e.remove(_[g])}f.removeEventListener("dispose",a),delete i[f.id];const d=r.get(f);d&&(e.remove(d),r.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function o(h,f){return i[f.id]===!0||(f.addEventListener("dispose",a),i[f.id]=!0,t.memory.geometries++),f}function l(h){const f=h.attributes;for(const p in f)e.update(f[p],s.ARRAY_BUFFER);const d=h.morphAttributes;for(const p in d){const _=d[p];for(let g=0,m=_.length;g<m;g++)e.update(_[g],s.ARRAY_BUFFER)}}function c(h){const f=[],d=h.index,p=h.attributes.position;let _=0;if(d!==null){const y=d.array;_=d.version;for(let v=0,x=y.length;v<x;v+=3){const E=y[v+0],w=y[v+1],A=y[v+2];f.push(E,w,w,A,A,E)}}else if(p!==void 0){const y=p.array;_=p.version;for(let v=0,x=y.length/3-1;v<x;v+=3){const E=v+0,w=v+1,A=v+2;f.push(E,w,w,A,A,E)}}else return;const g=new(am(f)?oh:ah)(f,1);g.version=_;const m=r.get(h);m&&e.remove(m),r.set(h,g)}function u(h){const f=r.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return r.get(h)}return{get:o,update:l,getWireframeAttribute:u}}function nx(s,e,t,n){const i=n.isWebGL2;let r;function a(f){r=f}let o,l;function c(f){o=f.type,l=f.bytesPerElement}function u(f,d){s.drawElements(r,d,o,f*l),t.update(d,r,1)}function h(f,d,p){if(p===0)return;let _,g;if(i)_=s,g="drawElementsInstanced";else if(_=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",_===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}_[g](r,d,o,f*l,p),t.update(d,r,p)}this.setMode=a,this.setIndex=c,this.render=u,this.renderInstances=h}function ix(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,o){switch(t.calls++,a){case s.TRIANGLES:t.triangles+=o*(r/3);break;case s.LINES:t.lines+=o*(r/2);break;case s.LINE_STRIP:t.lines+=o*(r-1);break;case s.LINE_LOOP:t.lines+=o*r;break;case s.POINTS:t.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function sx(s,e){return s[0]-e[0]}function rx(s,e){return Math.abs(e[1])-Math.abs(s[1])}function ax(s,e,t){const n={},i=new Float32Array(8),r=new WeakMap,a=new Nt,o=[];for(let c=0;c<8;c++)o[c]=[c,0];function l(c,u,h){const f=c.morphTargetInfluences;if(e.isWebGL2===!0){const d=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,p=d!==void 0?d.length:0;let _=r.get(u);if(_===void 0||_.count!==p){let F=function(){j.dispose(),r.delete(u),u.removeEventListener("dispose",F)};_!==void 0&&_.texture.dispose();const y=u.morphAttributes.position!==void 0,v=u.morphAttributes.normal!==void 0,x=u.morphAttributes.color!==void 0,E=u.morphAttributes.position||[],w=u.morphAttributes.normal||[],A=u.morphAttributes.color||[];let P=0;y===!0&&(P=1),v===!0&&(P=2),x===!0&&(P=3);let M=u.attributes.position.count*P,R=1;M>e.maxTextureSize&&(R=Math.ceil(M/e.maxTextureSize),M=e.maxTextureSize);const V=new Float32Array(M*R*4*p),j=new Nl(V,M,R,p);j.type=Mi,j.needsUpdate=!0;const ne=P*4;for(let H=0;H<p;H++){const B=E[H],q=w[H],ee=A[H],Z=M*R*4*H;for(let ie=0;ie<B.count;ie++){const G=ie*ne;y===!0&&(a.fromBufferAttribute(B,ie),V[Z+G+0]=a.x,V[Z+G+1]=a.y,V[Z+G+2]=a.z,V[Z+G+3]=0),v===!0&&(a.fromBufferAttribute(q,ie),V[Z+G+4]=a.x,V[Z+G+5]=a.y,V[Z+G+6]=a.z,V[Z+G+7]=0),x===!0&&(a.fromBufferAttribute(ee,ie),V[Z+G+8]=a.x,V[Z+G+9]=a.y,V[Z+G+10]=a.z,V[Z+G+11]=ee.itemSize===4?a.w:1)}}_={count:p,texture:j,size:new pe(M,R)},r.set(u,_),u.addEventListener("dispose",F)}let g=0;for(let y=0;y<f.length;y++)g+=f[y];const m=u.morphTargetsRelative?1:1-g;h.getUniforms().setValue(s,"morphTargetBaseInfluence",m),h.getUniforms().setValue(s,"morphTargetInfluences",f),h.getUniforms().setValue(s,"morphTargetsTexture",_.texture,t),h.getUniforms().setValue(s,"morphTargetsTextureSize",_.size)}else{const d=f===void 0?0:f.length;let p=n[u.id];if(p===void 0||p.length!==d){p=[];for(let v=0;v<d;v++)p[v]=[v,0];n[u.id]=p}for(let v=0;v<d;v++){const x=p[v];x[0]=v,x[1]=f[v]}p.sort(rx);for(let v=0;v<8;v++)v<d&&p[v][1]?(o[v][0]=p[v][0],o[v][1]=p[v][1]):(o[v][0]=Number.MAX_SAFE_INTEGER,o[v][1]=0);o.sort(sx);const _=u.morphAttributes.position,g=u.morphAttributes.normal;let m=0;for(let v=0;v<8;v++){const x=o[v],E=x[0],w=x[1];E!==Number.MAX_SAFE_INTEGER&&w?(_&&u.getAttribute("morphTarget"+v)!==_[E]&&u.setAttribute("morphTarget"+v,_[E]),g&&u.getAttribute("morphNormal"+v)!==g[E]&&u.setAttribute("morphNormal"+v,g[E]),i[v]=w,m+=w):(_&&u.hasAttribute("morphTarget"+v)===!0&&u.deleteAttribute("morphTarget"+v),g&&u.hasAttribute("morphNormal"+v)===!0&&u.deleteAttribute("morphNormal"+v),i[v]=0)}const y=u.morphTargetsRelative?1:1-m;h.getUniforms().setValue(s,"morphTargetBaseInfluence",y),h.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:l}}function ox(s,e,t,n){let i=new WeakMap;function r(l){const c=n.render.frame,u=l.geometry,h=e.get(l,u);if(i.get(h)!==c&&(e.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),i.get(l)!==c&&(t.update(l.instanceMatrix,s.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,s.ARRAY_BUFFER),i.set(l,c))),l.isSkinnedMesh){const f=l.skeleton;i.get(f)!==c&&(f.update(),i.set(f,c))}return h}function a(){i=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:r,dispose:a}}const mm=new un,gm=new Nl,_m=new rh,vm=new Ka,gf=[],_f=[],vf=new Float32Array(16),yf=new Float32Array(9),xf=new Float32Array(4);function ia(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=gf[i];if(r===void 0&&(r=new Float32Array(i),gf[i]=r),e!==0){n.toArray(r,0);for(let a=1,o=0;a!==e;++a)o+=t,s[a].toArray(r,o)}return r}function gn(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function _n(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function kl(s,e){let t=_f[e];t===void 0&&(t=new Int32Array(e),_f[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function lx(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function cx(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(gn(t,e))return;s.uniform2fv(this.addr,e),_n(t,e)}}function ux(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(gn(t,e))return;s.uniform3fv(this.addr,e),_n(t,e)}}function hx(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(gn(t,e))return;s.uniform4fv(this.addr,e),_n(t,e)}}function fx(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(gn(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),_n(t,e)}else{if(gn(t,n))return;xf.set(n),s.uniformMatrix2fv(this.addr,!1,xf),_n(t,n)}}function dx(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(gn(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),_n(t,e)}else{if(gn(t,n))return;yf.set(n),s.uniformMatrix3fv(this.addr,!1,yf),_n(t,n)}}function px(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(gn(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),_n(t,e)}else{if(gn(t,n))return;vf.set(n),s.uniformMatrix4fv(this.addr,!1,vf),_n(t,n)}}function mx(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function gx(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(gn(t,e))return;s.uniform2iv(this.addr,e),_n(t,e)}}function _x(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(gn(t,e))return;s.uniform3iv(this.addr,e),_n(t,e)}}function vx(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(gn(t,e))return;s.uniform4iv(this.addr,e),_n(t,e)}}function yx(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function xx(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(gn(t,e))return;s.uniform2uiv(this.addr,e),_n(t,e)}}function bx(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(gn(t,e))return;s.uniform3uiv(this.addr,e),_n(t,e)}}function Sx(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(gn(t,e))return;s.uniform4uiv(this.addr,e),_n(t,e)}}function Mx(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||mm,i)}function Ex(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||_m,i)}function Ax(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||vm,i)}function Tx(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||gm,i)}function wx(s){switch(s){case 5126:return lx;case 35664:return cx;case 35665:return ux;case 35666:return hx;case 35674:return fx;case 35675:return dx;case 35676:return px;case 5124:case 35670:return mx;case 35667:case 35671:return gx;case 35668:case 35672:return _x;case 35669:case 35673:return vx;case 5125:return yx;case 36294:return xx;case 36295:return bx;case 36296:return Sx;case 35678:case 36198:case 36298:case 36306:case 35682:return Mx;case 35679:case 36299:case 36307:return Ex;case 35680:case 36300:case 36308:case 36293:return Ax;case 36289:case 36303:case 36311:case 36292:return Tx}}function Cx(s,e){s.uniform1fv(this.addr,e)}function Rx(s,e){const t=ia(e,this.size,2);s.uniform2fv(this.addr,t)}function Ix(s,e){const t=ia(e,this.size,3);s.uniform3fv(this.addr,t)}function Lx(s,e){const t=ia(e,this.size,4);s.uniform4fv(this.addr,t)}function Px(s,e){const t=ia(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function Dx(s,e){const t=ia(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function Nx(s,e){const t=ia(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function Ux(s,e){s.uniform1iv(this.addr,e)}function Ox(s,e){s.uniform2iv(this.addr,e)}function Fx(s,e){s.uniform3iv(this.addr,e)}function kx(s,e){s.uniform4iv(this.addr,e)}function Bx(s,e){s.uniform1uiv(this.addr,e)}function zx(s,e){s.uniform2uiv(this.addr,e)}function Hx(s,e){s.uniform3uiv(this.addr,e)}function Gx(s,e){s.uniform4uiv(this.addr,e)}function Vx(s,e,t){const n=this.cache,i=e.length,r=kl(t,i);gn(n,r)||(s.uniform1iv(this.addr,r),_n(n,r));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||mm,r[a])}function Wx(s,e,t){const n=this.cache,i=e.length,r=kl(t,i);gn(n,r)||(s.uniform1iv(this.addr,r),_n(n,r));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||_m,r[a])}function Xx(s,e,t){const n=this.cache,i=e.length,r=kl(t,i);gn(n,r)||(s.uniform1iv(this.addr,r),_n(n,r));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||vm,r[a])}function qx(s,e,t){const n=this.cache,i=e.length,r=kl(t,i);gn(n,r)||(s.uniform1iv(this.addr,r),_n(n,r));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||gm,r[a])}function Yx(s){switch(s){case 5126:return Cx;case 35664:return Rx;case 35665:return Ix;case 35666:return Lx;case 35674:return Px;case 35675:return Dx;case 35676:return Nx;case 5124:case 35670:return Ux;case 35667:case 35671:return Ox;case 35668:case 35672:return Fx;case 35669:case 35673:return kx;case 5125:return Bx;case 36294:return zx;case 36295:return Hx;case 36296:return Gx;case 35678:case 36198:case 36298:case 36306:case 35682:return Vx;case 35679:case 36299:case 36307:return Wx;case 35680:case 36300:case 36308:case 36293:return Xx;case 36289:case 36303:case 36311:case 36292:return qx}}class jx{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=wx(t.type)}}class Zx{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=Yx(t.type)}}class Jx{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const o=i[r];o.setValue(e,t[o.id],n)}}}const Pc=/(\w+)(\])?(\[|\.)?/g;function bf(s,e){s.seq.push(e),s.map[e.id]=e}function Kx(s,e,t){const n=s.name,i=n.length;for(Pc.lastIndex=0;;){const r=Pc.exec(n),a=Pc.lastIndex;let o=r[1];const l=r[2]==="]",c=r[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===i){bf(t,c===void 0?new jx(o,s,e):new Zx(o,s,e));break}else{let h=t.map[o];h===void 0&&(h=new Jx(o),bf(t,h)),t=h}}}class gl{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),a=e.getUniformLocation(t,r.name);Kx(r,a,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const o=t[r],l=n[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function Sf(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}let $x=0;function Qx(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let a=i;a<r;a++){const o=a+1;n.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return n.join(`
`)}function eb(s){const e=It.getPrimaries(It.workingColorSpace),t=It.getPrimaries(s);let n;switch(e===t?n="":e===Ua&&t===Na?n="LinearDisplayP3ToLinearSRGB":e===Na&&t===Ua&&(n="LinearSRGBToLinearDisplayP3"),s){case Ri:case Za:return[n,"LinearTransferOETF"];case tn:case Dl:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",s),[n,"LinearTransferOETF"]}}function Mf(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const a=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+Qx(s.getShaderSource(e),a)}else return i}function tb(s,e){const t=eb(e);return`vec4 ${s}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function nb(s,e){let t;switch(e){case Lp:t="Linear";break;case Pp:t="Reinhard";break;case Dp:t="OptimizedCineon";break;case ju:t="ACESFilmic";break;case Np:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function ib(s){return[s.extensionDerivatives||s.envMapCubeUVHeight||s.bumpMap||s.normalMapTangentSpace||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(xa).join(`
`)}function sb(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function rb(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),a=r.name;let o=1;r.type===s.FLOAT_MAT2&&(o=2),r.type===s.FLOAT_MAT3&&(o=3),r.type===s.FLOAT_MAT4&&(o=4),t[a]={type:r.type,location:s.getAttribLocation(e,a),locationSize:o}}return t}function xa(s){return s!==""}function Ef(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Af(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const ab=/^[ \t]*#include +<([\w\d./]+)>/gm;function Uu(s){return s.replace(ab,lb)}const ob=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function lb(s,e){let t=gt[e];if(t===void 0){const n=ob.get(e);if(n!==void 0)t=gt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Uu(t)}const cb=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Tf(s){return s.replace(cb,ub)}function ub(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function wf(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function hb(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===Xu?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===Rl?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Si&&(e="SHADOWMAP_TYPE_VSM"),e}function fb(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case ts:case xs:e="ENVMAP_TYPE_CUBE";break;case ea:e="ENVMAP_TYPE_CUBE_UV";break}return e}function db(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case xs:e="ENVMAP_MODE_REFRACTION";break}return e}function pb(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case ja:e="ENVMAP_BLENDING_MULTIPLY";break;case Rp:e="ENVMAP_BLENDING_MIX";break;case Ip:e="ENVMAP_BLENDING_ADD";break}return e}function mb(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function gb(s,e,t,n){const i=s.getContext(),r=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=hb(t),c=fb(t),u=db(t),h=pb(t),f=mb(t),d=t.isWebGL2?"":ib(t),p=sb(r),_=i.createProgram();let g,m,y=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(xa).join(`
`),g.length>0&&(g+=`
`),m=[d,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(xa).join(`
`),m.length>0&&(m+=`
`)):(g=[wf(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(xa).join(`
`),m=[d,wf(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ki?"#define TONE_MAPPING":"",t.toneMapping!==Ki?gt.tonemapping_pars_fragment:"",t.toneMapping!==Ki?nb("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",gt.colorspace_pars_fragment,tb("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(xa).join(`
`)),a=Uu(a),a=Ef(a,t),a=Af(a,t),o=Uu(o),o=Ef(o,t),o=Af(o,t),a=Tf(a),o=Tf(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,m=["#define varying in",t.glslVersion===Pu?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Pu?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const v=y+g+a,x=y+m+o,E=Sf(i,i.VERTEX_SHADER,v),w=Sf(i,i.FRAGMENT_SHADER,x);if(i.attachShader(_,E),i.attachShader(_,w),t.index0AttributeName!==void 0?i.bindAttribLocation(_,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(_,0,"position"),i.linkProgram(_),s.debug.checkShaderErrors){const M=i.getProgramInfoLog(_).trim(),R=i.getShaderInfoLog(E).trim(),V=i.getShaderInfoLog(w).trim();let j=!0,ne=!0;if(i.getProgramParameter(_,i.LINK_STATUS)===!1)if(j=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,_,E,w);else{const F=Mf(i,E,"vertex"),H=Mf(i,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(_,i.VALIDATE_STATUS)+`

Program Info Log: `+M+`
`+F+`
`+H)}else M!==""?console.warn("THREE.WebGLProgram: Program Info Log:",M):(R===""||V==="")&&(ne=!1);ne&&(this.diagnostics={runnable:j,programLog:M,vertexShader:{log:R,prefix:g},fragmentShader:{log:V,prefix:m}})}i.deleteShader(E),i.deleteShader(w);let A;this.getUniforms=function(){return A===void 0&&(A=new gl(i,_)),A};let P;return this.getAttributes=function(){return P===void 0&&(P=rb(i,_)),P},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(_),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=$x++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=E,this.fragmentShader=w,this}let _b=0;class vb{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new yb(e),t.set(e,n)),n}}class yb{constructor(e){this.id=_b++,this.code=e,this.usedTimes=0}}function xb(s,e,t,n,i,r,a){const o=new Ul,l=new vb,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,f=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(M){return M===0?"uv":`uv${M}`}function g(M,R,V,j,ne){const F=j.fog,H=ne.geometry,B=M.isMeshStandardMaterial?j.environment:null,q=(M.isMeshStandardMaterial?t:e).get(M.envMap||B),ee=q&&q.mapping===ea?q.image.height:null,Z=p[M.type];M.precision!==null&&(d=i.getMaxPrecision(M.precision),d!==M.precision&&console.warn("THREE.WebGLProgram.getParameters:",M.precision,"not supported, using",d,"instead."));const ie=H.morphAttributes.position||H.morphAttributes.normal||H.morphAttributes.color,G=ie!==void 0?ie.length:0;let Y=0;H.morphAttributes.position!==void 0&&(Y=1),H.morphAttributes.normal!==void 0&&(Y=2),H.morphAttributes.color!==void 0&&(Y=3);let ce,ae,ue,he;if(Z){const Mt=ui[Z];ce=Mt.vertexShader,ae=Mt.fragmentShader}else ce=M.vertexShader,ae=M.fragmentShader,l.update(M),ue=l.getVertexShaderID(M),he=l.getFragmentShaderID(M);const ye=s.getRenderTarget(),we=ne.isInstancedMesh===!0,ge=!!M.map,et=!!M.matcap,Ke=!!q,k=!!M.aoMap,xe=!!M.lightMap,de=!!M.bumpMap,X=!!M.normalMap,Q=!!M.displacementMap,Le=!!M.emissiveMap,Ne=!!M.metalnessMap,Fe=!!M.roughnessMap,tt=M.anisotropy>0,mt=M.clearcoat>0,Lt=M.iridescence>0,O=M.sheen>0,C=M.transmission>0,K=tt&&!!M.anisotropyMap,Ae=mt&&!!M.clearcoatMap,be=mt&&!!M.clearcoatNormalMap,Me=mt&&!!M.clearcoatRoughnessMap,qe=Lt&&!!M.iridescenceMap,W=Lt&&!!M.iridescenceThicknessMap,se=O&&!!M.sheenColorMap,U=O&&!!M.sheenRoughnessMap,ve=!!M.specularMap,_e=!!M.specularColorMap,ot=!!M.specularIntensityMap,nt=C&&!!M.transmissionMap,rt=C&&!!M.thicknessMap,Ze=!!M.gradientMap,z=!!M.alphaMap,Ce=M.alphaTest>0,Te=!!M.alphaHash,De=!!M.extensions,Re=!!H.attributes.uv1,Se=!!H.attributes.uv2,je=!!H.attributes.uv3;let ut=Ki;return M.toneMapped&&(ye===null||ye.isXRRenderTarget===!0)&&(ut=s.toneMapping),{isWebGL2:u,shaderID:Z,shaderType:M.type,shaderName:M.name,vertexShader:ce,fragmentShader:ae,defines:M.defines,customVertexShaderID:ue,customFragmentShaderID:he,isRawShaderMaterial:M.isRawShaderMaterial===!0,glslVersion:M.glslVersion,precision:d,instancing:we,instancingColor:we&&ne.instanceColor!==null,supportsVertexTextures:f,outputColorSpace:ye===null?s.outputColorSpace:ye.isXRRenderTarget===!0?ye.texture.colorSpace:Ri,map:ge,matcap:et,envMap:Ke,envMapMode:Ke&&q.mapping,envMapCubeUVHeight:ee,aoMap:k,lightMap:xe,bumpMap:de,normalMap:X,displacementMap:f&&Q,emissiveMap:Le,normalMapObjectSpace:X&&M.normalMapType===Zp,normalMapTangentSpace:X&&M.normalMapType===Ms,metalnessMap:Ne,roughnessMap:Fe,anisotropy:tt,anisotropyMap:K,clearcoat:mt,clearcoatMap:Ae,clearcoatNormalMap:be,clearcoatRoughnessMap:Me,iridescence:Lt,iridescenceMap:qe,iridescenceThicknessMap:W,sheen:O,sheenColorMap:se,sheenRoughnessMap:U,specularMap:ve,specularColorMap:_e,specularIntensityMap:ot,transmission:C,transmissionMap:nt,thicknessMap:rt,gradientMap:Ze,opaque:M.transparent===!1&&M.blending===Ks,alphaMap:z,alphaTest:Ce,alphaHash:Te,combine:M.combine,mapUv:ge&&_(M.map.channel),aoMapUv:k&&_(M.aoMap.channel),lightMapUv:xe&&_(M.lightMap.channel),bumpMapUv:de&&_(M.bumpMap.channel),normalMapUv:X&&_(M.normalMap.channel),displacementMapUv:Q&&_(M.displacementMap.channel),emissiveMapUv:Le&&_(M.emissiveMap.channel),metalnessMapUv:Ne&&_(M.metalnessMap.channel),roughnessMapUv:Fe&&_(M.roughnessMap.channel),anisotropyMapUv:K&&_(M.anisotropyMap.channel),clearcoatMapUv:Ae&&_(M.clearcoatMap.channel),clearcoatNormalMapUv:be&&_(M.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Me&&_(M.clearcoatRoughnessMap.channel),iridescenceMapUv:qe&&_(M.iridescenceMap.channel),iridescenceThicknessMapUv:W&&_(M.iridescenceThicknessMap.channel),sheenColorMapUv:se&&_(M.sheenColorMap.channel),sheenRoughnessMapUv:U&&_(M.sheenRoughnessMap.channel),specularMapUv:ve&&_(M.specularMap.channel),specularColorMapUv:_e&&_(M.specularColorMap.channel),specularIntensityMapUv:ot&&_(M.specularIntensityMap.channel),transmissionMapUv:nt&&_(M.transmissionMap.channel),thicknessMapUv:rt&&_(M.thicknessMap.channel),alphaMapUv:z&&_(M.alphaMap.channel),vertexTangents:!!H.attributes.tangent&&(X||tt),vertexColors:M.vertexColors,vertexAlphas:M.vertexColors===!0&&!!H.attributes.color&&H.attributes.color.itemSize===4,vertexUv1s:Re,vertexUv2s:Se,vertexUv3s:je,pointsUvs:ne.isPoints===!0&&!!H.attributes.uv&&(ge||z),fog:!!F,useFog:M.fog===!0,fogExp2:F&&F.isFogExp2,flatShading:M.flatShading===!0,sizeAttenuation:M.sizeAttenuation===!0,logarithmicDepthBuffer:h,skinning:ne.isSkinnedMesh===!0,morphTargets:H.morphAttributes.position!==void 0,morphNormals:H.morphAttributes.normal!==void 0,morphColors:H.morphAttributes.color!==void 0,morphTargetsCount:G,morphTextureStride:Y,numDirLights:R.directional.length,numPointLights:R.point.length,numSpotLights:R.spot.length,numSpotLightMaps:R.spotLightMap.length,numRectAreaLights:R.rectArea.length,numHemiLights:R.hemi.length,numDirLightShadows:R.directionalShadowMap.length,numPointLightShadows:R.pointShadowMap.length,numSpotLightShadows:R.spotShadowMap.length,numSpotLightShadowsWithMaps:R.numSpotLightShadowsWithMaps,numLightProbes:R.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:M.dithering,shadowMapEnabled:s.shadowMap.enabled&&V.length>0,shadowMapType:s.shadowMap.type,toneMapping:ut,useLegacyLights:s._useLegacyLights,decodeVideoTexture:ge&&M.map.isVideoTexture===!0&&It.getTransfer(M.map.colorSpace)===Ft,premultipliedAlpha:M.premultipliedAlpha,doubleSided:M.side===hi,flipSided:M.side===Nn,useDepthPacking:M.depthPacking>=0,depthPacking:M.depthPacking||0,index0AttributeName:M.index0AttributeName,extensionDerivatives:De&&M.extensions.derivatives===!0,extensionFragDepth:De&&M.extensions.fragDepth===!0,extensionDrawBuffers:De&&M.extensions.drawBuffers===!0,extensionShaderTextureLOD:De&&M.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:M.customProgramCacheKey()}}function m(M){const R=[];if(M.shaderID?R.push(M.shaderID):(R.push(M.customVertexShaderID),R.push(M.customFragmentShaderID)),M.defines!==void 0)for(const V in M.defines)R.push(V),R.push(M.defines[V]);return M.isRawShaderMaterial===!1&&(y(R,M),v(R,M),R.push(s.outputColorSpace)),R.push(M.customProgramCacheKey),R.join()}function y(M,R){M.push(R.precision),M.push(R.outputColorSpace),M.push(R.envMapMode),M.push(R.envMapCubeUVHeight),M.push(R.mapUv),M.push(R.alphaMapUv),M.push(R.lightMapUv),M.push(R.aoMapUv),M.push(R.bumpMapUv),M.push(R.normalMapUv),M.push(R.displacementMapUv),M.push(R.emissiveMapUv),M.push(R.metalnessMapUv),M.push(R.roughnessMapUv),M.push(R.anisotropyMapUv),M.push(R.clearcoatMapUv),M.push(R.clearcoatNormalMapUv),M.push(R.clearcoatRoughnessMapUv),M.push(R.iridescenceMapUv),M.push(R.iridescenceThicknessMapUv),M.push(R.sheenColorMapUv),M.push(R.sheenRoughnessMapUv),M.push(R.specularMapUv),M.push(R.specularColorMapUv),M.push(R.specularIntensityMapUv),M.push(R.transmissionMapUv),M.push(R.thicknessMapUv),M.push(R.combine),M.push(R.fogExp2),M.push(R.sizeAttenuation),M.push(R.morphTargetsCount),M.push(R.morphAttributeCount),M.push(R.numDirLights),M.push(R.numPointLights),M.push(R.numSpotLights),M.push(R.numSpotLightMaps),M.push(R.numHemiLights),M.push(R.numRectAreaLights),M.push(R.numDirLightShadows),M.push(R.numPointLightShadows),M.push(R.numSpotLightShadows),M.push(R.numSpotLightShadowsWithMaps),M.push(R.numLightProbes),M.push(R.shadowMapType),M.push(R.toneMapping),M.push(R.numClippingPlanes),M.push(R.numClipIntersection),M.push(R.depthPacking)}function v(M,R){o.disableAll(),R.isWebGL2&&o.enable(0),R.supportsVertexTextures&&o.enable(1),R.instancing&&o.enable(2),R.instancingColor&&o.enable(3),R.matcap&&o.enable(4),R.envMap&&o.enable(5),R.normalMapObjectSpace&&o.enable(6),R.normalMapTangentSpace&&o.enable(7),R.clearcoat&&o.enable(8),R.iridescence&&o.enable(9),R.alphaTest&&o.enable(10),R.vertexColors&&o.enable(11),R.vertexAlphas&&o.enable(12),R.vertexUv1s&&o.enable(13),R.vertexUv2s&&o.enable(14),R.vertexUv3s&&o.enable(15),R.vertexTangents&&o.enable(16),R.anisotropy&&o.enable(17),M.push(o.mask),o.disableAll(),R.fog&&o.enable(0),R.useFog&&o.enable(1),R.flatShading&&o.enable(2),R.logarithmicDepthBuffer&&o.enable(3),R.skinning&&o.enable(4),R.morphTargets&&o.enable(5),R.morphNormals&&o.enable(6),R.morphColors&&o.enable(7),R.premultipliedAlpha&&o.enable(8),R.shadowMapEnabled&&o.enable(9),R.useLegacyLights&&o.enable(10),R.doubleSided&&o.enable(11),R.flipSided&&o.enable(12),R.useDepthPacking&&o.enable(13),R.dithering&&o.enable(14),R.transmission&&o.enable(15),R.sheen&&o.enable(16),R.opaque&&o.enable(17),R.pointsUvs&&o.enable(18),R.decodeVideoTexture&&o.enable(19),M.push(o.mask)}function x(M){const R=p[M.type];let V;if(R){const j=ui[R];V=hm.clone(j.uniforms)}else V=M.uniforms;return V}function E(M,R){let V;for(let j=0,ne=c.length;j<ne;j++){const F=c[j];if(F.cacheKey===R){V=F,++V.usedTimes;break}}return V===void 0&&(V=new gb(s,R,M,r),c.push(V)),V}function w(M){if(--M.usedTimes===0){const R=c.indexOf(M);c[R]=c[c.length-1],c.pop(),M.destroy()}}function A(M){l.remove(M)}function P(){l.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:x,acquireProgram:E,releaseProgram:w,releaseShaderCache:A,programs:c,dispose:P}}function bb(){let s=new WeakMap;function e(r){let a=s.get(r);return a===void 0&&(a={},s.set(r,a)),a}function t(r){s.delete(r)}function n(r,a,o){s.get(r)[a]=o}function i(){s=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function Sb(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function Cf(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function Rf(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function a(h,f,d,p,_,g){let m=s[e];return m===void 0?(m={id:h.id,object:h,geometry:f,material:d,groupOrder:p,renderOrder:h.renderOrder,z:_,group:g},s[e]=m):(m.id=h.id,m.object=h,m.geometry=f,m.material=d,m.groupOrder=p,m.renderOrder=h.renderOrder,m.z=_,m.group=g),e++,m}function o(h,f,d,p,_,g){const m=a(h,f,d,p,_,g);d.transmission>0?n.push(m):d.transparent===!0?i.push(m):t.push(m)}function l(h,f,d,p,_,g){const m=a(h,f,d,p,_,g);d.transmission>0?n.unshift(m):d.transparent===!0?i.unshift(m):t.unshift(m)}function c(h,f){t.length>1&&t.sort(h||Sb),n.length>1&&n.sort(f||Cf),i.length>1&&i.sort(f||Cf)}function u(){for(let h=e,f=s.length;h<f;h++){const d=s[h];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:o,unshift:l,finish:u,sort:c}}function Mb(){let s=new WeakMap;function e(n,i){const r=s.get(n);let a;return r===void 0?(a=new Rf,s.set(n,[a])):i>=r.length?(a=new Rf,r.push(a)):a=r[i],a}function t(){s=new WeakMap}return{get:e,dispose:t}}function Eb(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new Oe};break;case"SpotLight":t={position:new D,direction:new D,color:new Oe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new Oe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new Oe,groundColor:new Oe};break;case"RectAreaLight":t={color:new Oe,position:new D,halfWidth:new D,halfHeight:new D};break}return s[e.id]=t,t}}}function Ab(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let Tb=0;function wb(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function Cb(s,e){const t=new Eb,n=Ab(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let u=0;u<9;u++)i.probe.push(new D);const r=new D,a=new at,o=new at;function l(u,h){let f=0,d=0,p=0;for(let j=0;j<9;j++)i.probe[j].set(0,0,0);let _=0,g=0,m=0,y=0,v=0,x=0,E=0,w=0,A=0,P=0,M=0;u.sort(wb);const R=h===!0?Math.PI:1;for(let j=0,ne=u.length;j<ne;j++){const F=u[j],H=F.color,B=F.intensity,q=F.distance,ee=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)f+=H.r*B*R,d+=H.g*B*R,p+=H.b*B*R;else if(F.isLightProbe){for(let Z=0;Z<9;Z++)i.probe[Z].addScaledVector(F.sh.coefficients[Z],B);M++}else if(F.isDirectionalLight){const Z=t.get(F);if(Z.color.copy(F.color).multiplyScalar(F.intensity*R),F.castShadow){const ie=F.shadow,G=n.get(F);G.shadowBias=ie.bias,G.shadowNormalBias=ie.normalBias,G.shadowRadius=ie.radius,G.shadowMapSize=ie.mapSize,i.directionalShadow[_]=G,i.directionalShadowMap[_]=ee,i.directionalShadowMatrix[_]=F.shadow.matrix,x++}i.directional[_]=Z,_++}else if(F.isSpotLight){const Z=t.get(F);Z.position.setFromMatrixPosition(F.matrixWorld),Z.color.copy(H).multiplyScalar(B*R),Z.distance=q,Z.coneCos=Math.cos(F.angle),Z.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),Z.decay=F.decay,i.spot[m]=Z;const ie=F.shadow;if(F.map&&(i.spotLightMap[A]=F.map,A++,ie.updateMatrices(F),F.castShadow&&P++),i.spotLightMatrix[m]=ie.matrix,F.castShadow){const G=n.get(F);G.shadowBias=ie.bias,G.shadowNormalBias=ie.normalBias,G.shadowRadius=ie.radius,G.shadowMapSize=ie.mapSize,i.spotShadow[m]=G,i.spotShadowMap[m]=ee,w++}m++}else if(F.isRectAreaLight){const Z=t.get(F);Z.color.copy(H).multiplyScalar(B),Z.halfWidth.set(F.width*.5,0,0),Z.halfHeight.set(0,F.height*.5,0),i.rectArea[y]=Z,y++}else if(F.isPointLight){const Z=t.get(F);if(Z.color.copy(F.color).multiplyScalar(F.intensity*R),Z.distance=F.distance,Z.decay=F.decay,F.castShadow){const ie=F.shadow,G=n.get(F);G.shadowBias=ie.bias,G.shadowNormalBias=ie.normalBias,G.shadowRadius=ie.radius,G.shadowMapSize=ie.mapSize,G.shadowCameraNear=ie.camera.near,G.shadowCameraFar=ie.camera.far,i.pointShadow[g]=G,i.pointShadowMap[g]=ee,i.pointShadowMatrix[g]=F.shadow.matrix,E++}i.point[g]=Z,g++}else if(F.isHemisphereLight){const Z=t.get(F);Z.skyColor.copy(F.color).multiplyScalar(B*R),Z.groundColor.copy(F.groundColor).multiplyScalar(B*R),i.hemi[v]=Z,v++}}y>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Pe.LTC_FLOAT_1,i.rectAreaLTC2=Pe.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Pe.LTC_HALF_1,i.rectAreaLTC2=Pe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=f,i.ambient[1]=d,i.ambient[2]=p;const V=i.hash;(V.directionalLength!==_||V.pointLength!==g||V.spotLength!==m||V.rectAreaLength!==y||V.hemiLength!==v||V.numDirectionalShadows!==x||V.numPointShadows!==E||V.numSpotShadows!==w||V.numSpotMaps!==A||V.numLightProbes!==M)&&(i.directional.length=_,i.spot.length=m,i.rectArea.length=y,i.point.length=g,i.hemi.length=v,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=E,i.pointShadowMap.length=E,i.spotShadow.length=w,i.spotShadowMap.length=w,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=E,i.spotLightMatrix.length=w+A-P,i.spotLightMap.length=A,i.numSpotLightShadowsWithMaps=P,i.numLightProbes=M,V.directionalLength=_,V.pointLength=g,V.spotLength=m,V.rectAreaLength=y,V.hemiLength=v,V.numDirectionalShadows=x,V.numPointShadows=E,V.numSpotShadows=w,V.numSpotMaps=A,V.numLightProbes=M,i.version=Tb++)}function c(u,h){let f=0,d=0,p=0,_=0,g=0;const m=h.matrixWorldInverse;for(let y=0,v=u.length;y<v;y++){const x=u[y];if(x.isDirectionalLight){const E=i.directional[f];E.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),E.direction.sub(r),E.direction.transformDirection(m),f++}else if(x.isSpotLight){const E=i.spot[p];E.position.setFromMatrixPosition(x.matrixWorld),E.position.applyMatrix4(m),E.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),E.direction.sub(r),E.direction.transformDirection(m),p++}else if(x.isRectAreaLight){const E=i.rectArea[_];E.position.setFromMatrixPosition(x.matrixWorld),E.position.applyMatrix4(m),o.identity(),a.copy(x.matrixWorld),a.premultiply(m),o.extractRotation(a),E.halfWidth.set(x.width*.5,0,0),E.halfHeight.set(0,x.height*.5,0),E.halfWidth.applyMatrix4(o),E.halfHeight.applyMatrix4(o),_++}else if(x.isPointLight){const E=i.point[d];E.position.setFromMatrixPosition(x.matrixWorld),E.position.applyMatrix4(m),d++}else if(x.isHemisphereLight){const E=i.hemi[g];E.direction.setFromMatrixPosition(x.matrixWorld),E.direction.transformDirection(m),g++}}}return{setup:l,setupView:c,state:i}}function If(s,e){const t=new Cb(s,e),n=[],i=[];function r(){n.length=0,i.length=0}function a(h){n.push(h)}function o(h){i.push(h)}function l(h){t.setup(n,h)}function c(h){t.setupView(n,h)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:l,setupLightsView:c,pushLight:a,pushShadow:o}}function Rb(s,e){let t=new WeakMap;function n(r,a=0){const o=t.get(r);let l;return o===void 0?(l=new If(s,e),t.set(r,[l])):a>=o.length?(l=new If(s,e),o.push(l)):l=o[a],l}function i(){t=new WeakMap}return{get:n,dispose:i}}class Bl extends In{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Yp,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class ch extends In{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const Ib=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Lb=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Pb(s,e,t){let n=new Fl;const i=new pe,r=new pe,a=new Nt,o=new Bl({depthPacking:jp}),l=new ch,c={},u=t.maxTextureSize,h={[Ci]:Nn,[Nn]:Ci,[hi]:hi},f=new ai({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new pe},radius:{value:4}},vertexShader:Ib,fragmentShader:Lb}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new yt;p.setAttribute("position",new Pt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new dn(p,f),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Xu;let m=this.type;this.render=function(E,w,A){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||E.length===0)return;const P=s.getRenderTarget(),M=s.getActiveCubeFace(),R=s.getActiveMipmapLevel(),V=s.state;V.setBlending(Ji),V.buffers.color.setClear(1,1,1,1),V.buffers.depth.setTest(!0),V.setScissorTest(!1);const j=m!==Si&&this.type===Si,ne=m===Si&&this.type!==Si;for(let F=0,H=E.length;F<H;F++){const B=E[F],q=B.shadow;if(q===void 0){console.warn("THREE.WebGLShadowMap:",B,"has no shadow.");continue}if(q.autoUpdate===!1&&q.needsUpdate===!1)continue;i.copy(q.mapSize);const ee=q.getFrameExtents();if(i.multiply(ee),r.copy(q.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(r.x=Math.floor(u/ee.x),i.x=r.x*ee.x,q.mapSize.x=r.x),i.y>u&&(r.y=Math.floor(u/ee.y),i.y=r.y*ee.y,q.mapSize.y=r.y)),q.map===null||j===!0||ne===!0){const ie=this.type!==Si?{minFilter:on,magFilter:on}:{};q.map!==null&&q.map.dispose(),q.map=new ii(i.x,i.y,ie),q.map.texture.name=B.name+".shadowMap",q.camera.updateProjectionMatrix()}s.setRenderTarget(q.map),s.clear();const Z=q.getViewportCount();for(let ie=0;ie<Z;ie++){const G=q.getViewport(ie);a.set(r.x*G.x,r.y*G.y,r.x*G.z,r.y*G.w),V.viewport(a),q.updateMatrices(B,ie),n=q.getFrustum(),x(w,A,q.camera,B,this.type)}q.isPointLightShadow!==!0&&this.type===Si&&y(q,A),q.needsUpdate=!1}m=this.type,g.needsUpdate=!1,s.setRenderTarget(P,M,R)};function y(E,w){const A=e.update(_);f.defines.VSM_SAMPLES!==E.blurSamples&&(f.defines.VSM_SAMPLES=E.blurSamples,d.defines.VSM_SAMPLES=E.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),E.mapPass===null&&(E.mapPass=new ii(i.x,i.y)),f.uniforms.shadow_pass.value=E.map.texture,f.uniforms.resolution.value=E.mapSize,f.uniforms.radius.value=E.radius,s.setRenderTarget(E.mapPass),s.clear(),s.renderBufferDirect(w,null,A,f,_,null),d.uniforms.shadow_pass.value=E.mapPass.texture,d.uniforms.resolution.value=E.mapSize,d.uniforms.radius.value=E.radius,s.setRenderTarget(E.map),s.clear(),s.renderBufferDirect(w,null,A,d,_,null)}function v(E,w,A,P){let M=null;const R=A.isPointLight===!0?E.customDistanceMaterial:E.customDepthMaterial;if(R!==void 0)M=R;else if(M=A.isPointLight===!0?l:o,s.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0||w.map&&w.alphaTest>0){const V=M.uuid,j=w.uuid;let ne=c[V];ne===void 0&&(ne={},c[V]=ne);let F=ne[j];F===void 0&&(F=M.clone(),ne[j]=F),M=F}if(M.visible=w.visible,M.wireframe=w.wireframe,P===Si?M.side=w.shadowSide!==null?w.shadowSide:w.side:M.side=w.shadowSide!==null?w.shadowSide:h[w.side],M.alphaMap=w.alphaMap,M.alphaTest=w.alphaTest,M.map=w.map,M.clipShadows=w.clipShadows,M.clippingPlanes=w.clippingPlanes,M.clipIntersection=w.clipIntersection,M.displacementMap=w.displacementMap,M.displacementScale=w.displacementScale,M.displacementBias=w.displacementBias,M.wireframeLinewidth=w.wireframeLinewidth,M.linewidth=w.linewidth,A.isPointLight===!0&&M.isMeshDistanceMaterial===!0){const V=s.properties.get(M);V.light=A}return M}function x(E,w,A,P,M){if(E.visible===!1)return;if(E.layers.test(w.layers)&&(E.isMesh||E.isLine||E.isPoints)&&(E.castShadow||E.receiveShadow&&M===Si)&&(!E.frustumCulled||n.intersectsObject(E))){E.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,E.matrixWorld);const j=e.update(E),ne=E.material;if(Array.isArray(ne)){const F=j.groups;for(let H=0,B=F.length;H<B;H++){const q=F[H],ee=ne[q.materialIndex];if(ee&&ee.visible){const Z=v(E,ee,P,M);s.renderBufferDirect(A,null,j,Z,E,q)}}}else if(ne.visible){const F=v(E,ne,P,M);s.renderBufferDirect(A,null,j,F,E,null)}}const V=E.children;for(let j=0,ne=V.length;j<ne;j++)x(V[j],w,A,P,M)}}function Db(s,e,t){const n=t.isWebGL2;function i(){let z=!1;const Ce=new Nt;let Te=null;const De=new Nt(0,0,0,0);return{setMask:function(Re){Te!==Re&&!z&&(s.colorMask(Re,Re,Re,Re),Te=Re)},setLocked:function(Re){z=Re},setClear:function(Re,Se,je,ut,Kt){Kt===!0&&(Re*=ut,Se*=ut,je*=ut),Ce.set(Re,Se,je,ut),De.equals(Ce)===!1&&(s.clearColor(Re,Se,je,ut),De.copy(Ce))},reset:function(){z=!1,Te=null,De.set(-1,0,0,0)}}}function r(){let z=!1,Ce=null,Te=null,De=null;return{setTest:function(Re){Re?ye(s.DEPTH_TEST):we(s.DEPTH_TEST)},setMask:function(Re){Ce!==Re&&!z&&(s.depthMask(Re),Ce=Re)},setFunc:function(Re){if(Te!==Re){switch(Re){case Sp:s.depthFunc(s.NEVER);break;case Mp:s.depthFunc(s.ALWAYS);break;case Ep:s.depthFunc(s.LESS);break;case bl:s.depthFunc(s.LEQUAL);break;case Ap:s.depthFunc(s.EQUAL);break;case Tp:s.depthFunc(s.GEQUAL);break;case wp:s.depthFunc(s.GREATER);break;case Cp:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Te=Re}},setLocked:function(Re){z=Re},setClear:function(Re){De!==Re&&(s.clearDepth(Re),De=Re)},reset:function(){z=!1,Ce=null,Te=null,De=null}}}function a(){let z=!1,Ce=null,Te=null,De=null,Re=null,Se=null,je=null,ut=null,Kt=null;return{setTest:function(Mt){z||(Mt?ye(s.STENCIL_TEST):we(s.STENCIL_TEST))},setMask:function(Mt){Ce!==Mt&&!z&&(s.stencilMask(Mt),Ce=Mt)},setFunc:function(Mt,Zn,Sn){(Te!==Mt||De!==Zn||Re!==Sn)&&(s.stencilFunc(Mt,Zn,Sn),Te=Mt,De=Zn,Re=Sn)},setOp:function(Mt,Zn,Sn){(Se!==Mt||je!==Zn||ut!==Sn)&&(s.stencilOp(Mt,Zn,Sn),Se=Mt,je=Zn,ut=Sn)},setLocked:function(Mt){z=Mt},setClear:function(Mt){Kt!==Mt&&(s.clearStencil(Mt),Kt=Mt)},reset:function(){z=!1,Ce=null,Te=null,De=null,Re=null,Se=null,je=null,ut=null,Kt=null}}}const o=new i,l=new r,c=new a,u=new WeakMap,h=new WeakMap;let f={},d={},p=new WeakMap,_=[],g=null,m=!1,y=null,v=null,x=null,E=null,w=null,A=null,P=null,M=!1,R=null,V=null,j=null,ne=null,F=null;const H=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let B=!1,q=0;const ee=s.getParameter(s.VERSION);ee.indexOf("WebGL")!==-1?(q=parseFloat(/^WebGL (\d)/.exec(ee)[1]),B=q>=1):ee.indexOf("OpenGL ES")!==-1&&(q=parseFloat(/^OpenGL ES (\d)/.exec(ee)[1]),B=q>=2);let Z=null,ie={};const G=s.getParameter(s.SCISSOR_BOX),Y=s.getParameter(s.VIEWPORT),ce=new Nt().fromArray(G),ae=new Nt().fromArray(Y);function ue(z,Ce,Te,De){const Re=new Uint8Array(4),Se=s.createTexture();s.bindTexture(z,Se),s.texParameteri(z,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(z,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let je=0;je<Te;je++)n&&(z===s.TEXTURE_3D||z===s.TEXTURE_2D_ARRAY)?s.texImage3D(Ce,0,s.RGBA,1,1,De,0,s.RGBA,s.UNSIGNED_BYTE,Re):s.texImage2D(Ce+je,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Re);return Se}const he={};he[s.TEXTURE_2D]=ue(s.TEXTURE_2D,s.TEXTURE_2D,1),he[s.TEXTURE_CUBE_MAP]=ue(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(he[s.TEXTURE_2D_ARRAY]=ue(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),he[s.TEXTURE_3D]=ue(s.TEXTURE_3D,s.TEXTURE_3D,1,1)),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ye(s.DEPTH_TEST),l.setFunc(bl),Q(!1),Le(tu),ye(s.CULL_FACE),de(Ji);function ye(z){f[z]!==!0&&(s.enable(z),f[z]=!0)}function we(z){f[z]!==!1&&(s.disable(z),f[z]=!1)}function ge(z,Ce){return d[z]!==Ce?(s.bindFramebuffer(z,Ce),d[z]=Ce,n&&(z===s.DRAW_FRAMEBUFFER&&(d[s.FRAMEBUFFER]=Ce),z===s.FRAMEBUFFER&&(d[s.DRAW_FRAMEBUFFER]=Ce)),!0):!1}function et(z,Ce){let Te=_,De=!1;if(z)if(Te=p.get(Ce),Te===void 0&&(Te=[],p.set(Ce,Te)),z.isWebGLMultipleRenderTargets){const Re=z.texture;if(Te.length!==Re.length||Te[0]!==s.COLOR_ATTACHMENT0){for(let Se=0,je=Re.length;Se<je;Se++)Te[Se]=s.COLOR_ATTACHMENT0+Se;Te.length=Re.length,De=!0}}else Te[0]!==s.COLOR_ATTACHMENT0&&(Te[0]=s.COLOR_ATTACHMENT0,De=!0);else Te[0]!==s.BACK&&(Te[0]=s.BACK,De=!0);De&&(t.isWebGL2?s.drawBuffers(Te):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Te))}function Ke(z){return g!==z?(s.useProgram(z),g=z,!0):!1}const k={[Vs]:s.FUNC_ADD,[hp]:s.FUNC_SUBTRACT,[fp]:s.FUNC_REVERSE_SUBTRACT};if(n)k[ru]=s.MIN,k[au]=s.MAX;else{const z=e.get("EXT_blend_minmax");z!==null&&(k[ru]=z.MIN_EXT,k[au]=z.MAX_EXT)}const xe={[dp]:s.ZERO,[pp]:s.ONE,[mp]:s.SRC_COLOR,[qu]:s.SRC_ALPHA,[bp]:s.SRC_ALPHA_SATURATE,[yp]:s.DST_COLOR,[_p]:s.DST_ALPHA,[gp]:s.ONE_MINUS_SRC_COLOR,[Yu]:s.ONE_MINUS_SRC_ALPHA,[xp]:s.ONE_MINUS_DST_COLOR,[vp]:s.ONE_MINUS_DST_ALPHA};function de(z,Ce,Te,De,Re,Se,je,ut){if(z===Ji){m===!0&&(we(s.BLEND),m=!1);return}if(m===!1&&(ye(s.BLEND),m=!0),z!==up){if(z!==y||ut!==M){if((v!==Vs||w!==Vs)&&(s.blendEquation(s.FUNC_ADD),v=Vs,w=Vs),ut)switch(z){case Ks:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case nu:s.blendFunc(s.ONE,s.ONE);break;case iu:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case su:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}else switch(z){case Ks:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case nu:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case iu:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case su:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}x=null,E=null,A=null,P=null,y=z,M=ut}return}Re=Re||Ce,Se=Se||Te,je=je||De,(Ce!==v||Re!==w)&&(s.blendEquationSeparate(k[Ce],k[Re]),v=Ce,w=Re),(Te!==x||De!==E||Se!==A||je!==P)&&(s.blendFuncSeparate(xe[Te],xe[De],xe[Se],xe[je]),x=Te,E=De,A=Se,P=je),y=z,M=!1}function X(z,Ce){z.side===hi?we(s.CULL_FACE):ye(s.CULL_FACE);let Te=z.side===Nn;Ce&&(Te=!Te),Q(Te),z.blending===Ks&&z.transparent===!1?de(Ji):de(z.blending,z.blendEquation,z.blendSrc,z.blendDst,z.blendEquationAlpha,z.blendSrcAlpha,z.blendDstAlpha,z.premultipliedAlpha),l.setFunc(z.depthFunc),l.setTest(z.depthTest),l.setMask(z.depthWrite),o.setMask(z.colorWrite);const De=z.stencilWrite;c.setTest(De),De&&(c.setMask(z.stencilWriteMask),c.setFunc(z.stencilFunc,z.stencilRef,z.stencilFuncMask),c.setOp(z.stencilFail,z.stencilZFail,z.stencilZPass)),Fe(z.polygonOffset,z.polygonOffsetFactor,z.polygonOffsetUnits),z.alphaToCoverage===!0?ye(s.SAMPLE_ALPHA_TO_COVERAGE):we(s.SAMPLE_ALPHA_TO_COVERAGE)}function Q(z){R!==z&&(z?s.frontFace(s.CW):s.frontFace(s.CCW),R=z)}function Le(z){z!==lp?(ye(s.CULL_FACE),z!==V&&(z===tu?s.cullFace(s.BACK):z===cp?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):we(s.CULL_FACE),V=z}function Ne(z){z!==j&&(B&&s.lineWidth(z),j=z)}function Fe(z,Ce,Te){z?(ye(s.POLYGON_OFFSET_FILL),(ne!==Ce||F!==Te)&&(s.polygonOffset(Ce,Te),ne=Ce,F=Te)):we(s.POLYGON_OFFSET_FILL)}function tt(z){z?ye(s.SCISSOR_TEST):we(s.SCISSOR_TEST)}function mt(z){z===void 0&&(z=s.TEXTURE0+H-1),Z!==z&&(s.activeTexture(z),Z=z)}function Lt(z,Ce,Te){Te===void 0&&(Z===null?Te=s.TEXTURE0+H-1:Te=Z);let De=ie[Te];De===void 0&&(De={type:void 0,texture:void 0},ie[Te]=De),(De.type!==z||De.texture!==Ce)&&(Z!==Te&&(s.activeTexture(Te),Z=Te),s.bindTexture(z,Ce||he[z]),De.type=z,De.texture=Ce)}function O(){const z=ie[Z];z!==void 0&&z.type!==void 0&&(s.bindTexture(z.type,null),z.type=void 0,z.texture=void 0)}function C(){try{s.compressedTexImage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function K(){try{s.compressedTexImage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Ae(){try{s.texSubImage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function be(){try{s.texSubImage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Me(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function qe(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function W(){try{s.texStorage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function se(){try{s.texStorage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function U(){try{s.texImage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function ve(){try{s.texImage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function _e(z){ce.equals(z)===!1&&(s.scissor(z.x,z.y,z.z,z.w),ce.copy(z))}function ot(z){ae.equals(z)===!1&&(s.viewport(z.x,z.y,z.z,z.w),ae.copy(z))}function nt(z,Ce){let Te=h.get(Ce);Te===void 0&&(Te=new WeakMap,h.set(Ce,Te));let De=Te.get(z);De===void 0&&(De=s.getUniformBlockIndex(Ce,z.name),Te.set(z,De))}function rt(z,Ce){const De=h.get(Ce).get(z);u.get(Ce)!==De&&(s.uniformBlockBinding(Ce,De,z.__bindingPointIndex),u.set(Ce,De))}function Ze(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),n===!0&&(s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),f={},Z=null,ie={},d={},p=new WeakMap,_=[],g=null,m=!1,y=null,v=null,x=null,E=null,w=null,A=null,P=null,M=!1,R=null,V=null,j=null,ne=null,F=null,ce.set(0,0,s.canvas.width,s.canvas.height),ae.set(0,0,s.canvas.width,s.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:ye,disable:we,bindFramebuffer:ge,drawBuffers:et,useProgram:Ke,setBlending:de,setMaterial:X,setFlipSided:Q,setCullFace:Le,setLineWidth:Ne,setPolygonOffset:Fe,setScissorTest:tt,activeTexture:mt,bindTexture:Lt,unbindTexture:O,compressedTexImage2D:C,compressedTexImage3D:K,texImage2D:U,texImage3D:ve,updateUBOMapping:nt,uniformBlockBinding:rt,texStorage2D:W,texStorage3D:se,texSubImage2D:Ae,texSubImage3D:be,compressedTexSubImage2D:Me,compressedTexSubImage3D:qe,scissor:_e,viewport:ot,reset:Ze}}function Nb(s,e,t,n,i,r,a){const o=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let _;const g=new WeakMap;let m=!1;try{m=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(O,C){return m?new OffscreenCanvas(O,C):ka("canvas")}function v(O,C,K,Ae){let be=1;if((O.width>Ae||O.height>Ae)&&(be=Ae/Math.max(O.width,O.height)),be<1||C===!0)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const Me=C?El:Math.floor,qe=Me(be*O.width),W=Me(be*O.height);_===void 0&&(_=y(qe,W));const se=K?y(qe,W):_;return se.width=qe,se.height=W,se.getContext("2d").drawImage(O,0,0,qe,W),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+qe+"x"+W+")."),se}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function x(O){return Du(O.width)&&Du(O.height)}function E(O){return o?!1:O.wrapS!==yn||O.wrapT!==yn||O.minFilter!==on&&O.minFilter!==ln}function w(O,C){return O.generateMipmaps&&C&&O.minFilter!==on&&O.minFilter!==ln}function A(O){s.generateMipmap(O)}function P(O,C,K,Ae,be=!1){if(o===!1)return C;if(O!==null){if(s[O]!==void 0)return s[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let Me=C;if(C===s.RED&&(K===s.FLOAT&&(Me=s.R32F),K===s.HALF_FLOAT&&(Me=s.R16F),K===s.UNSIGNED_BYTE&&(Me=s.R8)),C===s.RED_INTEGER&&(K===s.UNSIGNED_BYTE&&(Me=s.R8UI),K===s.UNSIGNED_SHORT&&(Me=s.R16UI),K===s.UNSIGNED_INT&&(Me=s.R32UI),K===s.BYTE&&(Me=s.R8I),K===s.SHORT&&(Me=s.R16I),K===s.INT&&(Me=s.R32I)),C===s.RG&&(K===s.FLOAT&&(Me=s.RG32F),K===s.HALF_FLOAT&&(Me=s.RG16F),K===s.UNSIGNED_BYTE&&(Me=s.RG8)),C===s.RGBA){const qe=be?Da:It.getTransfer(Ae);K===s.FLOAT&&(Me=s.RGBA32F),K===s.HALF_FLOAT&&(Me=s.RGBA16F),K===s.UNSIGNED_BYTE&&(Me=qe===Ft?s.SRGB8_ALPHA8:s.RGBA8),K===s.UNSIGNED_SHORT_4_4_4_4&&(Me=s.RGBA4),K===s.UNSIGNED_SHORT_5_5_5_1&&(Me=s.RGB5_A1)}return(Me===s.R16F||Me===s.R32F||Me===s.RG16F||Me===s.RG32F||Me===s.RGBA16F||Me===s.RGBA32F)&&e.get("EXT_color_buffer_float"),Me}function M(O,C,K){return w(O,K)===!0||O.isFramebufferTexture&&O.minFilter!==on&&O.minFilter!==ln?Math.log2(Math.max(C.width,C.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?C.mipmaps.length:1}function R(O){return O===on||O===Sl||O===ba?s.NEAREST:s.LINEAR}function V(O){const C=O.target;C.removeEventListener("dispose",V),ne(C),C.isVideoTexture&&p.delete(C)}function j(O){const C=O.target;C.removeEventListener("dispose",j),H(C)}function ne(O){const C=n.get(O);if(C.__webglInit===void 0)return;const K=O.source,Ae=g.get(K);if(Ae){const be=Ae[C.__cacheKey];be.usedTimes--,be.usedTimes===0&&F(O),Object.keys(Ae).length===0&&g.delete(K)}n.remove(O)}function F(O){const C=n.get(O);s.deleteTexture(C.__webglTexture);const K=O.source,Ae=g.get(K);delete Ae[C.__cacheKey],a.memory.textures--}function H(O){const C=O.texture,K=n.get(O),Ae=n.get(C);if(Ae.__webglTexture!==void 0&&(s.deleteTexture(Ae.__webglTexture),a.memory.textures--),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let be=0;be<6;be++){if(Array.isArray(K.__webglFramebuffer[be]))for(let Me=0;Me<K.__webglFramebuffer[be].length;Me++)s.deleteFramebuffer(K.__webglFramebuffer[be][Me]);else s.deleteFramebuffer(K.__webglFramebuffer[be]);K.__webglDepthbuffer&&s.deleteRenderbuffer(K.__webglDepthbuffer[be])}else{if(Array.isArray(K.__webglFramebuffer))for(let be=0;be<K.__webglFramebuffer.length;be++)s.deleteFramebuffer(K.__webglFramebuffer[be]);else s.deleteFramebuffer(K.__webglFramebuffer);if(K.__webglDepthbuffer&&s.deleteRenderbuffer(K.__webglDepthbuffer),K.__webglMultisampledFramebuffer&&s.deleteFramebuffer(K.__webglMultisampledFramebuffer),K.__webglColorRenderbuffer)for(let be=0;be<K.__webglColorRenderbuffer.length;be++)K.__webglColorRenderbuffer[be]&&s.deleteRenderbuffer(K.__webglColorRenderbuffer[be]);K.__webglDepthRenderbuffer&&s.deleteRenderbuffer(K.__webglDepthRenderbuffer)}if(O.isWebGLMultipleRenderTargets)for(let be=0,Me=C.length;be<Me;be++){const qe=n.get(C[be]);qe.__webglTexture&&(s.deleteTexture(qe.__webglTexture),a.memory.textures--),n.remove(C[be])}n.remove(C),n.remove(O)}let B=0;function q(){B=0}function ee(){const O=B;return O>=l&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+l),B+=1,O}function Z(O){const C=[];return C.push(O.wrapS),C.push(O.wrapT),C.push(O.wrapR||0),C.push(O.magFilter),C.push(O.minFilter),C.push(O.anisotropy),C.push(O.internalFormat),C.push(O.format),C.push(O.type),C.push(O.generateMipmaps),C.push(O.premultiplyAlpha),C.push(O.flipY),C.push(O.unpackAlignment),C.push(O.colorSpace),C.join()}function ie(O,C){const K=n.get(O);if(O.isVideoTexture&&mt(O),O.isRenderTargetTexture===!1&&O.version>0&&K.__version!==O.version){const Ae=O.image;if(Ae===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Ae.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ge(K,O,C);return}}t.bindTexture(s.TEXTURE_2D,K.__webglTexture,s.TEXTURE0+C)}function G(O,C){const K=n.get(O);if(O.version>0&&K.__version!==O.version){ge(K,O,C);return}t.bindTexture(s.TEXTURE_2D_ARRAY,K.__webglTexture,s.TEXTURE0+C)}function Y(O,C){const K=n.get(O);if(O.version>0&&K.__version!==O.version){ge(K,O,C);return}t.bindTexture(s.TEXTURE_3D,K.__webglTexture,s.TEXTURE0+C)}function ce(O,C){const K=n.get(O);if(O.version>0&&K.__version!==O.version){et(K,O,C);return}t.bindTexture(s.TEXTURE_CUBE_MAP,K.__webglTexture,s.TEXTURE0+C)}const ae={[ji]:s.REPEAT,[yn]:s.CLAMP_TO_EDGE,[Ca]:s.MIRRORED_REPEAT},ue={[on]:s.NEAREST,[Sl]:s.NEAREST_MIPMAP_NEAREST,[ba]:s.NEAREST_MIPMAP_LINEAR,[ln]:s.LINEAR,[Zu]:s.LINEAR_MIPMAP_NEAREST,[ns]:s.LINEAR_MIPMAP_LINEAR},he={[Kp]:s.NEVER,[sm]:s.ALWAYS,[$p]:s.LESS,[em]:s.LEQUAL,[Qp]:s.EQUAL,[im]:s.GEQUAL,[tm]:s.GREATER,[nm]:s.NOTEQUAL};function ye(O,C,K){if(K?(s.texParameteri(O,s.TEXTURE_WRAP_S,ae[C.wrapS]),s.texParameteri(O,s.TEXTURE_WRAP_T,ae[C.wrapT]),(O===s.TEXTURE_3D||O===s.TEXTURE_2D_ARRAY)&&s.texParameteri(O,s.TEXTURE_WRAP_R,ae[C.wrapR]),s.texParameteri(O,s.TEXTURE_MAG_FILTER,ue[C.magFilter]),s.texParameteri(O,s.TEXTURE_MIN_FILTER,ue[C.minFilter])):(s.texParameteri(O,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(O,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),(O===s.TEXTURE_3D||O===s.TEXTURE_2D_ARRAY)&&s.texParameteri(O,s.TEXTURE_WRAP_R,s.CLAMP_TO_EDGE),(C.wrapS!==yn||C.wrapT!==yn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(O,s.TEXTURE_MAG_FILTER,R(C.magFilter)),s.texParameteri(O,s.TEXTURE_MIN_FILTER,R(C.minFilter)),C.minFilter!==on&&C.minFilter!==ln&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),C.compareFunction&&(s.texParameteri(O,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(O,s.TEXTURE_COMPARE_FUNC,he[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const Ae=e.get("EXT_texture_filter_anisotropic");if(C.magFilter===on||C.minFilter!==ba&&C.minFilter!==ns||C.type===Mi&&e.has("OES_texture_float_linear")===!1||o===!1&&C.type===Zr&&e.has("OES_texture_half_float_linear")===!1)return;(C.anisotropy>1||n.get(C).__currentAnisotropy)&&(s.texParameterf(O,Ae.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,i.getMaxAnisotropy())),n.get(C).__currentAnisotropy=C.anisotropy)}}function we(O,C){let K=!1;O.__webglInit===void 0&&(O.__webglInit=!0,C.addEventListener("dispose",V));const Ae=C.source;let be=g.get(Ae);be===void 0&&(be={},g.set(Ae,be));const Me=Z(C);if(Me!==O.__cacheKey){be[Me]===void 0&&(be[Me]={texture:s.createTexture(),usedTimes:0},a.memory.textures++,K=!0),be[Me].usedTimes++;const qe=be[O.__cacheKey];qe!==void 0&&(be[O.__cacheKey].usedTimes--,qe.usedTimes===0&&F(C)),O.__cacheKey=Me,O.__webglTexture=be[Me].texture}return K}function ge(O,C,K){let Ae=s.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(Ae=s.TEXTURE_2D_ARRAY),C.isData3DTexture&&(Ae=s.TEXTURE_3D);const be=we(O,C),Me=C.source;t.bindTexture(Ae,O.__webglTexture,s.TEXTURE0+K);const qe=n.get(Me);if(Me.version!==qe.__version||be===!0){t.activeTexture(s.TEXTURE0+K);const W=It.getPrimaries(It.workingColorSpace),se=C.colorSpace===Qn?null:It.getPrimaries(C.colorSpace),U=C.colorSpace===Qn||W===se?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,C.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,C.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,U);const ve=E(C)&&x(C.image)===!1;let _e=v(C.image,ve,!1,u);_e=Lt(C,_e);const ot=x(_e)||o,nt=r.convert(C.format,C.colorSpace);let rt=r.convert(C.type),Ze=P(C.internalFormat,nt,rt,C.colorSpace,C.isVideoTexture);ye(Ae,C,ot);let z;const Ce=C.mipmaps,Te=o&&C.isVideoTexture!==!0,De=qe.__version===void 0||be===!0,Re=M(C,_e,ot);if(C.isDepthTexture)Ze=s.DEPTH_COMPONENT,o?C.type===Mi?Ze=s.DEPTH_COMPONENT32F:C.type===Zi?Ze=s.DEPTH_COMPONENT24:C.type===_s?Ze=s.DEPTH24_STENCIL8:Ze=s.DEPTH_COMPONENT16:C.type===Mi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),C.format===vs&&Ze===s.DEPTH_COMPONENT&&C.type!==Ll&&C.type!==Zi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),C.type=Zi,rt=r.convert(C.type)),C.format===er&&Ze===s.DEPTH_COMPONENT&&(Ze=s.DEPTH_STENCIL,C.type!==_s&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),C.type=_s,rt=r.convert(C.type))),De&&(Te?t.texStorage2D(s.TEXTURE_2D,1,Ze,_e.width,_e.height):t.texImage2D(s.TEXTURE_2D,0,Ze,_e.width,_e.height,0,nt,rt,null));else if(C.isDataTexture)if(Ce.length>0&&ot){Te&&De&&t.texStorage2D(s.TEXTURE_2D,Re,Ze,Ce[0].width,Ce[0].height);for(let Se=0,je=Ce.length;Se<je;Se++)z=Ce[Se],Te?t.texSubImage2D(s.TEXTURE_2D,Se,0,0,z.width,z.height,nt,rt,z.data):t.texImage2D(s.TEXTURE_2D,Se,Ze,z.width,z.height,0,nt,rt,z.data);C.generateMipmaps=!1}else Te?(De&&t.texStorage2D(s.TEXTURE_2D,Re,Ze,_e.width,_e.height),t.texSubImage2D(s.TEXTURE_2D,0,0,0,_e.width,_e.height,nt,rt,_e.data)):t.texImage2D(s.TEXTURE_2D,0,Ze,_e.width,_e.height,0,nt,rt,_e.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){Te&&De&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Re,Ze,Ce[0].width,Ce[0].height,_e.depth);for(let Se=0,je=Ce.length;Se<je;Se++)z=Ce[Se],C.format!==$n?nt!==null?Te?t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Se,0,0,0,z.width,z.height,_e.depth,nt,z.data,0,0):t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,Se,Ze,z.width,z.height,_e.depth,0,z.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Te?t.texSubImage3D(s.TEXTURE_2D_ARRAY,Se,0,0,0,z.width,z.height,_e.depth,nt,rt,z.data):t.texImage3D(s.TEXTURE_2D_ARRAY,Se,Ze,z.width,z.height,_e.depth,0,nt,rt,z.data)}else{Te&&De&&t.texStorage2D(s.TEXTURE_2D,Re,Ze,Ce[0].width,Ce[0].height);for(let Se=0,je=Ce.length;Se<je;Se++)z=Ce[Se],C.format!==$n?nt!==null?Te?t.compressedTexSubImage2D(s.TEXTURE_2D,Se,0,0,z.width,z.height,nt,z.data):t.compressedTexImage2D(s.TEXTURE_2D,Se,Ze,z.width,z.height,0,z.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Te?t.texSubImage2D(s.TEXTURE_2D,Se,0,0,z.width,z.height,nt,rt,z.data):t.texImage2D(s.TEXTURE_2D,Se,Ze,z.width,z.height,0,nt,rt,z.data)}else if(C.isDataArrayTexture)Te?(De&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Re,Ze,_e.width,_e.height,_e.depth),t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,_e.width,_e.height,_e.depth,nt,rt,_e.data)):t.texImage3D(s.TEXTURE_2D_ARRAY,0,Ze,_e.width,_e.height,_e.depth,0,nt,rt,_e.data);else if(C.isData3DTexture)Te?(De&&t.texStorage3D(s.TEXTURE_3D,Re,Ze,_e.width,_e.height,_e.depth),t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,_e.width,_e.height,_e.depth,nt,rt,_e.data)):t.texImage3D(s.TEXTURE_3D,0,Ze,_e.width,_e.height,_e.depth,0,nt,rt,_e.data);else if(C.isFramebufferTexture){if(De)if(Te)t.texStorage2D(s.TEXTURE_2D,Re,Ze,_e.width,_e.height);else{let Se=_e.width,je=_e.height;for(let ut=0;ut<Re;ut++)t.texImage2D(s.TEXTURE_2D,ut,Ze,Se,je,0,nt,rt,null),Se>>=1,je>>=1}}else if(Ce.length>0&&ot){Te&&De&&t.texStorage2D(s.TEXTURE_2D,Re,Ze,Ce[0].width,Ce[0].height);for(let Se=0,je=Ce.length;Se<je;Se++)z=Ce[Se],Te?t.texSubImage2D(s.TEXTURE_2D,Se,0,0,nt,rt,z):t.texImage2D(s.TEXTURE_2D,Se,Ze,nt,rt,z);C.generateMipmaps=!1}else Te?(De&&t.texStorage2D(s.TEXTURE_2D,Re,Ze,_e.width,_e.height),t.texSubImage2D(s.TEXTURE_2D,0,0,0,nt,rt,_e)):t.texImage2D(s.TEXTURE_2D,0,Ze,nt,rt,_e);w(C,ot)&&A(Ae),qe.__version=Me.version,C.onUpdate&&C.onUpdate(C)}O.__version=C.version}function et(O,C,K){if(C.image.length!==6)return;const Ae=we(O,C),be=C.source;t.bindTexture(s.TEXTURE_CUBE_MAP,O.__webglTexture,s.TEXTURE0+K);const Me=n.get(be);if(be.version!==Me.__version||Ae===!0){t.activeTexture(s.TEXTURE0+K);const qe=It.getPrimaries(It.workingColorSpace),W=C.colorSpace===Qn?null:It.getPrimaries(C.colorSpace),se=C.colorSpace===Qn||qe===W?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,C.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,C.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,se);const U=C.isCompressedTexture||C.image[0].isCompressedTexture,ve=C.image[0]&&C.image[0].isDataTexture,_e=[];for(let Se=0;Se<6;Se++)!U&&!ve?_e[Se]=v(C.image[Se],!1,!0,c):_e[Se]=ve?C.image[Se].image:C.image[Se],_e[Se]=Lt(C,_e[Se]);const ot=_e[0],nt=x(ot)||o,rt=r.convert(C.format,C.colorSpace),Ze=r.convert(C.type),z=P(C.internalFormat,rt,Ze,C.colorSpace),Ce=o&&C.isVideoTexture!==!0,Te=Me.__version===void 0||Ae===!0;let De=M(C,ot,nt);ye(s.TEXTURE_CUBE_MAP,C,nt);let Re;if(U){Ce&&Te&&t.texStorage2D(s.TEXTURE_CUBE_MAP,De,z,ot.width,ot.height);for(let Se=0;Se<6;Se++){Re=_e[Se].mipmaps;for(let je=0;je<Re.length;je++){const ut=Re[je];C.format!==$n?rt!==null?Ce?t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Se,je,0,0,ut.width,ut.height,rt,ut.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Se,je,z,ut.width,ut.height,0,ut.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ce?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Se,je,0,0,ut.width,ut.height,rt,Ze,ut.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Se,je,z,ut.width,ut.height,0,rt,Ze,ut.data)}}}else{Re=C.mipmaps,Ce&&Te&&(Re.length>0&&De++,t.texStorage2D(s.TEXTURE_CUBE_MAP,De,z,_e[0].width,_e[0].height));for(let Se=0;Se<6;Se++)if(ve){Ce?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Se,0,0,0,_e[Se].width,_e[Se].height,rt,Ze,_e[Se].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Se,0,z,_e[Se].width,_e[Se].height,0,rt,Ze,_e[Se].data);for(let je=0;je<Re.length;je++){const Kt=Re[je].image[Se].image;Ce?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Se,je+1,0,0,Kt.width,Kt.height,rt,Ze,Kt.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Se,je+1,z,Kt.width,Kt.height,0,rt,Ze,Kt.data)}}else{Ce?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Se,0,0,0,rt,Ze,_e[Se]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Se,0,z,rt,Ze,_e[Se]);for(let je=0;je<Re.length;je++){const ut=Re[je];Ce?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Se,je+1,0,0,rt,Ze,ut.image[Se]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Se,je+1,z,rt,Ze,ut.image[Se])}}}w(C,nt)&&A(s.TEXTURE_CUBE_MAP),Me.__version=be.version,C.onUpdate&&C.onUpdate(C)}O.__version=C.version}function Ke(O,C,K,Ae,be,Me){const qe=r.convert(K.format,K.colorSpace),W=r.convert(K.type),se=P(K.internalFormat,qe,W,K.colorSpace);if(!n.get(C).__hasExternalTextures){const ve=Math.max(1,C.width>>Me),_e=Math.max(1,C.height>>Me);be===s.TEXTURE_3D||be===s.TEXTURE_2D_ARRAY?t.texImage3D(be,Me,se,ve,_e,C.depth,0,qe,W,null):t.texImage2D(be,Me,se,ve,_e,0,qe,W,null)}t.bindFramebuffer(s.FRAMEBUFFER,O),tt(C)?f.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,Ae,be,n.get(K).__webglTexture,0,Fe(C)):(be===s.TEXTURE_2D||be>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&be<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,Ae,be,n.get(K).__webglTexture,Me),t.bindFramebuffer(s.FRAMEBUFFER,null)}function k(O,C,K){if(s.bindRenderbuffer(s.RENDERBUFFER,O),C.depthBuffer&&!C.stencilBuffer){let Ae=o===!0?s.DEPTH_COMPONENT24:s.DEPTH_COMPONENT16;if(K||tt(C)){const be=C.depthTexture;be&&be.isDepthTexture&&(be.type===Mi?Ae=s.DEPTH_COMPONENT32F:be.type===Zi&&(Ae=s.DEPTH_COMPONENT24));const Me=Fe(C);tt(C)?f.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Me,Ae,C.width,C.height):s.renderbufferStorageMultisample(s.RENDERBUFFER,Me,Ae,C.width,C.height)}else s.renderbufferStorage(s.RENDERBUFFER,Ae,C.width,C.height);s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,O)}else if(C.depthBuffer&&C.stencilBuffer){const Ae=Fe(C);K&&tt(C)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Ae,s.DEPTH24_STENCIL8,C.width,C.height):tt(C)?f.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ae,s.DEPTH24_STENCIL8,C.width,C.height):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,C.width,C.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,O)}else{const Ae=C.isWebGLMultipleRenderTargets===!0?C.texture:[C.texture];for(let be=0;be<Ae.length;be++){const Me=Ae[be],qe=r.convert(Me.format,Me.colorSpace),W=r.convert(Me.type),se=P(Me.internalFormat,qe,W,Me.colorSpace),U=Fe(C);K&&tt(C)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,U,se,C.width,C.height):tt(C)?f.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,U,se,C.width,C.height):s.renderbufferStorage(s.RENDERBUFFER,se,C.width,C.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function xe(O,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,O),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(C.depthTexture).__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),ie(C.depthTexture,0);const Ae=n.get(C.depthTexture).__webglTexture,be=Fe(C);if(C.depthTexture.format===vs)tt(C)?f.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,Ae,0,be):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,Ae,0);else if(C.depthTexture.format===er)tt(C)?f.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,Ae,0,be):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,Ae,0);else throw new Error("Unknown depthTexture format")}function de(O){const C=n.get(O),K=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture&&!C.__autoAllocateDepthBuffer){if(K)throw new Error("target.depthTexture not supported in Cube render targets");xe(C.__webglFramebuffer,O)}else if(K){C.__webglDepthbuffer=[];for(let Ae=0;Ae<6;Ae++)t.bindFramebuffer(s.FRAMEBUFFER,C.__webglFramebuffer[Ae]),C.__webglDepthbuffer[Ae]=s.createRenderbuffer(),k(C.__webglDepthbuffer[Ae],O,!1)}else t.bindFramebuffer(s.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer=s.createRenderbuffer(),k(C.__webglDepthbuffer,O,!1);t.bindFramebuffer(s.FRAMEBUFFER,null)}function X(O,C,K){const Ae=n.get(O);C!==void 0&&Ke(Ae.__webglFramebuffer,O,O.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),K!==void 0&&de(O)}function Q(O){const C=O.texture,K=n.get(O),Ae=n.get(C);O.addEventListener("dispose",j),O.isWebGLMultipleRenderTargets!==!0&&(Ae.__webglTexture===void 0&&(Ae.__webglTexture=s.createTexture()),Ae.__version=C.version,a.memory.textures++);const be=O.isWebGLCubeRenderTarget===!0,Me=O.isWebGLMultipleRenderTargets===!0,qe=x(O)||o;if(be){K.__webglFramebuffer=[];for(let W=0;W<6;W++)if(o&&C.mipmaps&&C.mipmaps.length>0){K.__webglFramebuffer[W]=[];for(let se=0;se<C.mipmaps.length;se++)K.__webglFramebuffer[W][se]=s.createFramebuffer()}else K.__webglFramebuffer[W]=s.createFramebuffer()}else{if(o&&C.mipmaps&&C.mipmaps.length>0){K.__webglFramebuffer=[];for(let W=0;W<C.mipmaps.length;W++)K.__webglFramebuffer[W]=s.createFramebuffer()}else K.__webglFramebuffer=s.createFramebuffer();if(Me)if(i.drawBuffers){const W=O.texture;for(let se=0,U=W.length;se<U;se++){const ve=n.get(W[se]);ve.__webglTexture===void 0&&(ve.__webglTexture=s.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&O.samples>0&&tt(O)===!1){const W=Me?C:[C];K.__webglMultisampledFramebuffer=s.createFramebuffer(),K.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,K.__webglMultisampledFramebuffer);for(let se=0;se<W.length;se++){const U=W[se];K.__webglColorRenderbuffer[se]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,K.__webglColorRenderbuffer[se]);const ve=r.convert(U.format,U.colorSpace),_e=r.convert(U.type),ot=P(U.internalFormat,ve,_e,U.colorSpace,O.isXRRenderTarget===!0),nt=Fe(O);s.renderbufferStorageMultisample(s.RENDERBUFFER,nt,ot,O.width,O.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+se,s.RENDERBUFFER,K.__webglColorRenderbuffer[se])}s.bindRenderbuffer(s.RENDERBUFFER,null),O.depthBuffer&&(K.__webglDepthRenderbuffer=s.createRenderbuffer(),k(K.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(be){t.bindTexture(s.TEXTURE_CUBE_MAP,Ae.__webglTexture),ye(s.TEXTURE_CUBE_MAP,C,qe);for(let W=0;W<6;W++)if(o&&C.mipmaps&&C.mipmaps.length>0)for(let se=0;se<C.mipmaps.length;se++)Ke(K.__webglFramebuffer[W][se],O,C,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+W,se);else Ke(K.__webglFramebuffer[W],O,C,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+W,0);w(C,qe)&&A(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Me){const W=O.texture;for(let se=0,U=W.length;se<U;se++){const ve=W[se],_e=n.get(ve);t.bindTexture(s.TEXTURE_2D,_e.__webglTexture),ye(s.TEXTURE_2D,ve,qe),Ke(K.__webglFramebuffer,O,ve,s.COLOR_ATTACHMENT0+se,s.TEXTURE_2D,0),w(ve,qe)&&A(s.TEXTURE_2D)}t.unbindTexture()}else{let W=s.TEXTURE_2D;if((O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(o?W=O.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(W,Ae.__webglTexture),ye(W,C,qe),o&&C.mipmaps&&C.mipmaps.length>0)for(let se=0;se<C.mipmaps.length;se++)Ke(K.__webglFramebuffer[se],O,C,s.COLOR_ATTACHMENT0,W,se);else Ke(K.__webglFramebuffer,O,C,s.COLOR_ATTACHMENT0,W,0);w(C,qe)&&A(W),t.unbindTexture()}O.depthBuffer&&de(O)}function Le(O){const C=x(O)||o,K=O.isWebGLMultipleRenderTargets===!0?O.texture:[O.texture];for(let Ae=0,be=K.length;Ae<be;Ae++){const Me=K[Ae];if(w(Me,C)){const qe=O.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:s.TEXTURE_2D,W=n.get(Me).__webglTexture;t.bindTexture(qe,W),A(qe),t.unbindTexture()}}}function Ne(O){if(o&&O.samples>0&&tt(O)===!1){const C=O.isWebGLMultipleRenderTargets?O.texture:[O.texture],K=O.width,Ae=O.height;let be=s.COLOR_BUFFER_BIT;const Me=[],qe=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,W=n.get(O),se=O.isWebGLMultipleRenderTargets===!0;if(se)for(let U=0;U<C.length;U++)t.bindFramebuffer(s.FRAMEBUFFER,W.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+U,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,W.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+U,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,W.__webglMultisampledFramebuffer),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,W.__webglFramebuffer);for(let U=0;U<C.length;U++){Me.push(s.COLOR_ATTACHMENT0+U),O.depthBuffer&&Me.push(qe);const ve=W.__ignoreDepthValues!==void 0?W.__ignoreDepthValues:!1;if(ve===!1&&(O.depthBuffer&&(be|=s.DEPTH_BUFFER_BIT),O.stencilBuffer&&(be|=s.STENCIL_BUFFER_BIT)),se&&s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,W.__webglColorRenderbuffer[U]),ve===!0&&(s.invalidateFramebuffer(s.READ_FRAMEBUFFER,[qe]),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[qe])),se){const _e=n.get(C[U]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,_e,0)}s.blitFramebuffer(0,0,K,Ae,0,0,K,Ae,be,s.NEAREST),d&&s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Me)}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),se)for(let U=0;U<C.length;U++){t.bindFramebuffer(s.FRAMEBUFFER,W.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+U,s.RENDERBUFFER,W.__webglColorRenderbuffer[U]);const ve=n.get(C[U]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,W.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+U,s.TEXTURE_2D,ve,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,W.__webglMultisampledFramebuffer)}}function Fe(O){return Math.min(h,O.samples)}function tt(O){const C=n.get(O);return o&&O.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function mt(O){const C=a.render.frame;p.get(O)!==C&&(p.set(O,C),O.update())}function Lt(O,C){const K=O.colorSpace,Ae=O.format,be=O.type;return O.isCompressedTexture===!0||O.isVideoTexture===!0||O.format===Ml||K!==Ri&&K!==Qn&&(It.getTransfer(K)===Ft?o===!1?e.has("EXT_sRGB")===!0&&Ae===$n?(O.format=Ml,O.minFilter=ln,O.generateMipmaps=!1):C=sh.sRGBToLinear(C):(Ae!==$n||be!==$i)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",K)),C}this.allocateTextureUnit=ee,this.resetTextureUnits=q,this.setTexture2D=ie,this.setTexture2DArray=G,this.setTexture3D=Y,this.setTextureCube=ce,this.rebindTextures=X,this.setupRenderTarget=Q,this.updateRenderTargetMipmap=Le,this.updateMultisampleRenderTarget=Ne,this.setupDepthRenderbuffer=de,this.setupFrameBufferTexture=Ke,this.useMultisampledRTT=tt}function ym(s,e,t){const n=t.isWebGL2;function i(r,a=Qn){let o;const l=It.getTransfer(a);if(r===$i)return s.UNSIGNED_BYTE;if(r===Ku)return s.UNSIGNED_SHORT_4_4_4_4;if(r===$u)return s.UNSIGNED_SHORT_5_5_5_1;if(r===Up)return s.BYTE;if(r===Op)return s.SHORT;if(r===Ll)return s.UNSIGNED_SHORT;if(r===Ju)return s.INT;if(r===Zi)return s.UNSIGNED_INT;if(r===Mi)return s.FLOAT;if(r===Zr)return n?s.HALF_FLOAT:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(r===Fp)return s.ALPHA;if(r===$n)return s.RGBA;if(r===kp)return s.LUMINANCE;if(r===Bp)return s.LUMINANCE_ALPHA;if(r===vs)return s.DEPTH_COMPONENT;if(r===er)return s.DEPTH_STENCIL;if(r===Ml)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(r===zp)return s.RED;if(r===Qu)return s.RED_INTEGER;if(r===Hp)return s.RG;if(r===eh)return s.RG_INTEGER;if(r===th)return s.RGBA_INTEGER;if(r===cl||r===ul||r===hl||r===fl)if(l===Ft)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(r===cl)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===ul)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===hl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===fl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(r===cl)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===ul)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===hl)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===fl)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===ou||r===lu||r===cu||r===uu)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(r===ou)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===lu)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===cu)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===uu)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===Gp)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===hu||r===fu)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(r===hu)return l===Ft?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(r===fu)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===du||r===pu||r===mu||r===gu||r===_u||r===vu||r===yu||r===xu||r===bu||r===Su||r===Mu||r===Eu||r===Au||r===Tu)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(r===du)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===pu)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===mu)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===gu)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===_u)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===vu)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===yu)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===xu)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===bu)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Su)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===Mu)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===Eu)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===Au)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===Tu)return l===Ft?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===dl||r===wu||r===Cu)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(r===dl)return l===Ft?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(r===wu)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(r===Cu)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(r===Vp||r===Ru||r===Iu||r===Lu)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(r===dl)return o.COMPRESSED_RED_RGTC1_EXT;if(r===Ru)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===Iu)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===Lu)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===_s?n?s.UNSIGNED_INT_24_8:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class xm extends fn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ps extends Rt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Ub={type:"move"};class Dc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ps,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ps,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ps,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){a=!0;for(const _ of e.hand.values()){const g=t.getJointPose(_,n),m=this._getHandJoint(c,_);g!==null&&(m.matrix.fromArray(g.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.matrixWorldNeedsUpdate=!0,m.jointRadius=g.radius),m.visible=g!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Ub)))}return o!==null&&(o.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new ps;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class bm extends un{constructor(e,t,n,i,r,a,o,l,c,u){if(u=u!==void 0?u:vs,u!==vs&&u!==er)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===vs&&(n=Zi),n===void 0&&u===er&&(n=_s),super(null,i,r,a,o,l,u,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:on,this.minFilter=l!==void 0?l:on,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Ob extends Li{constructor(e,t){super();const n=this;let i=null,r=1,a=null,o="local-floor",l=1,c=null,u=null,h=null,f=null,d=null,p=null;const _=t.getContextAttributes();let g=null,m=null;const y=[],v=[],x=new fn;x.layers.enable(1),x.viewport=new Nt;const E=new fn;E.layers.enable(2),E.viewport=new Nt;const w=[x,E],A=new xm;A.layers.enable(1),A.layers.enable(2);let P=null,M=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(G){let Y=y[G];return Y===void 0&&(Y=new Dc,y[G]=Y),Y.getTargetRaySpace()},this.getControllerGrip=function(G){let Y=y[G];return Y===void 0&&(Y=new Dc,y[G]=Y),Y.getGripSpace()},this.getHand=function(G){let Y=y[G];return Y===void 0&&(Y=new Dc,y[G]=Y),Y.getHandSpace()};function R(G){const Y=v.indexOf(G.inputSource);if(Y===-1)return;const ce=y[Y];ce!==void 0&&(ce.update(G.inputSource,G.frame,c||a),ce.dispatchEvent({type:G.type,data:G.inputSource}))}function V(){i.removeEventListener("select",R),i.removeEventListener("selectstart",R),i.removeEventListener("selectend",R),i.removeEventListener("squeeze",R),i.removeEventListener("squeezestart",R),i.removeEventListener("squeezeend",R),i.removeEventListener("end",V),i.removeEventListener("inputsourceschange",j);for(let G=0;G<y.length;G++){const Y=v[G];Y!==null&&(v[G]=null,y[G].disconnect(Y))}P=null,M=null,e.setRenderTarget(g),d=null,f=null,h=null,i=null,m=null,ie.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(G){r=G,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(G){o=G,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||a},this.setReferenceSpace=function(G){c=G},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(G){if(i=G,i!==null){if(g=e.getRenderTarget(),i.addEventListener("select",R),i.addEventListener("selectstart",R),i.addEventListener("selectend",R),i.addEventListener("squeeze",R),i.addEventListener("squeezestart",R),i.addEventListener("squeezeend",R),i.addEventListener("end",V),i.addEventListener("inputsourceschange",j),_.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Y={antialias:i.renderState.layers===void 0?_.antialias:!0,alpha:!0,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,t,Y),i.updateRenderState({baseLayer:d}),m=new ii(d.framebufferWidth,d.framebufferHeight,{format:$n,type:$i,colorSpace:e.outputColorSpace,stencilBuffer:_.stencil})}else{let Y=null,ce=null,ae=null;_.depth&&(ae=_.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Y=_.stencil?er:vs,ce=_.stencil?_s:Zi);const ue={colorFormat:t.RGBA8,depthFormat:ae,scaleFactor:r};h=new XRWebGLBinding(i,t),f=h.createProjectionLayer(ue),i.updateRenderState({layers:[f]}),m=new ii(f.textureWidth,f.textureHeight,{format:$n,type:$i,depthTexture:new bm(f.textureWidth,f.textureHeight,ce,void 0,void 0,void 0,void 0,void 0,void 0,Y),stencilBuffer:_.stencil,colorSpace:e.outputColorSpace,samples:_.antialias?4:0});const he=e.properties.get(m);he.__ignoreDepthValues=f.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(l),c=null,a=await i.requestReferenceSpace(o),ie.setContext(i),ie.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function j(G){for(let Y=0;Y<G.removed.length;Y++){const ce=G.removed[Y],ae=v.indexOf(ce);ae>=0&&(v[ae]=null,y[ae].disconnect(ce))}for(let Y=0;Y<G.added.length;Y++){const ce=G.added[Y];let ae=v.indexOf(ce);if(ae===-1){for(let he=0;he<y.length;he++)if(he>=v.length){v.push(ce),ae=he;break}else if(v[he]===null){v[he]=ce,ae=he;break}if(ae===-1)break}const ue=y[ae];ue&&ue.connect(ce)}}const ne=new D,F=new D;function H(G,Y,ce){ne.setFromMatrixPosition(Y.matrixWorld),F.setFromMatrixPosition(ce.matrixWorld);const ae=ne.distanceTo(F),ue=Y.projectionMatrix.elements,he=ce.projectionMatrix.elements,ye=ue[14]/(ue[10]-1),we=ue[14]/(ue[10]+1),ge=(ue[9]+1)/ue[5],et=(ue[9]-1)/ue[5],Ke=(ue[8]-1)/ue[0],k=(he[8]+1)/he[0],xe=ye*Ke,de=ye*k,X=ae/(-Ke+k),Q=X*-Ke;Y.matrixWorld.decompose(G.position,G.quaternion,G.scale),G.translateX(Q),G.translateZ(X),G.matrixWorld.compose(G.position,G.quaternion,G.scale),G.matrixWorldInverse.copy(G.matrixWorld).invert();const Le=ye+X,Ne=we+X,Fe=xe-Q,tt=de+(ae-Q),mt=ge*we/Ne*Le,Lt=et*we/Ne*Le;G.projectionMatrix.makePerspective(Fe,tt,mt,Lt,Le,Ne),G.projectionMatrixInverse.copy(G.projectionMatrix).invert()}function B(G,Y){Y===null?G.matrixWorld.copy(G.matrix):G.matrixWorld.multiplyMatrices(Y.matrixWorld,G.matrix),G.matrixWorldInverse.copy(G.matrixWorld).invert()}this.updateCamera=function(G){if(i===null)return;A.near=E.near=x.near=G.near,A.far=E.far=x.far=G.far,(P!==A.near||M!==A.far)&&(i.updateRenderState({depthNear:A.near,depthFar:A.far}),P=A.near,M=A.far);const Y=G.parent,ce=A.cameras;B(A,Y);for(let ae=0;ae<ce.length;ae++)B(ce[ae],Y);ce.length===2?H(A,x,E):A.projectionMatrix.copy(x.projectionMatrix),q(G,A,Y)};function q(G,Y,ce){ce===null?G.matrix.copy(Y.matrixWorld):(G.matrix.copy(ce.matrixWorld),G.matrix.invert(),G.matrix.multiply(Y.matrixWorld)),G.matrix.decompose(G.position,G.quaternion,G.scale),G.updateMatrixWorld(!0),G.projectionMatrix.copy(Y.projectionMatrix),G.projectionMatrixInverse.copy(Y.projectionMatrixInverse),G.isPerspectiveCamera&&(G.fov=Jr*2*Math.atan(1/G.projectionMatrix.elements[5]),G.zoom=1)}this.getCamera=function(){return A},this.getFoveation=function(){if(!(f===null&&d===null))return l},this.setFoveation=function(G){l=G,f!==null&&(f.fixedFoveation=G),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=G)};let ee=null;function Z(G,Y){if(u=Y.getViewerPose(c||a),p=Y,u!==null){const ce=u.views;d!==null&&(e.setRenderTargetFramebuffer(m,d.framebuffer),e.setRenderTarget(m));let ae=!1;ce.length!==A.cameras.length&&(A.cameras.length=0,ae=!0);for(let ue=0;ue<ce.length;ue++){const he=ce[ue];let ye=null;if(d!==null)ye=d.getViewport(he);else{const ge=h.getViewSubImage(f,he);ye=ge.viewport,ue===0&&(e.setRenderTargetTextures(m,ge.colorTexture,f.ignoreDepthValues?void 0:ge.depthStencilTexture),e.setRenderTarget(m))}let we=w[ue];we===void 0&&(we=new fn,we.layers.enable(ue),we.viewport=new Nt,w[ue]=we),we.matrix.fromArray(he.transform.matrix),we.matrix.decompose(we.position,we.quaternion,we.scale),we.projectionMatrix.fromArray(he.projectionMatrix),we.projectionMatrixInverse.copy(we.projectionMatrix).invert(),we.viewport.set(ye.x,ye.y,ye.width,ye.height),ue===0&&(A.matrix.copy(we.matrix),A.matrix.decompose(A.position,A.quaternion,A.scale)),ae===!0&&A.cameras.push(we)}}for(let ce=0;ce<y.length;ce++){const ae=v[ce],ue=y[ce];ae!==null&&ue!==void 0&&ue.update(ae,Y,c||a)}ee&&ee(G,Y),Y.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:Y}),p=null}const ie=new pm;ie.setAnimationLoop(Z),this.setAnimationLoop=function(G){ee=G},this.dispose=function(){}}}function Fb(s,e){function t(g,m){g.matrixAutoUpdate===!0&&g.updateMatrix(),m.value.copy(g.matrix)}function n(g,m){m.color.getRGB(g.fogColor.value,um(s)),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function i(g,m,y,v,x){m.isMeshBasicMaterial||m.isMeshLambertMaterial?r(g,m):m.isMeshToonMaterial?(r(g,m),h(g,m)):m.isMeshPhongMaterial?(r(g,m),u(g,m)):m.isMeshStandardMaterial?(r(g,m),f(g,m),m.isMeshPhysicalMaterial&&d(g,m,x)):m.isMeshMatcapMaterial?(r(g,m),p(g,m)):m.isMeshDepthMaterial?r(g,m):m.isMeshDistanceMaterial?(r(g,m),_(g,m)):m.isMeshNormalMaterial?r(g,m):m.isLineBasicMaterial?(a(g,m),m.isLineDashedMaterial&&o(g,m)):m.isPointsMaterial?l(g,m,y,v):m.isSpriteMaterial?c(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function r(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.bumpMap&&(g.bumpMap.value=m.bumpMap,t(m.bumpMap,g.bumpMapTransform),g.bumpScale.value=m.bumpScale,m.side===Nn&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,t(m.normalMap,g.normalMapTransform),g.normalScale.value.copy(m.normalScale),m.side===Nn&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,t(m.displacementMap,g.displacementMapTransform),g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap,t(m.emissiveMap,g.emissiveMapTransform)),m.specularMap&&(g.specularMap.value=m.specularMap,t(m.specularMap,g.specularMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const y=e.get(m).envMap;if(y&&(g.envMap.value=y,g.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap){g.lightMap.value=m.lightMap;const v=s._useLegacyLights===!0?Math.PI:1;g.lightMapIntensity.value=m.lightMapIntensity*v,t(m.lightMap,g.lightMapTransform)}m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity,t(m.aoMap,g.aoMapTransform))}function a(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform))}function o(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function l(g,m,y,v){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*y,g.scale.value=v*.5,m.map&&(g.map.value=m.map,t(m.map,g.uvTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function c(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function u(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function h(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function f(g,m){g.metalness.value=m.metalness,m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap,t(m.metalnessMap,g.metalnessMapTransform)),g.roughness.value=m.roughness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap,t(m.roughnessMap,g.roughnessMapTransform)),e.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function d(g,m,y){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap,t(m.sheenColorMap,g.sheenColorMapTransform)),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap,t(m.sheenRoughnessMap,g.sheenRoughnessMapTransform))),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap,t(m.clearcoatMap,g.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,t(m.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(g.clearcoatNormalMap.value=m.clearcoatNormalMap,t(m.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),m.side===Nn&&g.clearcoatNormalScale.value.negate())),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap,t(m.iridescenceMap,g.iridescenceMapTransform)),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap,t(m.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=y.texture,g.transmissionSamplerSize.value.set(y.width,y.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap,t(m.transmissionMap,g.transmissionMapTransform)),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap,t(m.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(g.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(g.anisotropyMap.value=m.anisotropyMap,t(m.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap,t(m.specularColorMap,g.specularColorMapTransform)),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap,t(m.specularIntensityMap,g.specularIntensityMapTransform))}function p(g,m){m.matcap&&(g.matcap.value=m.matcap)}function _(g,m){const y=e.get(m).light;g.referencePosition.value.setFromMatrixPosition(y.matrixWorld),g.nearDistance.value=y.shadow.camera.near,g.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function kb(s,e,t,n){let i={},r={},a=[];const o=t.isWebGL2?s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(y,v){const x=v.program;n.uniformBlockBinding(y,x)}function c(y,v){let x=i[y.id];x===void 0&&(p(y),x=u(y),i[y.id]=x,y.addEventListener("dispose",g));const E=v.program;n.updateUBOMapping(y,E);const w=e.render.frame;r[y.id]!==w&&(f(y),r[y.id]=w)}function u(y){const v=h();y.__bindingPointIndex=v;const x=s.createBuffer(),E=y.__size,w=y.usage;return s.bindBuffer(s.UNIFORM_BUFFER,x),s.bufferData(s.UNIFORM_BUFFER,E,w),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,v,x),x}function h(){for(let y=0;y<o;y++)if(a.indexOf(y)===-1)return a.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(y){const v=i[y.id],x=y.uniforms,E=y.__cache;s.bindBuffer(s.UNIFORM_BUFFER,v);for(let w=0,A=x.length;w<A;w++){const P=x[w];if(d(P,w,E)===!0){const M=P.__offset,R=Array.isArray(P.value)?P.value:[P.value];let V=0;for(let j=0;j<R.length;j++){const ne=R[j],F=_(ne);typeof ne=="number"?(P.__data[0]=ne,s.bufferSubData(s.UNIFORM_BUFFER,M+V,P.__data)):ne.isMatrix3?(P.__data[0]=ne.elements[0],P.__data[1]=ne.elements[1],P.__data[2]=ne.elements[2],P.__data[3]=ne.elements[0],P.__data[4]=ne.elements[3],P.__data[5]=ne.elements[4],P.__data[6]=ne.elements[5],P.__data[7]=ne.elements[0],P.__data[8]=ne.elements[6],P.__data[9]=ne.elements[7],P.__data[10]=ne.elements[8],P.__data[11]=ne.elements[0]):(ne.toArray(P.__data,V),V+=F.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,M,P.__data)}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function d(y,v,x){const E=y.value;if(x[v]===void 0){if(typeof E=="number")x[v]=E;else{const w=Array.isArray(E)?E:[E],A=[];for(let P=0;P<w.length;P++)A.push(w[P].clone());x[v]=A}return!0}else if(typeof E=="number"){if(x[v]!==E)return x[v]=E,!0}else{const w=Array.isArray(x[v])?x[v]:[x[v]],A=Array.isArray(E)?E:[E];for(let P=0;P<w.length;P++){const M=w[P];if(M.equals(A[P])===!1)return M.copy(A[P]),!0}}return!1}function p(y){const v=y.uniforms;let x=0;const E=16;let w=0;for(let A=0,P=v.length;A<P;A++){const M=v[A],R={boundary:0,storage:0},V=Array.isArray(M.value)?M.value:[M.value];for(let j=0,ne=V.length;j<ne;j++){const F=V[j],H=_(F);R.boundary+=H.boundary,R.storage+=H.storage}if(M.__data=new Float32Array(R.storage/Float32Array.BYTES_PER_ELEMENT),M.__offset=x,A>0){w=x%E;const j=E-w;w!==0&&j-R.boundary<0&&(x+=E-w,M.__offset=x)}x+=R.storage}return w=x%E,w>0&&(x+=E-w),y.__size=x,y.__cache={},this}function _(y){const v={boundary:0,storage:0};return typeof y=="number"?(v.boundary=4,v.storage=4):y.isVector2?(v.boundary=8,v.storage=8):y.isVector3||y.isColor?(v.boundary=16,v.storage=12):y.isVector4?(v.boundary=16,v.storage=16):y.isMatrix3?(v.boundary=48,v.storage=48):y.isMatrix4?(v.boundary=64,v.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),v}function g(y){const v=y.target;v.removeEventListener("dispose",g);const x=a.indexOf(v.__bindingPointIndex);a.splice(x,1),s.deleteBuffer(i[v.id]),delete i[v.id],delete r[v.id]}function m(){for(const y in i)s.deleteBuffer(i[y]);a=[],i={},r={}}return{bind:l,update:c,dispose:m}}class uh{constructor(e={}){const{canvas:t=om(),context:n=null,depth:i=!0,stencil:r=!0,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1}=e;this.isWebGLRenderer=!0;let f;n!==null?f=n.getContextAttributes().alpha:f=a;const d=new Uint32Array(4),p=new Int32Array(4);let _=null,g=null;const m=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=tn,this._useLegacyLights=!1,this.toneMapping=Ki,this.toneMappingExposure=1;const v=this;let x=!1,E=0,w=0,A=null,P=-1,M=null;const R=new Nt,V=new Nt;let j=null;const ne=new Oe(0);let F=0,H=t.width,B=t.height,q=1,ee=null,Z=null;const ie=new Nt(0,0,H,B),G=new Nt(0,0,H,B);let Y=!1;const ce=new Fl;let ae=!1,ue=!1,he=null;const ye=new at,we=new pe,ge=new D,et={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ke(){return A===null?q:1}let k=n;function xe(N,J){for(let oe=0;oe<N.length;oe++){const $=N[oe],le=t.getContext($,J);if(le!==null)return le}return null}try{const N={alpha:!0,depth:i,stencil:r,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Ya}`),t.addEventListener("webglcontextlost",Ce,!1),t.addEventListener("webglcontextrestored",Te,!1),t.addEventListener("webglcontextcreationerror",De,!1),k===null){const J=["webgl2","webgl","experimental-webgl"];if(v.isWebGL1Renderer===!0&&J.shift(),k=xe(J,N),k===null)throw xe(J)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&k instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),k.getShaderPrecisionFormat===void 0&&(k.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(N){throw console.error("THREE.WebGLRenderer: "+N.message),N}let de,X,Q,Le,Ne,Fe,tt,mt,Lt,O,C,K,Ae,be,Me,qe,W,se,U,ve,_e,ot,nt,rt;function Ze(){de=new ex(k),X=new jy(k,de,e),de.init(X),ot=new ym(k,de,X),Q=new Db(k,de,X),Le=new ix(k),Ne=new bb,Fe=new Nb(k,de,Q,Ne,X,ot,Le),tt=new Jy(v),mt=new Qy(v),Lt=new d0(k,X),nt=new qy(k,de,Lt,X),O=new tx(k,Lt,Le,nt),C=new ox(k,O,Lt,Le),U=new ax(k,X,Fe),qe=new Zy(Ne),K=new xb(v,tt,mt,de,X,nt,qe),Ae=new Fb(v,Ne),be=new Mb,Me=new Rb(de,X),se=new Xy(v,tt,mt,Q,C,f,l),W=new Pb(v,C,X),rt=new kb(k,Le,X,Q),ve=new Yy(k,de,Le,X),_e=new nx(k,de,Le,X),Le.programs=K.programs,v.capabilities=X,v.extensions=de,v.properties=Ne,v.renderLists=be,v.shadowMap=W,v.state=Q,v.info=Le}Ze();const z=new Ob(v,k);this.xr=z,this.getContext=function(){return k},this.getContextAttributes=function(){return k.getContextAttributes()},this.forceContextLoss=function(){const N=de.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=de.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return q},this.setPixelRatio=function(N){N!==void 0&&(q=N,this.setSize(H,B,!1))},this.getSize=function(N){return N.set(H,B)},this.setSize=function(N,J,oe=!0){if(z.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}H=N,B=J,t.width=Math.floor(N*q),t.height=Math.floor(J*q),oe===!0&&(t.style.width=N+"px",t.style.height=J+"px"),this.setViewport(0,0,N,J)},this.getDrawingBufferSize=function(N){return N.set(H*q,B*q).floor()},this.setDrawingBufferSize=function(N,J,oe){H=N,B=J,q=oe,t.width=Math.floor(N*oe),t.height=Math.floor(J*oe),this.setViewport(0,0,N,J)},this.getCurrentViewport=function(N){return N.copy(R)},this.getViewport=function(N){return N.copy(ie)},this.setViewport=function(N,J,oe,$){N.isVector4?ie.set(N.x,N.y,N.z,N.w):ie.set(N,J,oe,$),Q.viewport(R.copy(ie).multiplyScalar(q).floor())},this.getScissor=function(N){return N.copy(G)},this.setScissor=function(N,J,oe,$){N.isVector4?G.set(N.x,N.y,N.z,N.w):G.set(N,J,oe,$),Q.scissor(V.copy(G).multiplyScalar(q).floor())},this.getScissorTest=function(){return Y},this.setScissorTest=function(N){Q.setScissorTest(Y=N)},this.setOpaqueSort=function(N){ee=N},this.setTransparentSort=function(N){Z=N},this.getClearColor=function(N){return N.copy(se.getClearColor())},this.setClearColor=function(){se.setClearColor.apply(se,arguments)},this.getClearAlpha=function(){return se.getClearAlpha()},this.setClearAlpha=function(){se.setClearAlpha.apply(se,arguments)},this.clear=function(N=!0,J=!0,oe=!0){let $=0;if(N){let le=!1;if(A!==null){const He=A.texture.format;le=He===th||He===eh||He===Qu}if(le){const He=A.texture.type,lt=He===$i||He===Zi||He===Ll||He===_s||He===Ku||He===$u,pt=se.getClearColor(),$e=se.getClearAlpha(),_t=pt.r,ht=pt.g,vt=pt.b;lt?(d[0]=_t,d[1]=ht,d[2]=vt,d[3]=$e,k.clearBufferuiv(k.COLOR,0,d)):(p[0]=_t,p[1]=ht,p[2]=vt,p[3]=$e,k.clearBufferiv(k.COLOR,0,p))}else $|=k.COLOR_BUFFER_BIT}J&&($|=k.DEPTH_BUFFER_BIT),oe&&($|=k.STENCIL_BUFFER_BIT),k.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ce,!1),t.removeEventListener("webglcontextrestored",Te,!1),t.removeEventListener("webglcontextcreationerror",De,!1),be.dispose(),Me.dispose(),Ne.dispose(),tt.dispose(),mt.dispose(),C.dispose(),nt.dispose(),rt.dispose(),K.dispose(),z.dispose(),z.removeEventListener("sessionstart",Mt),z.removeEventListener("sessionend",Zn),he&&(he.dispose(),he=null),Sn.stop()};function Ce(N){N.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function Te(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;const N=Le.autoReset,J=W.enabled,oe=W.autoUpdate,$=W.needsUpdate,le=W.type;Ze(),Le.autoReset=N,W.enabled=J,W.autoUpdate=oe,W.needsUpdate=$,W.type=le}function De(N){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",N.statusMessage)}function Re(N){const J=N.target;J.removeEventListener("dispose",Re),Se(J)}function Se(N){je(N),Ne.remove(N)}function je(N){const J=Ne.get(N).programs;J!==void 0&&(J.forEach(function(oe){K.releaseProgram(oe)}),N.isShaderMaterial&&K.releaseShaderCache(N))}this.renderBufferDirect=function(N,J,oe,$,le,He){J===null&&(J=et);const lt=le.isMesh&&le.matrixWorld.determinant()<0,pt=co(N,J,oe,$,le);Q.setMaterial($,lt);let $e=oe.index,_t=1;if($.wireframe===!0){if($e=O.getWireframeAttribute(oe),$e===void 0)return;_t=2}const ht=oe.drawRange,vt=oe.attributes.position;let Gt=ht.start*_t,Vt=(ht.start+ht.count)*_t;He!==null&&(Gt=Math.max(Gt,He.start*_t),Vt=Math.min(Vt,(He.start+He.count)*_t)),$e!==null?(Gt=Math.max(Gt,0),Vt=Math.min(Vt,$e.count)):vt!=null&&(Gt=Math.max(Gt,0),Vt=Math.min(Vt,vt.count));const Hn=Vt-Gt;if(Hn<0||Hn===1/0)return;nt.setup(le,$,pt,oe,$e);let oi,$t=ve;if($e!==null&&(oi=Lt.get($e),$t=_e,$t.setIndex(oi)),le.isMesh)$.wireframe===!0?(Q.setLineWidth($.wireframeLinewidth*Ke()),$t.setMode(k.LINES)):$t.setMode(k.TRIANGLES);else if(le.isLine){let St=$.linewidth;St===void 0&&(St=1),Q.setLineWidth(St*Ke()),le.isLineSegments?$t.setMode(k.LINES):le.isLineLoop?$t.setMode(k.LINE_LOOP):$t.setMode(k.LINE_STRIP)}else le.isPoints?$t.setMode(k.POINTS):le.isSprite&&$t.setMode(k.TRIANGLES);if(le.isInstancedMesh)$t.renderInstances(Gt,Hn,le.count);else if(oe.isInstancedBufferGeometry){const St=oe._maxInstanceCount!==void 0?oe._maxInstanceCount:1/0,mr=Math.min(oe.instanceCount,St);$t.renderInstances(Gt,Hn,mr)}else $t.render(Gt,Hn)},this.compile=function(N,J){function oe($,le,He){$.transparent===!0&&$.side===hi&&$.forceSinglePass===!1?($.side=Nn,$.needsUpdate=!0,ws($,le,He),$.side=Ci,$.needsUpdate=!0,ws($,le,He),$.side=hi):ws($,le,He)}g=Me.get(N),g.init(),y.push(g),N.traverseVisible(function($){$.isLight&&$.layers.test(J.layers)&&(g.pushLight($),$.castShadow&&g.pushShadow($))}),g.setupLights(v._useLegacyLights),N.traverse(function($){const le=$.material;if(le)if(Array.isArray(le))for(let He=0;He<le.length;He++){const lt=le[He];oe(lt,N,$)}else oe(le,N,$)}),y.pop(),g=null};let ut=null;function Kt(N){ut&&ut(N)}function Mt(){Sn.stop()}function Zn(){Sn.start()}const Sn=new pm;Sn.setAnimationLoop(Kt),typeof self<"u"&&Sn.setContext(self),this.setAnimationLoop=function(N){ut=N,z.setAnimationLoop(N),N===null?Sn.stop():Sn.start()},z.addEventListener("sessionstart",Mt),z.addEventListener("sessionend",Zn),this.render=function(N,J){if(J!==void 0&&J.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(x===!0)return;N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),J.parent===null&&J.matrixWorldAutoUpdate===!0&&J.updateMatrixWorld(),z.enabled===!0&&z.isPresenting===!0&&(z.cameraAutoUpdate===!0&&z.updateCamera(J),J=z.getCamera()),N.isScene===!0&&N.onBeforeRender(v,N,J,A),g=Me.get(N,y.length),g.init(),y.push(g),ye.multiplyMatrices(J.projectionMatrix,J.matrixWorldInverse),ce.setFromProjectionMatrix(ye),ue=this.localClippingEnabled,ae=qe.init(this.clippingPlanes,ue),_=be.get(N,m.length),_.init(),m.push(_),ro(N,J,0,v.sortObjects),_.finish(),v.sortObjects===!0&&_.sort(ee,Z),this.info.render.frame++,ae===!0&&qe.beginShadows();const oe=g.state.shadowsArray;if(W.render(oe,N,J),ae===!0&&qe.endShadows(),this.info.autoReset===!0&&this.info.reset(),se.render(_,N),g.setupLights(v._useLegacyLights),J.isArrayCamera){const $=J.cameras;for(let le=0,He=$.length;le<He;le++){const lt=$[le];ao(_,N,lt,lt.viewport)}}else ao(_,N,J);A!==null&&(Fe.updateMultisampleRenderTarget(A),Fe.updateRenderTargetMipmap(A)),N.isScene===!0&&N.onAfterRender(v,N,J),nt.resetDefaultState(),P=-1,M=null,y.pop(),y.length>0?g=y[y.length-1]:g=null,m.pop(),m.length>0?_=m[m.length-1]:_=null};function ro(N,J,oe,$){if(N.visible===!1)return;if(N.layers.test(J.layers)){if(N.isGroup)oe=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(J);else if(N.isLight)g.pushLight(N),N.castShadow&&g.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||ce.intersectsSprite(N)){$&&ge.setFromMatrixPosition(N.matrixWorld).applyMatrix4(ye);const lt=C.update(N),pt=N.material;pt.visible&&_.push(N,lt,pt,oe,ge.z,null)}}else if((N.isMesh||N.isLine||N.isPoints)&&(!N.frustumCulled||ce.intersectsObject(N))){const lt=C.update(N),pt=N.material;if($&&(N.boundingSphere!==void 0?(N.boundingSphere===null&&N.computeBoundingSphere(),ge.copy(N.boundingSphere.center)):(lt.boundingSphere===null&&lt.computeBoundingSphere(),ge.copy(lt.boundingSphere.center)),ge.applyMatrix4(N.matrixWorld).applyMatrix4(ye)),Array.isArray(pt)){const $e=lt.groups;for(let _t=0,ht=$e.length;_t<ht;_t++){const vt=$e[_t],Gt=pt[vt.materialIndex];Gt&&Gt.visible&&_.push(N,lt,Gt,oe,ge.z,vt)}}else pt.visible&&_.push(N,lt,pt,oe,ge.z,null)}}const He=N.children;for(let lt=0,pt=He.length;lt<pt;lt++)ro(He[lt],J,oe,$)}function ao(N,J,oe,$){const le=N.opaque,He=N.transmissive,lt=N.transparent;g.setupLightsView(oe),ae===!0&&qe.setGlobalState(v.clippingPlanes,oe),He.length>0&&cc(le,He,J,oe),$&&Q.viewport(R.copy($)),le.length>0&&pr(le,J,oe),He.length>0&&pr(He,J,oe),lt.length>0&&pr(lt,J,oe),Q.buffers.depth.setTest(!0),Q.buffers.depth.setMask(!0),Q.buffers.color.setMask(!0),Q.setPolygonOffset(!1)}function cc(N,J,oe,$){const le=X.isWebGL2;he===null&&(he=new ii(1,1,{generateMipmaps:!0,type:de.has("EXT_color_buffer_half_float")?Zr:$i,minFilter:ns,samples:le?4:0})),v.getDrawingBufferSize(we),le?he.setSize(we.x,we.y):he.setSize(El(we.x),El(we.y));const He=v.getRenderTarget();v.setRenderTarget(he),v.getClearColor(ne),F=v.getClearAlpha(),F<1&&v.setClearColor(16777215,.5),v.clear();const lt=v.toneMapping;v.toneMapping=Ki,pr(N,oe,$),Fe.updateMultisampleRenderTarget(he),Fe.updateRenderTargetMipmap(he);let pt=!1;for(let $e=0,_t=J.length;$e<_t;$e++){const ht=J[$e],vt=ht.object,Gt=ht.geometry,Vt=ht.material,Hn=ht.group;if(Vt.side===hi&&vt.layers.test($.layers)){const oi=Vt.side;Vt.side=Nn,Vt.needsUpdate=!0,oo(vt,oe,$,Gt,Vt,Hn),Vt.side=oi,Vt.needsUpdate=!0,pt=!0}}pt===!0&&(Fe.updateMultisampleRenderTarget(he),Fe.updateRenderTargetMipmap(he)),v.setRenderTarget(He),v.setClearColor(ne,F),v.toneMapping=lt}function pr(N,J,oe){const $=J.isScene===!0?J.overrideMaterial:null;for(let le=0,He=N.length;le<He;le++){const lt=N[le],pt=lt.object,$e=lt.geometry,_t=$===null?lt.material:$,ht=lt.group;pt.layers.test(oe.layers)&&oo(pt,J,oe,$e,_t,ht)}}function oo(N,J,oe,$,le,He){N.onBeforeRender(v,J,oe,$,le,He),N.modelViewMatrix.multiplyMatrices(oe.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),le.onBeforeRender(v,J,oe,$,N,He),le.transparent===!0&&le.side===hi&&le.forceSinglePass===!1?(le.side=Nn,le.needsUpdate=!0,v.renderBufferDirect(oe,J,$,le,N,He),le.side=Ci,le.needsUpdate=!0,v.renderBufferDirect(oe,J,$,le,N,He),le.side=hi):v.renderBufferDirect(oe,J,$,le,N,He),N.onAfterRender(v,J,oe,$,le,He)}function ws(N,J,oe){J.isScene!==!0&&(J=et);const $=Ne.get(N),le=g.state.lights,He=g.state.shadowsArray,lt=le.state.version,pt=K.getParameters(N,le.state,He,J,oe),$e=K.getProgramCacheKey(pt);let _t=$.programs;$.environment=N.isMeshStandardMaterial?J.environment:null,$.fog=J.fog,$.envMap=(N.isMeshStandardMaterial?mt:tt).get(N.envMap||$.environment),_t===void 0&&(N.addEventListener("dispose",Re),_t=new Map,$.programs=_t);let ht=_t.get($e);if(ht!==void 0){if($.currentProgram===ht&&$.lightsStateVersion===lt)return lo(N,pt),ht}else pt.uniforms=K.getUniforms(N),N.onBuild(oe,pt,v),N.onBeforeCompile(pt,v),ht=K.acquireProgram(pt,$e),_t.set($e,ht),$.uniforms=pt.uniforms;const vt=$.uniforms;(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(vt.clippingPlanes=qe.uniform),lo(N,pt),$.needsLights=hc(N),$.lightsStateVersion=lt,$.needsLights&&(vt.ambientLightColor.value=le.state.ambient,vt.lightProbe.value=le.state.probe,vt.directionalLights.value=le.state.directional,vt.directionalLightShadows.value=le.state.directionalShadow,vt.spotLights.value=le.state.spot,vt.spotLightShadows.value=le.state.spotShadow,vt.rectAreaLights.value=le.state.rectArea,vt.ltc_1.value=le.state.rectAreaLTC1,vt.ltc_2.value=le.state.rectAreaLTC2,vt.pointLights.value=le.state.point,vt.pointLightShadows.value=le.state.pointShadow,vt.hemisphereLights.value=le.state.hemi,vt.directionalShadowMap.value=le.state.directionalShadowMap,vt.directionalShadowMatrix.value=le.state.directionalShadowMatrix,vt.spotShadowMap.value=le.state.spotShadowMap,vt.spotLightMatrix.value=le.state.spotLightMatrix,vt.spotLightMap.value=le.state.spotLightMap,vt.pointShadowMap.value=le.state.pointShadowMap,vt.pointShadowMatrix.value=le.state.pointShadowMatrix);const Gt=ht.getUniforms(),Vt=gl.seqWithValue(Gt.seq,vt);return $.currentProgram=ht,$.uniformsList=Vt,ht}function lo(N,J){const oe=Ne.get(N);oe.outputColorSpace=J.outputColorSpace,oe.instancing=J.instancing,oe.instancingColor=J.instancingColor,oe.skinning=J.skinning,oe.morphTargets=J.morphTargets,oe.morphNormals=J.morphNormals,oe.morphColors=J.morphColors,oe.morphTargetsCount=J.morphTargetsCount,oe.numClippingPlanes=J.numClippingPlanes,oe.numIntersection=J.numClipIntersection,oe.vertexAlphas=J.vertexAlphas,oe.vertexTangents=J.vertexTangents,oe.toneMapping=J.toneMapping}function co(N,J,oe,$,le){J.isScene!==!0&&(J=et),Fe.resetTextureUnits();const He=J.fog,lt=$.isMeshStandardMaterial?J.environment:null,pt=A===null?v.outputColorSpace:A.isXRRenderTarget===!0?A.texture.colorSpace:Ri,$e=($.isMeshStandardMaterial?mt:tt).get($.envMap||lt),_t=$.vertexColors===!0&&!!oe.attributes.color&&oe.attributes.color.itemSize===4,ht=!!oe.attributes.tangent&&(!!$.normalMap||$.anisotropy>0),vt=!!oe.morphAttributes.position,Gt=!!oe.morphAttributes.normal,Vt=!!oe.morphAttributes.color;let Hn=Ki;$.toneMapped&&(A===null||A.isXRRenderTarget===!0)&&(Hn=v.toneMapping);const oi=oe.morphAttributes.position||oe.morphAttributes.normal||oe.morphAttributes.color,$t=oi!==void 0?oi.length:0,St=Ne.get($),mr=g.state.lights;if(ae===!0&&(ue===!0||N!==M)){const Tn=N===M&&$.id===P;qe.setState($,N,Tn)}let Ot=!1;$.version===St.__version?(St.needsLights&&St.lightsStateVersion!==mr.state.version||St.outputColorSpace!==pt||le.isInstancedMesh&&St.instancing===!1||!le.isInstancedMesh&&St.instancing===!0||le.isSkinnedMesh&&St.skinning===!1||!le.isSkinnedMesh&&St.skinning===!0||le.isInstancedMesh&&St.instancingColor===!0&&le.instanceColor===null||le.isInstancedMesh&&St.instancingColor===!1&&le.instanceColor!==null||St.envMap!==$e||$.fog===!0&&St.fog!==He||St.numClippingPlanes!==void 0&&(St.numClippingPlanes!==qe.numPlanes||St.numIntersection!==qe.numIntersection)||St.vertexAlphas!==_t||St.vertexTangents!==ht||St.morphTargets!==vt||St.morphNormals!==Gt||St.morphColors!==Vt||St.toneMapping!==Hn||X.isWebGL2===!0&&St.morphTargetsCount!==$t)&&(Ot=!0):(Ot=!0,St.__version=$.version);let Di=St.currentProgram;Ot===!0&&(Di=ws($,J,le));let aa=!1,Cs=!1,gr=!1;const Mn=Di.getUniforms(),Ni=St.uniforms;if(Q.useProgram(Di.program)&&(aa=!0,Cs=!0,gr=!0),$.id!==P&&(P=$.id,Cs=!0),aa||M!==N){Mn.setValue(k,"projectionMatrix",N.projectionMatrix),Mn.setValue(k,"viewMatrix",N.matrixWorldInverse);const Tn=Mn.map.cameraPosition;Tn!==void 0&&Tn.setValue(k,ge.setFromMatrixPosition(N.matrixWorld)),X.logarithmicDepthBuffer&&Mn.setValue(k,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&Mn.setValue(k,"isOrthographic",N.isOrthographicCamera===!0),M!==N&&(M=N,Cs=!0,gr=!0)}if(le.isSkinnedMesh){Mn.setOptional(k,le,"bindMatrix"),Mn.setOptional(k,le,"bindMatrixInverse");const Tn=le.skeleton;Tn&&(X.floatVertexTextures?(Tn.boneTexture===null&&Tn.computeBoneTexture(),Mn.setValue(k,"boneTexture",Tn.boneTexture,Fe),Mn.setValue(k,"boneTextureSize",Tn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const oa=oe.morphAttributes;if((oa.position!==void 0||oa.normal!==void 0||oa.color!==void 0&&X.isWebGL2===!0)&&U.update(le,oe,Di),(Cs||St.receiveShadow!==le.receiveShadow)&&(St.receiveShadow=le.receiveShadow,Mn.setValue(k,"receiveShadow",le.receiveShadow)),$.isMeshGouraudMaterial&&$.envMap!==null&&(Ni.envMap.value=$e,Ni.flipEnvMap.value=$e.isCubeTexture&&$e.isRenderTargetTexture===!1?-1:1),Cs&&(Mn.setValue(k,"toneMappingExposure",v.toneMappingExposure),St.needsLights&&uc(Ni,gr),He&&$.fog===!0&&Ae.refreshFogUniforms(Ni,He),Ae.refreshMaterialUniforms(Ni,$,q,B,he),gl.upload(k,St.uniformsList,Ni,Fe)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(gl.upload(k,St.uniformsList,Ni,Fe),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&Mn.setValue(k,"center",le.center),Mn.setValue(k,"modelViewMatrix",le.modelViewMatrix),Mn.setValue(k,"normalMatrix",le.normalMatrix),Mn.setValue(k,"modelMatrix",le.matrixWorld),$.isShaderMaterial||$.isRawShaderMaterial){const Tn=$.uniformsGroups;for(let Wt=0,la=Tn.length;Wt<la;Wt++)if(X.isWebGL2){const uo=Tn[Wt];rt.update(uo,Di),rt.bind(uo,Di)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Di}function uc(N,J){N.ambientLightColor.needsUpdate=J,N.lightProbe.needsUpdate=J,N.directionalLights.needsUpdate=J,N.directionalLightShadows.needsUpdate=J,N.pointLights.needsUpdate=J,N.pointLightShadows.needsUpdate=J,N.spotLights.needsUpdate=J,N.spotLightShadows.needsUpdate=J,N.rectAreaLights.needsUpdate=J,N.hemisphereLights.needsUpdate=J}function hc(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.getActiveCubeFace=function(){return E},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return A},this.setRenderTargetTextures=function(N,J,oe){Ne.get(N.texture).__webglTexture=J,Ne.get(N.depthTexture).__webglTexture=oe;const $=Ne.get(N);$.__hasExternalTextures=!0,$.__hasExternalTextures&&($.__autoAllocateDepthBuffer=oe===void 0,$.__autoAllocateDepthBuffer||de.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),$.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(N,J){const oe=Ne.get(N);oe.__webglFramebuffer=J,oe.__useDefaultFramebuffer=J===void 0},this.setRenderTarget=function(N,J=0,oe=0){A=N,E=J,w=oe;let $=!0,le=null,He=!1,lt=!1;if(N){const $e=Ne.get(N);$e.__useDefaultFramebuffer!==void 0?(Q.bindFramebuffer(k.FRAMEBUFFER,null),$=!1):$e.__webglFramebuffer===void 0?Fe.setupRenderTarget(N):$e.__hasExternalTextures&&Fe.rebindTextures(N,Ne.get(N.texture).__webglTexture,Ne.get(N.depthTexture).__webglTexture);const _t=N.texture;(_t.isData3DTexture||_t.isDataArrayTexture||_t.isCompressedArrayTexture)&&(lt=!0);const ht=Ne.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(Array.isArray(ht[J])?le=ht[J][oe]:le=ht[J],He=!0):X.isWebGL2&&N.samples>0&&Fe.useMultisampledRTT(N)===!1?le=Ne.get(N).__webglMultisampledFramebuffer:Array.isArray(ht)?le=ht[oe]:le=ht,R.copy(N.viewport),V.copy(N.scissor),j=N.scissorTest}else R.copy(ie).multiplyScalar(q).floor(),V.copy(G).multiplyScalar(q).floor(),j=Y;if(Q.bindFramebuffer(k.FRAMEBUFFER,le)&&X.drawBuffers&&$&&Q.drawBuffers(N,le),Q.viewport(R),Q.scissor(V),Q.setScissorTest(j),He){const $e=Ne.get(N.texture);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_CUBE_MAP_POSITIVE_X+J,$e.__webglTexture,oe)}else if(lt){const $e=Ne.get(N.texture),_t=J||0;k.framebufferTextureLayer(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,$e.__webglTexture,oe||0,_t)}P=-1},this.readRenderTargetPixels=function(N,J,oe,$,le,He,lt){if(!(N&&N.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let pt=Ne.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&lt!==void 0&&(pt=pt[lt]),pt){Q.bindFramebuffer(k.FRAMEBUFFER,pt);try{const $e=N.texture,_t=$e.format,ht=$e.type;if(_t!==$n&&ot.convert(_t)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const vt=ht===Zr&&(de.has("EXT_color_buffer_half_float")||X.isWebGL2&&de.has("EXT_color_buffer_float"));if(ht!==$i&&ot.convert(ht)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_TYPE)&&!(ht===Mi&&(X.isWebGL2||de.has("OES_texture_float")||de.has("WEBGL_color_buffer_float")))&&!vt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}J>=0&&J<=N.width-$&&oe>=0&&oe<=N.height-le&&k.readPixels(J,oe,$,le,ot.convert(_t),ot.convert(ht),He)}finally{const $e=A!==null?Ne.get(A).__webglFramebuffer:null;Q.bindFramebuffer(k.FRAMEBUFFER,$e)}}},this.copyFramebufferToTexture=function(N,J,oe=0){const $=Math.pow(2,-oe),le=Math.floor(J.image.width*$),He=Math.floor(J.image.height*$);Fe.setTexture2D(J,0),k.copyTexSubImage2D(k.TEXTURE_2D,oe,0,0,N.x,N.y,le,He),Q.unbindTexture()},this.copyTextureToTexture=function(N,J,oe,$=0){const le=J.image.width,He=J.image.height,lt=ot.convert(oe.format),pt=ot.convert(oe.type);Fe.setTexture2D(oe,0),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,oe.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,oe.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,oe.unpackAlignment),J.isDataTexture?k.texSubImage2D(k.TEXTURE_2D,$,N.x,N.y,le,He,lt,pt,J.image.data):J.isCompressedTexture?k.compressedTexSubImage2D(k.TEXTURE_2D,$,N.x,N.y,J.mipmaps[0].width,J.mipmaps[0].height,lt,J.mipmaps[0].data):k.texSubImage2D(k.TEXTURE_2D,$,N.x,N.y,lt,pt,J.image),$===0&&oe.generateMipmaps&&k.generateMipmap(k.TEXTURE_2D),Q.unbindTexture()},this.copyTextureToTexture3D=function(N,J,oe,$,le=0){if(v.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const He=N.max.x-N.min.x+1,lt=N.max.y-N.min.y+1,pt=N.max.z-N.min.z+1,$e=ot.convert($.format),_t=ot.convert($.type);let ht;if($.isData3DTexture)Fe.setTexture3D($,0),ht=k.TEXTURE_3D;else if($.isDataArrayTexture)Fe.setTexture2DArray($,0),ht=k.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,$.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,$.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,$.unpackAlignment);const vt=k.getParameter(k.UNPACK_ROW_LENGTH),Gt=k.getParameter(k.UNPACK_IMAGE_HEIGHT),Vt=k.getParameter(k.UNPACK_SKIP_PIXELS),Hn=k.getParameter(k.UNPACK_SKIP_ROWS),oi=k.getParameter(k.UNPACK_SKIP_IMAGES),$t=oe.isCompressedTexture?oe.mipmaps[0]:oe.image;k.pixelStorei(k.UNPACK_ROW_LENGTH,$t.width),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,$t.height),k.pixelStorei(k.UNPACK_SKIP_PIXELS,N.min.x),k.pixelStorei(k.UNPACK_SKIP_ROWS,N.min.y),k.pixelStorei(k.UNPACK_SKIP_IMAGES,N.min.z),oe.isDataTexture||oe.isData3DTexture?k.texSubImage3D(ht,le,J.x,J.y,J.z,He,lt,pt,$e,_t,$t.data):oe.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),k.compressedTexSubImage3D(ht,le,J.x,J.y,J.z,He,lt,pt,$e,$t.data)):k.texSubImage3D(ht,le,J.x,J.y,J.z,He,lt,pt,$e,_t,$t),k.pixelStorei(k.UNPACK_ROW_LENGTH,vt),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,Gt),k.pixelStorei(k.UNPACK_SKIP_PIXELS,Vt),k.pixelStorei(k.UNPACK_SKIP_ROWS,Hn),k.pixelStorei(k.UNPACK_SKIP_IMAGES,oi),le===0&&$.generateMipmaps&&k.generateMipmap(ht),Q.unbindTexture()},this.initTexture=function(N){N.isCubeTexture?Fe.setTextureCube(N,0):N.isData3DTexture?Fe.setTexture3D(N,0):N.isDataArrayTexture||N.isCompressedArrayTexture?Fe.setTexture2DArray(N,0):Fe.setTexture2D(N,0),Q.unbindTexture()},this.resetState=function(){E=0,w=0,A=null,Q.reset(),nt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ei}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===Dl?"display-p3":"srgb",t.unpackColorSpace=It.workingColorSpace===Za?"display-p3":"srgb"}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===tn?Qi:Pa}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Qi?tn:Ri}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class Sm extends uh{}Sm.prototype.isWebGL1Renderer=!0;class zl{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Oe(e),this.density=t}clone(){return new zl(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Hl{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Oe(e),this.near=t,this.far=n}clone(){return new Hl(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Gl extends Rt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class Vl{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Oa,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=ei()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ei()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ei()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Ln=new D;class tr{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Ln.fromBufferAttribute(this,t),Ln.applyMatrix4(e),this.setXYZ(t,Ln.x,Ln.y,Ln.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ln.fromBufferAttribute(this,t),Ln.applyNormalMatrix(e),this.setXYZ(t,Ln.x,Ln.y,Ln.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ln.fromBufferAttribute(this,t),Ln.transformDirection(e),this.setXYZ(t,Ln.x,Ln.y,Ln.z);return this}setX(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=qn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=qn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=qn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=qn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array),i=xt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array),i=xt(i,this.array),r=xt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Pt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new tr(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class hh extends In{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Oe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Nr;const da=new D,Ur=new D,Or=new D,Fr=new pe,pa=new pe,Mm=new at,Fo=new D,ma=new D,ko=new D,Lf=new pe,Nc=new pe,Pf=new pe;class Em extends Rt{constructor(e=new hh){if(super(),this.isSprite=!0,this.type="Sprite",Nr===void 0){Nr=new yt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Vl(t,5);Nr.setIndex([0,1,2,0,2,3]),Nr.setAttribute("position",new tr(n,3,0,!1)),Nr.setAttribute("uv",new tr(n,2,3,!1))}this.geometry=Nr,this.material=e,this.center=new pe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ur.setFromMatrixScale(this.matrixWorld),Mm.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Or.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ur.multiplyScalar(-Or.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;Bo(Fo.set(-.5,-.5,0),Or,a,Ur,i,r),Bo(ma.set(.5,-.5,0),Or,a,Ur,i,r),Bo(ko.set(.5,.5,0),Or,a,Ur,i,r),Lf.set(0,0),Nc.set(1,0),Pf.set(1,1);let o=e.ray.intersectTriangle(Fo,ma,ko,!1,da);if(o===null&&(Bo(ma.set(-.5,.5,0),Or,a,Ur,i,r),Nc.set(0,1),o=e.ray.intersectTriangle(Fo,ko,ma,!1,da),o===null))return;const l=e.ray.origin.distanceTo(da);l<e.near||l>e.far||t.push({distance:l,point:da.clone(),uv:Xn.getInterpolation(da,Fo,ma,ko,Lf,Nc,Pf,new pe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Bo(s,e,t,n,i,r){Fr.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(pa.x=r*Fr.x-i*Fr.y,pa.y=i*Fr.x+r*Fr.y):pa.copy(Fr),s.copy(e),s.x+=pa.x,s.y+=pa.y,s.applyMatrix4(Mm)}const zo=new D,Df=new D;class Am extends Rt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){zo.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(zo);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){zo.setFromMatrixPosition(e.matrixWorld),Df.setFromMatrixPosition(this.matrixWorld);const n=zo.distanceTo(Df)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const Nf=new D,Uf=new Nt,Of=new Nt,Bb=new D,Ff=new at,kr=new D,Uc=new gi,kf=new at,Oc=new cr;class fh extends dn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new at,this.bindMatrixInverse=new at,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Pi),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)kr.fromBufferAttribute(t,n),this.applyBoneTransform(n,kr),this.boundingBox.expandByPoint(kr)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new gi),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)kr.fromBufferAttribute(t,n),this.applyBoneTransform(n,kr),this.boundingSphere.expandByPoint(kr)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Uc.copy(this.boundingSphere),Uc.applyMatrix4(i),e.ray.intersectsSphere(Uc)!==!1&&(kf.copy(i).invert(),Oc.copy(e.ray).applyMatrix4(kf),!(this.boundingBox!==null&&Oc.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Oc)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Nt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Uf.fromBufferAttribute(i.attributes.skinIndex,e),Of.fromBufferAttribute(i.attributes.skinWeight,e),Nf.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const a=Of.getComponent(r);if(a!==0){const o=Uf.getComponent(r);Ff.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(Bb.copy(Nf).applyMatrix4(Ff),a)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class Wl extends Rt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class qr extends un{constructor(e=null,t=1,n=1,i,r,a,o,l,c=on,u=on,h,f){super(null,a,o,l,c,u,i,r,h,f),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Bf=new at,zb=new at;class $a{constructor(e=[],t=[]){this.uuid=ei(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new at)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new at;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,a=e.length;r<a;r++){const o=e[r]?e[r].matrixWorld:zb;Bf.multiplyMatrices(o,t[r]),Bf.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new $a(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=rm(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new qr(t,e,e,$n,Mi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let a=t[r];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new Wl),this.bones.push(a),this.boneInverses.push(new at().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const a=t[i];e.bones.push(a.uuid);const o=n[i];e.boneInverses.push(o.toArray())}return e}}class $r extends Pt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Br=new at,zf=new at,Ho=[],Hf=new Pi,Hb=new at,ga=new dn,_a=new gi;class Tm extends dn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new $r(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,Hb)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Pi),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Br),Hf.copy(e.boundingBox).applyMatrix4(Br),this.boundingBox.union(Hf)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new gi),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Br),_a.copy(e.boundingSphere).applyMatrix4(Br),this.boundingSphere.union(_a)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(ga.geometry=this.geometry,ga.material=this.material,ga.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),_a.copy(this.boundingSphere),_a.applyMatrix4(n),e.ray.intersectsSphere(_a)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,Br),zf.multiplyMatrices(n,Br),ga.matrixWorld=zf,ga.raycast(e,Ho);for(let a=0,o=Ho.length;a<o;a++){const l=Ho[a];l.instanceId=r,l.object=this,t.push(l)}Ho.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new $r(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class En extends In{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Oe(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Gf=new D,Vf=new D,Wf=new at,Fc=new cr,Go=new gi;class is extends Rt{constructor(e=new yt,t=new En){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)Gf.fromBufferAttribute(t,i-1),Vf.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Gf.distanceTo(Vf);e.setAttribute("lineDistance",new Be(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Go.copy(n.boundingSphere),Go.applyMatrix4(i),Go.radius+=r,e.ray.intersectsSphere(Go)===!1)return;Wf.copy(i).invert(),Fc.copy(e.ray).applyMatrix4(Wf);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new D,u=new D,h=new D,f=new D,d=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const m=Math.max(0,a.start),y=Math.min(p.count,a.start+a.count);for(let v=m,x=y-1;v<x;v+=d){const E=p.getX(v),w=p.getX(v+1);if(c.fromBufferAttribute(g,E),u.fromBufferAttribute(g,w),Fc.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const P=e.ray.origin.distanceTo(f);P<e.near||P>e.far||t.push({distance:P,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else{const m=Math.max(0,a.start),y=Math.min(g.count,a.start+a.count);for(let v=m,x=y-1;v<x;v+=d){if(c.fromBufferAttribute(g,v),u.fromBufferAttribute(g,v+1),Fc.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const w=e.ray.origin.distanceTo(f);w<e.near||w>e.far||t.push({distance:w,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}const Xf=new D,qf=new D;class _i extends is{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)Xf.fromBufferAttribute(t,i),qf.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Xf.distanceTo(qf);e.setAttribute("lineDistance",new Be(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class wm extends is{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class dh extends In{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Oe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Yf=new at,Ou=new cr,Vo=new gi,Wo=new D;class Cm extends Rt{constructor(e=new yt,t=new dh){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Vo.copy(n.boundingSphere),Vo.applyMatrix4(i),Vo.radius+=r,e.ray.intersectsSphere(Vo)===!1)return;Yf.copy(i).invert(),Ou.copy(e.ray).applyMatrix4(Yf);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=n.index,h=n.attributes.position;if(c!==null){const f=Math.max(0,a.start),d=Math.min(c.count,a.start+a.count);for(let p=f,_=d;p<_;p++){const g=c.getX(p);Wo.fromBufferAttribute(h,g),jf(Wo,g,l,i,e,t,this)}}else{const f=Math.max(0,a.start),d=Math.min(h.count,a.start+a.count);for(let p=f,_=d;p<_;p++)Wo.fromBufferAttribute(h,p),jf(Wo,p,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function jf(s,e,t,n,i,r,a){const o=Ou.distanceSqToPoint(s);if(o<t){const l=new D;Ou.closestPointToPoint(s,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;r.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:a})}}class Gb extends un{constructor(e,t,n,i,r,a,o,l,c){super(e,t,n,i,r,a,o,l,c),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:ln,this.magFilter=r!==void 0?r:ln,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Vb extends un{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=on,this.minFilter=on,this.generateMipmaps=!1,this.needsUpdate=!0}}class Xl extends un{constructor(e,t,n,i,r,a,o,l,c,u,h,f){super(null,a,o,l,c,u,i,r,h,f),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class Wb extends Xl{constructor(e,t,n,i,r,a){super(e,t,n,r,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=yn}}class Xb extends Xl{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,ts),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class qb extends un{constructor(e,t,n,i,r,a,o,l,c){super(e,t,n,i,r,a,o,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class vi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let a;t?a=t:a=e*n[r-1];let o=0,l=r-1,c;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),c=n[i]-a,c<0)o=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===a)return i/(r-1);const u=n[i],f=n[i+1]-u,d=(a-u)/f;return(i+d)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),o=this.getPoint(r),l=t||(a.isVector2?new pe:new D);return l.copy(o).sub(a).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,i=[],r=[],a=[],o=new D,l=new at;for(let d=0;d<=e;d++){const p=d/e;i[d]=this.getTangentAt(p,new D)}r[0]=new D,a[0]=new D;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),f=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),f<=c&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),a[0].crossVectors(i[0],r[0]);for(let d=1;d<=e;d++){if(r[d]=r[d-1].clone(),a[d]=a[d-1].clone(),o.crossVectors(i[d-1],i[d]),o.length()>Number.EPSILON){o.normalize();const p=Math.acos(nn(i[d-1].dot(i[d]),-1,1));r[d].applyMatrix4(l.makeRotationAxis(o,p))}a[d].crossVectors(i[d],r[d])}if(t===!0){let d=Math.acos(nn(r[0].dot(r[e]),-1,1));d/=e,i[0].dot(o.crossVectors(r[0],r[e]))>0&&(d=-d);for(let p=1;p<=e;p++)r[p].applyMatrix4(l.makeRotationAxis(i[p],d*p)),a[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class ql extends vi{constructor(e=0,t=0,n=1,i=1,r=0,a=Math.PI*2,o=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(e,t){const n=t||new pe,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+e*r;let l=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*u-d*h+this.aX,c=f*h+d*u+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Rm extends ql{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.isArcCurve=!0,this.type="ArcCurve"}}function ph(){let s=0,e=0,t=0,n=0;function i(r,a,o,l){s=r,e=o,t=-3*r+3*a-2*o-l,n=2*r-2*a+o+l}return{initCatmullRom:function(r,a,o,l,c){i(a,o,c*(o-r),c*(l-a))},initNonuniformCatmullRom:function(r,a,o,l,c,u,h){let f=(a-r)/c-(o-r)/(c+u)+(o-a)/u,d=(o-a)/u-(l-a)/(u+h)+(l-o)/h;f*=u,d*=u,i(a,o,f,d)},calc:function(r){const a=r*r,o=a*r;return s+e*r+t*a+n*o}}}const Xo=new D,kc=new ph,Bc=new ph,zc=new ph;class Im extends vi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new D){const n=t,i=this.points,r=i.length,a=(r-(this.closed?0:1))*e;let o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:l===0&&o===r-1&&(o=r-2,l=1);let c,u;this.closed||o>0?c=i[(o-1)%r]:(Xo.subVectors(i[0],i[1]).add(i[0]),c=Xo);const h=i[o%r],f=i[(o+1)%r];if(this.closed||o+2<r?u=i[(o+2)%r]:(Xo.subVectors(i[r-1],i[r-2]).add(i[r-1]),u=Xo),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),d),_=Math.pow(h.distanceToSquared(f),d),g=Math.pow(f.distanceToSquared(u),d);_<1e-4&&(_=1),p<1e-4&&(p=_),g<1e-4&&(g=_),kc.initNonuniformCatmullRom(c.x,h.x,f.x,u.x,p,_,g),Bc.initNonuniformCatmullRom(c.y,h.y,f.y,u.y,p,_,g),zc.initNonuniformCatmullRom(c.z,h.z,f.z,u.z,p,_,g)}else this.curveType==="catmullrom"&&(kc.initCatmullRom(c.x,h.x,f.x,u.x,this.tension),Bc.initCatmullRom(c.y,h.y,f.y,u.y,this.tension),zc.initCatmullRom(c.z,h.z,f.z,u.z,this.tension));return n.set(kc.calc(l),Bc.calc(l),zc.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new D().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Zf(s,e,t,n,i){const r=(n-e)*.5,a=(i-t)*.5,o=s*s,l=s*o;return(2*t-2*n+r+a)*l+(-3*t+3*n-2*r-a)*o+r*s+t}function Yb(s,e){const t=1-s;return t*t*e}function jb(s,e){return 2*(1-s)*s*e}function Zb(s,e){return s*s*e}function Ea(s,e,t,n){return Yb(s,e)+jb(s,t)+Zb(s,n)}function Jb(s,e){const t=1-s;return t*t*t*e}function Kb(s,e){const t=1-s;return 3*t*t*s*e}function $b(s,e){return 3*(1-s)*s*s*e}function Qb(s,e){return s*s*s*e}function Aa(s,e,t,n,i){return Jb(s,e)+Kb(s,t)+$b(s,n)+Qb(s,i)}class mh extends vi{constructor(e=new pe,t=new pe,n=new pe,i=new pe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new pe){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(Aa(e,i.x,r.x,a.x,o.x),Aa(e,i.y,r.y,a.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Lm extends vi{constructor(e=new D,t=new D,n=new D,i=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new D){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(Aa(e,i.x,r.x,a.x,o.x),Aa(e,i.y,r.y,a.y,o.y),Aa(e,i.z,r.z,a.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class gh extends vi{constructor(e=new pe,t=new pe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new pe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new pe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Pm extends vi{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new D){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class _h extends vi{constructor(e=new pe,t=new pe,n=new pe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new pe){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(Ea(e,i.x,r.x,a.x),Ea(e,i.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class vh extends vi{constructor(e=new D,t=new D,n=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(Ea(e,i.x,r.x,a.x),Ea(e,i.y,r.y,a.y),Ea(e,i.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class yh extends vi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new pe){const n=t,i=this.points,r=(i.length-1)*e,a=Math.floor(r),o=r-a,l=i[a===0?a:a-1],c=i[a],u=i[a>i.length-2?i.length-1:a+1],h=i[a>i.length-3?i.length-1:a+2];return n.set(Zf(o,l.x,c.x,u.x,h.x),Zf(o,l.y,c.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new pe().fromArray(i))}return this}}var Al=Object.freeze({__proto__:null,ArcCurve:Rm,CatmullRomCurve3:Im,CubicBezierCurve:mh,CubicBezierCurve3:Lm,EllipseCurve:ql,LineCurve:gh,LineCurve3:Pm,QuadraticBezierCurve:_h,QuadraticBezierCurve3:vh,SplineCurve:yh});class Dm extends vi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Al[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const a=i[r]-n,o=this.curves[r],l=o.getLength(),c=l===0?0:1-a/l;return o.getPointAt(c,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Al[i.type]().fromJSON(i))}return this}}class Ba extends Dm{constructor(e){super(),this.type="Path",this.currentPoint=new pe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new gh(this.currentPoint.clone(),new pe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new _h(this.currentPoint.clone(),new pe(e,t),new pe(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){const o=new mh(this.currentPoint.clone(),new pe(e,t),new pe(n,i),new pe(r,a));return this.curves.push(o),this.currentPoint.set(r,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new yh(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,t+l,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,o,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+c,t+u,n,i,r,a,o,l),this}absellipse(e,t,n,i,r,a,o,l){const c=new ql(e,t,n,i,r,a,o,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Qa extends yt{constructor(e=[new pe(0,-.5),new pe(.5,0),new pe(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=nn(i,0,Math.PI*2);const r=[],a=[],o=[],l=[],c=[],u=1/t,h=new D,f=new pe,d=new D,p=new D,_=new D;let g=0,m=0;for(let y=0;y<=e.length-1;y++)switch(y){case 0:g=e[y+1].x-e[y].x,m=e[y+1].y-e[y].y,d.x=m*1,d.y=-g,d.z=m*0,_.copy(d),d.normalize(),l.push(d.x,d.y,d.z);break;case e.length-1:l.push(_.x,_.y,_.z);break;default:g=e[y+1].x-e[y].x,m=e[y+1].y-e[y].y,d.x=m*1,d.y=-g,d.z=m*0,p.copy(d),d.x+=_.x,d.y+=_.y,d.z+=_.z,d.normalize(),l.push(d.x,d.y,d.z),_.copy(p)}for(let y=0;y<=t;y++){const v=n+y*u*i,x=Math.sin(v),E=Math.cos(v);for(let w=0;w<=e.length-1;w++){h.x=e[w].x*x,h.y=e[w].y,h.z=e[w].x*E,a.push(h.x,h.y,h.z),f.x=y/t,f.y=w/(e.length-1),o.push(f.x,f.y);const A=l[3*w+0]*x,P=l[3*w+1],M=l[3*w+0]*E;c.push(A,P,M)}}for(let y=0;y<t;y++)for(let v=0;v<e.length-1;v++){const x=v+y*e.length,E=x,w=x+e.length,A=x+e.length+1,P=x+1;r.push(E,w,P),r.push(A,P,w)}this.setIndex(r),this.setAttribute("position",new Be(a,3)),this.setAttribute("uv",new Be(o,2)),this.setAttribute("normal",new Be(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Qa(e.points,e.segments,e.phiStart,e.phiLength)}}class Yl extends Qa{constructor(e=1,t=1,n=4,i=8){const r=new Ba;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new Yl(e.radius,e.length,e.capSegments,e.radialSegments)}}class jl extends yt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],a=[],o=[],l=[],c=new D,u=new pe;a.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let h=0,f=3;h<=t;h++,f+=3){const d=n+h/t*i;c.x=e*Math.cos(d),c.y=e*Math.sin(d),a.push(c.x,c.y,c.z),o.push(0,0,1),u.x=(a[f]/e+1)/2,u.y=(a[f+1]/e+1)/2,l.push(u.x,u.y)}for(let h=1;h<=t;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new Be(a,3)),this.setAttribute("normal",new Be(o,3)),this.setAttribute("uv",new Be(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new jl(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class sa extends yt{constructor(e=1,t=1,n=1,i=32,r=1,a=!1,o=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:l};const c=this;i=Math.floor(i),r=Math.floor(r);const u=[],h=[],f=[],d=[];let p=0;const _=[],g=n/2;let m=0;y(),a===!1&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(u),this.setAttribute("position",new Be(h,3)),this.setAttribute("normal",new Be(f,3)),this.setAttribute("uv",new Be(d,2));function y(){const x=new D,E=new D;let w=0;const A=(t-e)/n;for(let P=0;P<=r;P++){const M=[],R=P/r,V=R*(t-e)+e;for(let j=0;j<=i;j++){const ne=j/i,F=ne*l+o,H=Math.sin(F),B=Math.cos(F);E.x=V*H,E.y=-R*n+g,E.z=V*B,h.push(E.x,E.y,E.z),x.set(H,A,B).normalize(),f.push(x.x,x.y,x.z),d.push(ne,1-R),M.push(p++)}_.push(M)}for(let P=0;P<i;P++)for(let M=0;M<r;M++){const R=_[M][P],V=_[M+1][P],j=_[M+1][P+1],ne=_[M][P+1];u.push(R,V,ne),u.push(V,j,ne),w+=6}c.addGroup(m,w,0),m+=w}function v(x){const E=p,w=new pe,A=new D;let P=0;const M=x===!0?e:t,R=x===!0?1:-1;for(let j=1;j<=i;j++)h.push(0,g*R,0),f.push(0,R,0),d.push(.5,.5),p++;const V=p;for(let j=0;j<=i;j++){const F=j/i*l+o,H=Math.cos(F),B=Math.sin(F);A.x=M*B,A.y=g*R,A.z=M*H,h.push(A.x,A.y,A.z),f.push(0,R,0),w.x=H*.5+.5,w.y=B*.5*R+.5,d.push(w.x,w.y),p++}for(let j=0;j<i;j++){const ne=E+j,F=V+j;x===!0?u.push(F,F+1,ne):u.push(F+1,F,ne),P+=3}c.addGroup(m,P,x===!0?1:2),m+=P}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new sa(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Zl extends sa{constructor(e=1,t=1,n=32,i=1,r=!1,a=0,o=Math.PI*2){super(0,e,t,n,i,r,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:o}}static fromJSON(e){return new Zl(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Es extends yt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],a=[];o(i),c(n),u(),this.setAttribute("position",new Be(r,3)),this.setAttribute("normal",new Be(r.slice(),3)),this.setAttribute("uv",new Be(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function o(y){const v=new D,x=new D,E=new D;for(let w=0;w<t.length;w+=3)d(t[w+0],v),d(t[w+1],x),d(t[w+2],E),l(v,x,E,y)}function l(y,v,x,E){const w=E+1,A=[];for(let P=0;P<=w;P++){A[P]=[];const M=y.clone().lerp(x,P/w),R=v.clone().lerp(x,P/w),V=w-P;for(let j=0;j<=V;j++)j===0&&P===w?A[P][j]=M:A[P][j]=M.clone().lerp(R,j/V)}for(let P=0;P<w;P++)for(let M=0;M<2*(w-P)-1;M++){const R=Math.floor(M/2);M%2===0?(f(A[P][R+1]),f(A[P+1][R]),f(A[P][R])):(f(A[P][R+1]),f(A[P+1][R+1]),f(A[P+1][R]))}}function c(y){const v=new D;for(let x=0;x<r.length;x+=3)v.x=r[x+0],v.y=r[x+1],v.z=r[x+2],v.normalize().multiplyScalar(y),r[x+0]=v.x,r[x+1]=v.y,r[x+2]=v.z}function u(){const y=new D;for(let v=0;v<r.length;v+=3){y.x=r[v+0],y.y=r[v+1],y.z=r[v+2];const x=g(y)/2/Math.PI+.5,E=m(y)/Math.PI+.5;a.push(x,1-E)}p(),h()}function h(){for(let y=0;y<a.length;y+=6){const v=a[y+0],x=a[y+2],E=a[y+4],w=Math.max(v,x,E),A=Math.min(v,x,E);w>.9&&A<.1&&(v<.2&&(a[y+0]+=1),x<.2&&(a[y+2]+=1),E<.2&&(a[y+4]+=1))}}function f(y){r.push(y.x,y.y,y.z)}function d(y,v){const x=y*3;v.x=e[x+0],v.y=e[x+1],v.z=e[x+2]}function p(){const y=new D,v=new D,x=new D,E=new D,w=new pe,A=new pe,P=new pe;for(let M=0,R=0;M<r.length;M+=9,R+=6){y.set(r[M+0],r[M+1],r[M+2]),v.set(r[M+3],r[M+4],r[M+5]),x.set(r[M+6],r[M+7],r[M+8]),w.set(a[R+0],a[R+1]),A.set(a[R+2],a[R+3]),P.set(a[R+4],a[R+5]),E.copy(y).add(v).add(x).divideScalar(3);const V=g(E);_(w,R+0,y,V),_(A,R+2,v,V),_(P,R+4,x,V)}}function _(y,v,x,E){E<0&&y.x===1&&(a[v]=y.x-1),x.x===0&&x.z===0&&(a[v]=E/2/Math.PI+.5)}function g(y){return Math.atan2(y.z,-y.x)}function m(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Es(e.vertices,e.indices,e.radius,e.details)}}class Jl extends Es{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Jl(e.radius,e.detail)}}const qo=new D,Yo=new D,Hc=new D,jo=new Xn;class Nm extends yt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos($s*t),a=e.getIndex(),o=e.getAttribute("position"),l=a?a.count:o.count,c=[0,0,0],u=["a","b","c"],h=new Array(3),f={},d=[];for(let p=0;p<l;p+=3){a?(c[0]=a.getX(p),c[1]=a.getX(p+1),c[2]=a.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:_,b:g,c:m}=jo;if(_.fromBufferAttribute(o,c[0]),g.fromBufferAttribute(o,c[1]),m.fromBufferAttribute(o,c[2]),jo.getNormal(Hc),h[0]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,h[1]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,h[2]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let y=0;y<3;y++){const v=(y+1)%3,x=h[y],E=h[v],w=jo[u[y]],A=jo[u[v]],P=`${x}_${E}`,M=`${E}_${x}`;M in f&&f[M]?(Hc.dot(f[M].normal)<=r&&(d.push(w.x,w.y,w.z),d.push(A.x,A.y,A.z)),f[M]=null):P in f||(f[P]={index0:c[y],index1:c[v],normal:Hc.clone()})}}for(const p in f)if(f[p]){const{index0:_,index1:g}=f[p];qo.fromBufferAttribute(o,_),Yo.fromBufferAttribute(o,g),d.push(qo.x,qo.y,qo.z),d.push(Yo.x,Yo.y,Yo.z)}this.setAttribute("position",new Be(d,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Qs extends Ba{constructor(e){super(e),this.uuid=ei(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Ba().fromJSON(i))}return this}}const eS={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=Um(s,0,i,t,!0);const a=[];if(!r||r.next===r.prev)return a;let o,l,c,u,h,f,d;if(n&&(r=rS(s,e,r,t)),s.length>80*t){o=c=s[0],l=u=s[1];for(let p=t;p<i;p+=t)h=s[p],f=s[p+1],h<o&&(o=h),f<l&&(l=f),h>c&&(c=h),f>u&&(u=f);d=Math.max(c-o,u-l),d=d!==0?32767/d:0}return za(r,a,t,o,l,d,0),a}};function Um(s,e,t,n,i){let r,a;if(i===gS(s,e,t,n)>0)for(r=e;r<t;r+=n)a=Jf(r,s[r],s[r+1],a);else for(r=t-n;r>=e;r-=n)a=Jf(r,s[r],s[r+1],a);return a&&Kl(a,a.next)&&(Ga(a),a=a.next),a}function nr(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(Kl(t,t.next)||Yt(t.prev,t,t.next)===0)){if(Ga(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function za(s,e,t,n,i,r,a){if(!s)return;!a&&r&&uS(s,n,i,r);let o=s,l,c;for(;s.prev!==s.next;){if(l=s.prev,c=s.next,r?nS(s,n,i,r):tS(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(c.i/t|0),Ga(s),s=c.next,o=c.next;continue}if(s=c,s===o){a?a===1?(s=iS(nr(s),e,t),za(s,e,t,n,i,r,2)):a===2&&sS(s,e,t,n,i,r):za(nr(s),e,t,n,i,r,1);break}}}function tS(s){const e=s.prev,t=s,n=s.next;if(Yt(e,t,n)>=0)return!1;const i=e.x,r=t.x,a=n.x,o=e.y,l=t.y,c=n.y,u=i<r?i<a?i:a:r<a?r:a,h=o<l?o<c?o:c:l<c?l:c,f=i>r?i>a?i:a:r>a?r:a,d=o>l?o>c?o:c:l>c?l:c;let p=n.next;for(;p!==e;){if(p.x>=u&&p.x<=f&&p.y>=h&&p.y<=d&&Wr(i,o,r,l,a,c,p.x,p.y)&&Yt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function nS(s,e,t,n){const i=s.prev,r=s,a=s.next;if(Yt(i,r,a)>=0)return!1;const o=i.x,l=r.x,c=a.x,u=i.y,h=r.y,f=a.y,d=o<l?o<c?o:c:l<c?l:c,p=u<h?u<f?u:f:h<f?h:f,_=o>l?o>c?o:c:l>c?l:c,g=u>h?u>f?u:f:h>f?h:f,m=Fu(d,p,e,t,n),y=Fu(_,g,e,t,n);let v=s.prevZ,x=s.nextZ;for(;v&&v.z>=m&&x&&x.z<=y;){if(v.x>=d&&v.x<=_&&v.y>=p&&v.y<=g&&v!==i&&v!==a&&Wr(o,u,l,h,c,f,v.x,v.y)&&Yt(v.prev,v,v.next)>=0||(v=v.prevZ,x.x>=d&&x.x<=_&&x.y>=p&&x.y<=g&&x!==i&&x!==a&&Wr(o,u,l,h,c,f,x.x,x.y)&&Yt(x.prev,x,x.next)>=0))return!1;x=x.nextZ}for(;v&&v.z>=m;){if(v.x>=d&&v.x<=_&&v.y>=p&&v.y<=g&&v!==i&&v!==a&&Wr(o,u,l,h,c,f,v.x,v.y)&&Yt(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;x&&x.z<=y;){if(x.x>=d&&x.x<=_&&x.y>=p&&x.y<=g&&x!==i&&x!==a&&Wr(o,u,l,h,c,f,x.x,x.y)&&Yt(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}function iS(s,e,t){let n=s;do{const i=n.prev,r=n.next.next;!Kl(i,r)&&Om(i,n,n.next,r)&&Ha(i,r)&&Ha(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),Ga(n),Ga(n.next),n=s=r),n=n.next}while(n!==s);return nr(n)}function sS(s,e,t,n,i,r){let a=s;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&dS(a,o)){let l=Fm(a,o);a=nr(a,a.next),l=nr(l,l.next),za(a,e,t,n,i,r,0),za(l,e,t,n,i,r,0);return}o=o.next}a=a.next}while(a!==s)}function rS(s,e,t,n){const i=[];let r,a,o,l,c;for(r=0,a=e.length;r<a;r++)o=e[r]*n,l=r<a-1?e[r+1]*n:s.length,c=Um(s,o,l,n,!1),c===c.next&&(c.steiner=!0),i.push(fS(c));for(i.sort(aS),r=0;r<i.length;r++)t=oS(i[r],t);return t}function aS(s,e){return s.x-e.x}function oS(s,e){const t=lS(s,e);if(!t)return e;const n=Fm(t,s);return nr(n,n.next),nr(t,t.next)}function lS(s,e){let t=e,n=-1/0,i;const r=s.x,a=s.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const f=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=r&&f>n&&(n=f,i=t.x<t.next.x?t:t.next,f===r))return i}t=t.next}while(t!==e);if(!i)return null;const o=i,l=i.x,c=i.y;let u=1/0,h;t=i;do r>=t.x&&t.x>=l&&r!==t.x&&Wr(a<c?r:n,a,l,c,a<c?n:r,a,t.x,t.y)&&(h=Math.abs(a-t.y)/(r-t.x),Ha(t,s)&&(h<u||h===u&&(t.x>i.x||t.x===i.x&&cS(i,t)))&&(i=t,u=h)),t=t.next;while(t!==o);return i}function cS(s,e){return Yt(s.prev,s,e.prev)<0&&Yt(e.next,s,s.next)<0}function uS(s,e,t,n){let i=s;do i.z===0&&(i.z=Fu(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,hS(i)}function hS(s){let e,t,n,i,r,a,o,l,c=1;do{for(t=s,s=null,r=null,a=0;t;){for(a++,n=t,o=0,e=0;e<c&&(o++,n=n.nextZ,!!n);e++);for(l=c;o>0||l>0&&n;)o!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,o--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,c*=2}while(a>1);return s}function Fu(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function fS(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function Wr(s,e,t,n,i,r,a,o){return(i-a)*(e-o)>=(s-a)*(r-o)&&(s-a)*(n-o)>=(t-a)*(e-o)&&(t-a)*(r-o)>=(i-a)*(n-o)}function dS(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!pS(s,e)&&(Ha(s,e)&&Ha(e,s)&&mS(s,e)&&(Yt(s.prev,s,e.prev)||Yt(s,e.prev,e))||Kl(s,e)&&Yt(s.prev,s,s.next)>0&&Yt(e.prev,e,e.next)>0)}function Yt(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Kl(s,e){return s.x===e.x&&s.y===e.y}function Om(s,e,t,n){const i=Jo(Yt(s,e,t)),r=Jo(Yt(s,e,n)),a=Jo(Yt(t,n,s)),o=Jo(Yt(t,n,e));return!!(i!==r&&a!==o||i===0&&Zo(s,t,e)||r===0&&Zo(s,n,e)||a===0&&Zo(t,s,n)||o===0&&Zo(t,e,n))}function Zo(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function Jo(s){return s>0?1:s<0?-1:0}function pS(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&Om(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Ha(s,e){return Yt(s.prev,s,s.next)<0?Yt(s,e,s.next)>=0&&Yt(s,s.prev,e)>=0:Yt(s,e,s.prev)<0||Yt(s,s.next,e)<0}function mS(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function Fm(s,e){const t=new ku(s.i,s.x,s.y),n=new ku(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function Jf(s,e,t,n){const i=new ku(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Ga(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function ku(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function gS(s,e,t,n){let i=0;for(let r=e,a=t-n;r<t;r+=n)i+=(s[a]-s[r])*(s[r+1]+s[a+1]),a=r;return i}class Ai{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return Ai.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];Kf(e),$f(n,e);let a=e.length;t.forEach(Kf);for(let l=0;l<t.length;l++)i.push(a),a+=t[l].length,$f(n,t[l]);const o=eS.triangulate(n,i);for(let l=0;l<o.length;l+=3)r.push(o.slice(l,l+3));return r}}function Kf(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function $f(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class $l extends yt{constructor(e=new Qs([new pe(.5,.5),new pe(-.5,.5),new pe(-.5,-.5),new pe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let o=0,l=e.length;o<l;o++){const c=e[o];a(c)}this.setAttribute("position",new Be(i,3)),this.setAttribute("uv",new Be(r,2)),this.computeVertexNormals();function a(o){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,h=t.depth!==void 0?t.depth:1;let f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,d=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:d-.1,_=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const m=t.extrudePath,y=t.UVGenerator!==void 0?t.UVGenerator:_S;let v,x=!1,E,w,A,P;m&&(v=m.getSpacedPoints(u),x=!0,f=!1,E=m.computeFrenetFrames(u,!1),w=new D,A=new D,P=new D),f||(g=0,d=0,p=0,_=0);const M=o.extractPoints(c);let R=M.shape;const V=M.holes;if(!Ai.isClockWise(R)){R=R.reverse();for(let k=0,xe=V.length;k<xe;k++){const de=V[k];Ai.isClockWise(de)&&(V[k]=de.reverse())}}const ne=Ai.triangulateShape(R,V),F=R;for(let k=0,xe=V.length;k<xe;k++){const de=V[k];R=R.concat(de)}function H(k,xe,de){return xe||console.error("THREE.ExtrudeGeometry: vec does not exist"),k.clone().addScaledVector(xe,de)}const B=R.length,q=ne.length;function ee(k,xe,de){let X,Q,Le;const Ne=k.x-xe.x,Fe=k.y-xe.y,tt=de.x-k.x,mt=de.y-k.y,Lt=Ne*Ne+Fe*Fe,O=Ne*mt-Fe*tt;if(Math.abs(O)>Number.EPSILON){const C=Math.sqrt(Lt),K=Math.sqrt(tt*tt+mt*mt),Ae=xe.x-Fe/C,be=xe.y+Ne/C,Me=de.x-mt/K,qe=de.y+tt/K,W=((Me-Ae)*mt-(qe-be)*tt)/(Ne*mt-Fe*tt);X=Ae+Ne*W-k.x,Q=be+Fe*W-k.y;const se=X*X+Q*Q;if(se<=2)return new pe(X,Q);Le=Math.sqrt(se/2)}else{let C=!1;Ne>Number.EPSILON?tt>Number.EPSILON&&(C=!0):Ne<-Number.EPSILON?tt<-Number.EPSILON&&(C=!0):Math.sign(Fe)===Math.sign(mt)&&(C=!0),C?(X=-Fe,Q=Ne,Le=Math.sqrt(Lt)):(X=Ne,Q=Fe,Le=Math.sqrt(Lt/2))}return new pe(X/Le,Q/Le)}const Z=[];for(let k=0,xe=F.length,de=xe-1,X=k+1;k<xe;k++,de++,X++)de===xe&&(de=0),X===xe&&(X=0),Z[k]=ee(F[k],F[de],F[X]);const ie=[];let G,Y=Z.concat();for(let k=0,xe=V.length;k<xe;k++){const de=V[k];G=[];for(let X=0,Q=de.length,Le=Q-1,Ne=X+1;X<Q;X++,Le++,Ne++)Le===Q&&(Le=0),Ne===Q&&(Ne=0),G[X]=ee(de[X],de[Le],de[Ne]);ie.push(G),Y=Y.concat(G)}for(let k=0;k<g;k++){const xe=k/g,de=d*Math.cos(xe*Math.PI/2),X=p*Math.sin(xe*Math.PI/2)+_;for(let Q=0,Le=F.length;Q<Le;Q++){const Ne=H(F[Q],Z[Q],X);ye(Ne.x,Ne.y,-de)}for(let Q=0,Le=V.length;Q<Le;Q++){const Ne=V[Q];G=ie[Q];for(let Fe=0,tt=Ne.length;Fe<tt;Fe++){const mt=H(Ne[Fe],G[Fe],X);ye(mt.x,mt.y,-de)}}}const ce=p+_;for(let k=0;k<B;k++){const xe=f?H(R[k],Y[k],ce):R[k];x?(A.copy(E.normals[0]).multiplyScalar(xe.x),w.copy(E.binormals[0]).multiplyScalar(xe.y),P.copy(v[0]).add(A).add(w),ye(P.x,P.y,P.z)):ye(xe.x,xe.y,0)}for(let k=1;k<=u;k++)for(let xe=0;xe<B;xe++){const de=f?H(R[xe],Y[xe],ce):R[xe];x?(A.copy(E.normals[k]).multiplyScalar(de.x),w.copy(E.binormals[k]).multiplyScalar(de.y),P.copy(v[k]).add(A).add(w),ye(P.x,P.y,P.z)):ye(de.x,de.y,h/u*k)}for(let k=g-1;k>=0;k--){const xe=k/g,de=d*Math.cos(xe*Math.PI/2),X=p*Math.sin(xe*Math.PI/2)+_;for(let Q=0,Le=F.length;Q<Le;Q++){const Ne=H(F[Q],Z[Q],X);ye(Ne.x,Ne.y,h+de)}for(let Q=0,Le=V.length;Q<Le;Q++){const Ne=V[Q];G=ie[Q];for(let Fe=0,tt=Ne.length;Fe<tt;Fe++){const mt=H(Ne[Fe],G[Fe],X);x?ye(mt.x,mt.y+v[u-1].y,v[u-1].x+de):ye(mt.x,mt.y,h+de)}}}ae(),ue();function ae(){const k=i.length/3;if(f){let xe=0,de=B*xe;for(let X=0;X<q;X++){const Q=ne[X];we(Q[2]+de,Q[1]+de,Q[0]+de)}xe=u+g*2,de=B*xe;for(let X=0;X<q;X++){const Q=ne[X];we(Q[0]+de,Q[1]+de,Q[2]+de)}}else{for(let xe=0;xe<q;xe++){const de=ne[xe];we(de[2],de[1],de[0])}for(let xe=0;xe<q;xe++){const de=ne[xe];we(de[0]+B*u,de[1]+B*u,de[2]+B*u)}}n.addGroup(k,i.length/3-k,0)}function ue(){const k=i.length/3;let xe=0;he(F,xe),xe+=F.length;for(let de=0,X=V.length;de<X;de++){const Q=V[de];he(Q,xe),xe+=Q.length}n.addGroup(k,i.length/3-k,1)}function he(k,xe){let de=k.length;for(;--de>=0;){const X=de;let Q=de-1;Q<0&&(Q=k.length-1);for(let Le=0,Ne=u+g*2;Le<Ne;Le++){const Fe=B*Le,tt=B*(Le+1),mt=xe+X+Fe,Lt=xe+Q+Fe,O=xe+Q+tt,C=xe+X+tt;ge(mt,Lt,O,C)}}}function ye(k,xe,de){l.push(k),l.push(xe),l.push(de)}function we(k,xe,de){et(k),et(xe),et(de);const X=i.length/3,Q=y.generateTopUV(n,i,X-3,X-2,X-1);Ke(Q[0]),Ke(Q[1]),Ke(Q[2])}function ge(k,xe,de,X){et(k),et(xe),et(X),et(xe),et(de),et(X);const Q=i.length/3,Le=y.generateSideWallUV(n,i,Q-6,Q-3,Q-2,Q-1);Ke(Le[0]),Ke(Le[1]),Ke(Le[3]),Ke(Le[1]),Ke(Le[2]),Ke(Le[3])}function et(k){i.push(l[k*3+0]),i.push(l[k*3+1]),i.push(l[k*3+2])}function Ke(k){r.push(k.x),r.push(k.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return vS(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,a=e.shapes.length;r<a;r++){const o=t[e.shapes[r]];n.push(o)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Al[i.type]().fromJSON(i)),new $l(n,e.options)}}const _S={generateTopUV:function(s,e,t,n,i){const r=e[t*3],a=e[t*3+1],o=e[n*3],l=e[n*3+1],c=e[i*3],u=e[i*3+1];return[new pe(r,a),new pe(o,l),new pe(c,u)]},generateSideWallUV:function(s,e,t,n,i,r){const a=e[t*3],o=e[t*3+1],l=e[t*3+2],c=e[n*3],u=e[n*3+1],h=e[n*3+2],f=e[i*3],d=e[i*3+1],p=e[i*3+2],_=e[r*3],g=e[r*3+1],m=e[r*3+2];return Math.abs(o-u)<Math.abs(a-c)?[new pe(a,1-l),new pe(c,1-h),new pe(f,1-p),new pe(_,1-m)]:[new pe(o,1-l),new pe(u,1-h),new pe(d,1-p),new pe(g,1-m)]}};function vS(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Ql extends Es{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ql(e.radius,e.detail)}}class eo extends Es{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new eo(e.radius,e.detail)}}class ec extends yt{constructor(e=.5,t=1,n=32,i=1,r=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const o=[],l=[],c=[],u=[];let h=e;const f=(t-e)/i,d=new D,p=new pe;for(let _=0;_<=i;_++){for(let g=0;g<=n;g++){const m=r+g/n*a;d.x=h*Math.cos(m),d.y=h*Math.sin(m),l.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}h+=f}for(let _=0;_<i;_++){const g=_*(n+1);for(let m=0;m<n;m++){const y=m+g,v=y,x=y+n+1,E=y+n+2,w=y+1;o.push(v,x,w),o.push(x,E,w)}}this.setIndex(o),this.setAttribute("position",new Be(l,3)),this.setAttribute("normal",new Be(c,3)),this.setAttribute("uv",new Be(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ec(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class tc extends yt{constructor(e=new Qs([new pe(0,.5),new pe(-.5,-.5),new pe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],a=[];let o=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(o,l,u),o+=l,l=0;this.setIndex(n),this.setAttribute("position",new Be(i,3)),this.setAttribute("normal",new Be(r,3)),this.setAttribute("uv",new Be(a,2));function c(u){const h=i.length/3,f=u.extractPoints(t);let d=f.shape;const p=f.holes;Ai.isClockWise(d)===!1&&(d=d.reverse());for(let g=0,m=p.length;g<m;g++){const y=p[g];Ai.isClockWise(y)===!0&&(p[g]=y.reverse())}const _=Ai.triangulateShape(d,p);for(let g=0,m=p.length;g<m;g++){const y=p[g];d=d.concat(y)}for(let g=0,m=d.length;g<m;g++){const y=d[g];i.push(y.x,y.y,0),r.push(0,0,1),a.push(y.x,y.y)}for(let g=0,m=_.length;g<m;g++){const y=_[g],v=y[0]+h,x=y[1]+h,E=y[2]+h;n.push(v,x,E),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return yS(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const a=t[e.shapes[i]];n.push(a)}return new tc(n,e.curveSegments)}}function yS(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class to extends yt{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(a+o,Math.PI);let c=0;const u=[],h=new D,f=new D,d=[],p=[],_=[],g=[];for(let m=0;m<=n;m++){const y=[],v=m/n;let x=0;m===0&&a===0?x=.5/t:m===n&&l===Math.PI&&(x=-.5/t);for(let E=0;E<=t;E++){const w=E/t;h.x=-e*Math.cos(i+w*r)*Math.sin(a+v*o),h.y=e*Math.cos(a+v*o),h.z=e*Math.sin(i+w*r)*Math.sin(a+v*o),p.push(h.x,h.y,h.z),f.copy(h).normalize(),_.push(f.x,f.y,f.z),g.push(w+x,1-v),y.push(c++)}u.push(y)}for(let m=0;m<n;m++)for(let y=0;y<t;y++){const v=u[m][y+1],x=u[m][y],E=u[m+1][y],w=u[m+1][y+1];(m!==0||a>0)&&d.push(v,x,w),(m!==n-1||l<Math.PI)&&d.push(x,E,w)}this.setIndex(d),this.setAttribute("position",new Be(p,3)),this.setAttribute("normal",new Be(_,3)),this.setAttribute("uv",new Be(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new to(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class nc extends Es{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new nc(e.radius,e.detail)}}class ic extends yt{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],l=[],c=[],u=new D,h=new D,f=new D;for(let d=0;d<=n;d++)for(let p=0;p<=i;p++){const _=p/i*r,g=d/n*Math.PI*2;h.x=(e+t*Math.cos(g))*Math.cos(_),h.y=(e+t*Math.cos(g))*Math.sin(_),h.z=t*Math.sin(g),o.push(h.x,h.y,h.z),u.x=e*Math.cos(_),u.y=e*Math.sin(_),f.subVectors(h,u).normalize(),l.push(f.x,f.y,f.z),c.push(p/i),c.push(d/n)}for(let d=1;d<=n;d++)for(let p=1;p<=i;p++){const _=(i+1)*d+p-1,g=(i+1)*(d-1)+p-1,m=(i+1)*(d-1)+p,y=(i+1)*d+p;a.push(_,g,y),a.push(g,m,y)}this.setIndex(a),this.setAttribute("position",new Be(o,3)),this.setAttribute("normal",new Be(l,3)),this.setAttribute("uv",new Be(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ic(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class sc extends yt{constructor(e=1,t=.4,n=64,i=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},n=Math.floor(n),i=Math.floor(i);const o=[],l=[],c=[],u=[],h=new D,f=new D,d=new D,p=new D,_=new D,g=new D,m=new D;for(let v=0;v<=n;++v){const x=v/n*r*Math.PI*2;y(x,r,a,e,d),y(x+.01,r,a,e,p),g.subVectors(p,d),m.addVectors(p,d),_.crossVectors(g,m),m.crossVectors(_,g),_.normalize(),m.normalize();for(let E=0;E<=i;++E){const w=E/i*Math.PI*2,A=-t*Math.cos(w),P=t*Math.sin(w);h.x=d.x+(A*m.x+P*_.x),h.y=d.y+(A*m.y+P*_.y),h.z=d.z+(A*m.z+P*_.z),l.push(h.x,h.y,h.z),f.subVectors(h,d).normalize(),c.push(f.x,f.y,f.z),u.push(v/n),u.push(E/i)}}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const E=(i+1)*(v-1)+(x-1),w=(i+1)*v+(x-1),A=(i+1)*v+x,P=(i+1)*(v-1)+x;o.push(E,w,P),o.push(w,A,P)}this.setIndex(o),this.setAttribute("position",new Be(l,3)),this.setAttribute("normal",new Be(c,3)),this.setAttribute("uv",new Be(u,2));function y(v,x,E,w,A){const P=Math.cos(v),M=Math.sin(v),R=E/x*v,V=Math.cos(R);A.x=w*(2+V)*.5*P,A.y=w*(2+V)*M*.5,A.z=w*Math.sin(R)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new sc(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class rc extends yt{constructor(e=new vh(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new D,l=new D,c=new pe;let u=new D;const h=[],f=[],d=[],p=[];_(),this.setIndex(p),this.setAttribute("position",new Be(h,3)),this.setAttribute("normal",new Be(f,3)),this.setAttribute("uv",new Be(d,2));function _(){for(let v=0;v<t;v++)g(v);g(r===!1?t:0),y(),m()}function g(v){u=e.getPointAt(v/t,u);const x=a.normals[v],E=a.binormals[v];for(let w=0;w<=i;w++){const A=w/i*Math.PI*2,P=Math.sin(A),M=-Math.cos(A);l.x=M*x.x+P*E.x,l.y=M*x.y+P*E.y,l.z=M*x.z+P*E.z,l.normalize(),f.push(l.x,l.y,l.z),o.x=u.x+n*l.x,o.y=u.y+n*l.y,o.z=u.z+n*l.z,h.push(o.x,o.y,o.z)}}function m(){for(let v=1;v<=t;v++)for(let x=1;x<=i;x++){const E=(i+1)*(v-1)+(x-1),w=(i+1)*v+(x-1),A=(i+1)*v+x,P=(i+1)*(v-1)+x;p.push(E,w,P),p.push(w,A,P)}}function y(){for(let v=0;v<=t;v++)for(let x=0;x<=i;x++)c.x=v/t,c.y=x/i,d.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new rc(new Al[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class km extends yt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new D,r=new D;if(e.index!==null){const a=e.attributes.position,o=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:o.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const h=l[c],f=h.start,d=h.count;for(let p=f,_=f+d;p<_;p+=3)for(let g=0;g<3;g++){const m=o.getX(p+g),y=o.getX(p+(g+1)%3);i.fromBufferAttribute(a,m),r.fromBufferAttribute(a,y),Qf(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const a=e.attributes.position;for(let o=0,l=a.count/3;o<l;o++)for(let c=0;c<3;c++){const u=3*o+c,h=3*o+(c+1)%3;i.fromBufferAttribute(a,u),r.fromBufferAttribute(a,h),Qf(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Be(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Qf(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var ed=Object.freeze({__proto__:null,BoxGeometry:ur,CapsuleGeometry:Yl,CircleGeometry:jl,ConeGeometry:Zl,CylinderGeometry:sa,DodecahedronGeometry:Jl,EdgesGeometry:Nm,ExtrudeGeometry:$l,IcosahedronGeometry:Ql,LatheGeometry:Qa,OctahedronGeometry:eo,PlaneGeometry:ta,PolyhedronGeometry:Es,RingGeometry:ec,ShapeGeometry:tc,SphereGeometry:to,TetrahedronGeometry:nc,TorusGeometry:ic,TorusKnotGeometry:sc,TubeGeometry:rc,WireframeGeometry:km});class Bm extends In{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Oe(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class zm extends ai{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class xh extends In{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Oe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ms,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Hm extends xh{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new pe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return nn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Oe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Oe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Oe(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Tl extends In{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Oe(16777215),this.specular=new Oe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ms,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ja,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Gm extends In{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Oe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ms,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Vm extends In{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ms,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class bh extends In{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Oe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ms,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ja,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Wm extends In{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Oe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ms,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Xm extends En{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Zs(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function qm(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function Ym(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Bu(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,a=0;a!==n;++r){const o=t[r]*e;for(let l=0;l!==e;++l)i[a++]=s[o+l]}return i}function Sh(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(e.push(r.time),t.push.apply(t,a)),r=s[i++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(e.push(r.time),a.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do a=r[n],a!==void 0&&(e.push(r.time),t.push(a)),r=s[i++];while(r!==void 0)}function xS(s,e,t,n,i=30){const r=s.clone();r.name=e;const a=[];for(let l=0;l<r.tracks.length;++l){const c=r.tracks[l],u=c.getValueSize(),h=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*i;if(!(p<t||p>=n)){h.push(c.times[d]);for(let _=0;_<u;++_)f.push(c.values[d*u+_])}}h.length!==0&&(c.times=Zs(h,c.times.constructor),c.values=Zs(f,c.values.constructor),a.push(c))}r.tracks=a;let o=1/0;for(let l=0;l<r.tracks.length;++l)o>r.tracks[l].times[0]&&(o=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*o);return r.resetDuration(),r}function bS(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let a=0;a<i;++a){const o=t.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const c=s.tracks.find(function(m){return m.name===o.name&&m.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=o.times.length-1;let _;if(r<=o.times[0]){const m=u,y=h-u;_=o.values.slice(m,y)}else if(r>=o.times[p]){const m=p*h+u,y=m+h-u;_=o.values.slice(m,y)}else{const m=o.createInterpolant(),y=u,v=h-u;m.evaluate(r),_=m.resultBuffer.slice(y,v)}l==="quaternion"&&new xn().fromArray(_).normalize().conjugate().toArray(_);const g=c.times.length;for(let m=0;m<g;++m){const y=m*d+f;if(l==="quaternion")xn.multiplyQuaternionsFlat(c.values,y,_,0,c.values,y);else{const v=d-f*2;for(let x=0;x<v;++x)c.values[y+x]-=_[x]}}}return s.blendMode=nh,s}const SS={convertArray:Zs,isTypedArray:qm,getKeyframeOrder:Ym,sortedArray:Bu,flattenJSON:Sh,subclip:xS,makeClipAdditive:bS};class no{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=r)){const o=t[1];e<o&&(n=2,r=o);for(let l=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0;break n}break e}for(;n<a;){const o=n+a>>>1;e<t[o]?a=o:n=o+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let a=0;a!==i;++a)t[a]=n[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class jm extends no{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:qs,endingEnd:qs}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,o=i[r],l=i[a];if(o===void 0)switch(this.getSettings_().endingStart){case Ys:r=e,o=2*t-n;break;case La:r=i.length-2,o=t+i[r]-i[r+1];break;default:r=e,o=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Ys:a=e,l=2*n-t;break;case La:a=1,l=n+i[1]-i[0];break;default:a=e-1,l=t}const c=(n-t)*.5,u=this.valueSize;this._weightPrev=c/(t-o),this._weightNext=c/(l-n),this._offsetPrev=r*u,this._offsetNext=a*u}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,u=this._offsetPrev,h=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(n-t)/(i-t),_=p*p,g=_*p,m=-f*g+2*f*_-f*p,y=(1+f)*g+(-1.5-2*f)*_+(-.5+f)*p+1,v=(-1-d)*g+(1.5+d)*_+.5*p,x=d*g-d*_;for(let E=0;E!==o;++E)r[E]=m*a[u+E]+y*a[c+E]+v*a[l+E]+x*a[h+E];return r}}class Mh extends no{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,u=(n-t)/(i-t),h=1-u;for(let f=0;f!==o;++f)r[f]=a[c+f]*h+a[l+f]*u;return r}}class Zm extends no{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class yi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Zs(t,this.TimeBufferType),this.values=Zs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Zs(e.times,Array),values:Zs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Zm(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Mh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new jm(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ra:t=this.InterpolantFactoryMethodDiscrete;break;case Ia:t=this.InterpolantFactoryMethodLinear;break;case pl:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ra;case this.InterpolantFactoryMethodLinear:return Ia;case this.InterpolantFactoryMethodSmooth:return pl}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;a!==-1&&n[a]>t;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const o=this.getValueSize();this.times=n.slice(r,a),this.values=this.values.slice(r*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==r;o++){const l=n[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),e=!1;break}a=l}if(i!==void 0&&qm(i))for(let o=0,l=i.length;o!==l;++o){const c=i[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===pl,r=e.length-1;let a=1;for(let o=1;o<r;++o){let l=!1;const c=e[o],u=e[o+1];if(c!==u&&(o!==1||c!==e[0]))if(i)l=!0;else{const h=o*n,f=h-n,d=h+n;for(let p=0;p!==n;++p){const _=t[h+p];if(_!==t[f+p]||_!==t[d+p]){l=!0;break}}}if(l){if(o!==a){e[a]=e[o];const h=o*n,f=a*n;for(let d=0;d!==n;++d)t[f+d]=t[h+d]}++a}}if(r>0){e[a]=e[r];for(let o=r*n,l=a*n,c=0;c!==n;++c)t[l+c]=t[o+c];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}yi.prototype.TimeBufferType=Float32Array;yi.prototype.ValueBufferType=Float32Array;yi.prototype.DefaultInterpolation=Ia;class hr extends yi{}hr.prototype.ValueTypeName="bool";hr.prototype.ValueBufferType=Array;hr.prototype.DefaultInterpolation=Ra;hr.prototype.InterpolantFactoryMethodLinear=void 0;hr.prototype.InterpolantFactoryMethodSmooth=void 0;class Eh extends yi{}Eh.prototype.ValueTypeName="color";class Va extends yi{}Va.prototype.ValueTypeName="number";class Jm extends no{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(n-t)/(i-t);let c=e*o;for(let u=c+o;c!==u;c+=4)xn.slerpFlat(r,0,a,c-o,a,c,l);return r}}class fr extends yi{InterpolantFactoryMethodLinear(e){return new Jm(this.times,this.values,this.getValueSize(),e)}}fr.prototype.ValueTypeName="quaternion";fr.prototype.DefaultInterpolation=Ia;fr.prototype.InterpolantFactoryMethodSmooth=void 0;class dr extends yi{}dr.prototype.ValueTypeName="string";dr.prototype.ValueBufferType=Array;dr.prototype.DefaultInterpolation=Ra;dr.prototype.InterpolantFactoryMethodLinear=void 0;dr.prototype.InterpolantFactoryMethodSmooth=void 0;class ir extends yi{}ir.prototype.ValueTypeName="vector";class sr{constructor(e,t=-1,n,i=Pl){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=ei(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,o=n.length;a!==o;++a)t.push(ES(n[a]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=n.length;r!==a;++r)t.push(yi.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,a=[];for(let o=0;o<r;o++){let l=[],c=[];l.push((o+r-1)%r,o,(o+1)%r),c.push(0,1,0);const u=Ym(l);l=Bu(l,1,u),c=Bu(c,1,u),!i&&l[0]===0&&(l.push(r),c.push(c[0])),a.push(new Va(".morphTargetInfluences["+t[o].name+"]",l,c).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const c=e[o],u=c.name.match(r);if(u&&u.length>1){const h=u[1];let f=i[h];f||(i[h]=f=[]),f.push(c)}}const a=[];for(const o in i)a.push(this.CreateFromMorphTargetSequence(o,i[o],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,f,d,p,_){if(d.length!==0){const g=[],m=[];Sh(d,g,m,p),g.length!==0&&_.push(new h(f,g,m))}},i=[],r=e.name||"default",a=e.fps||30,o=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const f=c[h].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let _=0;_<f[p].morphTargets.length;_++)d[f[p].morphTargets[_]]=-1;for(const _ in d){const g=[],m=[];for(let y=0;y!==f[p].morphTargets.length;++y){const v=f[p];g.push(v.time),m.push(v.morphTarget===_?1:0)}i.push(new Va(".morphTargetInfluence["+_+"]",g,m))}l=d.length*a}else{const d=".bones["+t[h].name+"]";n(ir,d+".position",f,"pos",i),n(fr,d+".quaternion",f,"rot",i),n(ir,d+".scale",f,"scl",i)}}return i.length===0?null:new this(r,l,i,o)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function MS(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Va;case"vector":case"vector2":case"vector3":case"vector4":return ir;case"color":return Eh;case"quaternion":return fr;case"bool":case"boolean":return hr;case"string":return dr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function ES(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=MS(s.type);if(s.times===void 0){const t=[],n=[];Sh(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const rr={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Ah{constructor(e,t,n){const i=this;let r=!1,a=0,o=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){o++,r===!1&&i.onStart!==void 0&&i.onStart(u,a,o),r=!0},this.itemEnd=function(u){a++,i.onProgress!==void 0&&i.onProgress(u,a,o),a===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const d=c[h],p=c[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return p}return null}}}const Km=new Ah;class An{constructor(e){this.manager=e!==void 0?e:Km,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}An.DEFAULT_MATERIAL_NAME="__DEFAULT";const Gi={};class AS extends Error{constructor(e,t){super(e),this.response=t}}class mi extends An{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=rr.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Gi[e]!==void 0){Gi[e].push({onLoad:t,onProgress:n,onError:i});return}Gi[e]=[],Gi[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=Gi[e],h=c.body.getReader(),f=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),d=f?parseInt(f):0,p=d!==0;let _=0;const g=new ReadableStream({start(m){y();function y(){h.read().then(({done:v,value:x})=>{if(v)m.close();else{_+=x.byteLength;const E=new ProgressEvent("progress",{lengthComputable:p,loaded:_,total:d});for(let w=0,A=u.length;w<A;w++){const P=u[w];P.onProgress&&P.onProgress(E)}m.enqueue(x),y()}})}}});return new Response(g)}else throw new AS(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,o));case"json":return c.json();default:if(o===void 0)return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(o),f=h&&h[1]?h[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(p=>d.decode(p))}}}).then(c=>{rr.add(e,c);const u=Gi[e];delete Gi[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onLoad&&d.onLoad(c)}}).catch(c=>{const u=Gi[e];if(u===void 0)throw this.manager.itemError(e),c;delete Gi[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class TS extends An{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new mi(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=sr.parse(e[n]);t.push(i)}return t}}class wS extends An{constructor(e){super(e)}load(e,t,n,i){const r=this,a=[],o=new Xl,l=new mi(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(r.withCredentials);let c=0;function u(h){l.load(e[h],function(f){const d=r.parse(f,!0);a[h]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},c+=1,c===6&&(d.mipmapCount===1&&(o.minFilter=ln),o.image=a,o.format=d.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(Array.isArray(e))for(let h=0,f=e.length;h<f;++h)u(h);else l.load(e,function(h){const f=r.parse(h,!0);if(f.isCubemap){const d=f.mipmaps.length/f.mipmapCount;for(let p=0;p<d;p++){a[p]={mipmaps:[]};for(let _=0;_<f.mipmapCount;_++)a[p].mipmaps.push(f.mipmaps[p*f.mipmapCount+_]),a[p].format=f.format,a[p].width=f.width,a[p].height=f.height}o.image=a}else o.image.width=f.width,o.image.height=f.height,o.mipmaps=f.mipmaps;f.mipmapCount===1&&(o.minFilter=ln),o.format=f.format,o.needsUpdate=!0,t&&t(o)},n,i);return o}}class Wa extends An{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=rr.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const o=ka("img");function l(){u(),rr.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(h){u(),i&&i(h),r.manager.itemError(e),r.manager.itemEnd(e)}function u(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}}class CS extends An{constructor(e){super(e)}load(e,t,n,i){const r=new Ka;r.colorSpace=tn;const a=new Wa(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function l(c){a.load(e[c],function(u){r.images[c]=u,o++,o===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return r}}class $m extends An{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new qr,o=new mi(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(e,function(l){let c;try{c=r.parse(l)}catch(u){if(i!==void 0)i(u);else{console.error(u);return}}c.image!==void 0?a.image=c.image:c.data!==void 0&&(a.image.width=c.width,a.image.height=c.height,a.image.data=c.data),a.wrapS=c.wrapS!==void 0?c.wrapS:yn,a.wrapT=c.wrapT!==void 0?c.wrapT:yn,a.magFilter=c.magFilter!==void 0?c.magFilter:ln,a.minFilter=c.minFilter!==void 0?c.minFilter:ln,a.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0?a.colorSpace=c.colorSpace:c.encoding!==void 0&&(a.encoding=c.encoding),c.flipY!==void 0&&(a.flipY=c.flipY),c.format!==void 0&&(a.format=c.format),c.type!==void 0&&(a.type=c.type),c.mipmaps!==void 0&&(a.mipmaps=c.mipmaps,a.minFilter=ns),c.mipmapCount===1&&(a.minFilter=ln),c.generateMipmaps!==void 0&&(a.generateMipmaps=c.generateMipmaps),a.needsUpdate=!0,t&&t(a,c)},n,i),a}}class Qm extends An{constructor(e){super(e)}load(e,t,n,i){const r=new un,a=new Wa(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){r.image=o,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class As extends Rt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Oe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class eg extends As{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Oe(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Gc=new at,td=new D,nd=new D;class Th{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new pe(512,512),this.map=null,this.mapPass=null,this.matrix=new at,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Fl,this._frameExtents=new pe(1,1),this._viewportCount=1,this._viewports=[new Nt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;td.setFromMatrixPosition(e.matrixWorld),t.position.copy(td),nd.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(nd),t.updateMatrixWorld(),Gc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Gc),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Gc)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class RS extends Th{constructor(){super(new fn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Jr*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class wh extends As{constructor(e,t,n=0,i=Math.PI/3,r=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.target=new Rt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new RS}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const id=new at,va=new D,Vc=new D;class IS extends Th{constructor(){super(new fn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new pe(4,2),this._viewportCount=6,this._viewports=[new Nt(2,1,1,1),new Nt(0,1,1,1),new Nt(3,1,1,1),new Nt(1,1,1,1),new Nt(3,0,1,1),new Nt(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),va.setFromMatrixPosition(e.matrixWorld),n.position.copy(va),Vc.copy(n.position),Vc.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Vc),n.updateMatrixWorld(),i.makeTranslation(-va.x,-va.y,-va.z),id.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(id)}}class Ch extends As{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new IS}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class LS extends Th{constructor(){super(new na(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Rh extends As{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.target=new Rt,this.shadow=new LS}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Ih extends As{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class tg extends As{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class ng{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(n*r)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*r),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],2*.429043*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class ig extends As{constructor(e=new ng,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class ac extends An{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,a=new mi(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=ac.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Oe().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const a=e.uniforms[r];switch(i.uniforms[r]={},a.type){case"t":i.uniforms[r].value=n(a.value);break;case"c":i.uniforms[r].value=new Oe().setHex(a.value);break;case"v2":i.uniforms[r].value=new pe().fromArray(a.value);break;case"v3":i.uniforms[r].value=new D().fromArray(a.value);break;case"v4":i.uniforms[r].value=new Nt().fromArray(a.value);break;case"m3":i.uniforms[r].value=new bt().fromArray(a.value);break;case"m4":i.uniforms[r].value=new at().fromArray(a.value);break;default:i.uniforms[r].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new pe().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new pe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Bm,SpriteMaterial:hh,RawShaderMaterial:zm,ShaderMaterial:ai,PointsMaterial:dh,MeshPhysicalMaterial:Hm,MeshStandardMaterial:xh,MeshPhongMaterial:Tl,MeshToonMaterial:Gm,MeshNormalMaterial:Vm,MeshLambertMaterial:bh,MeshDepthMaterial:Bl,MeshDistanceMaterial:ch,MeshBasicMaterial:pi,MeshMatcapMaterial:Wm,LineDashedMaterial:Xm,LineBasicMaterial:En,Material:In};return new t[e]}}class wl{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class sg extends yt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class rg extends An{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new mi(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(d,p){if(t[p]!==void 0)return t[p];const g=d.interleavedBuffers[p],m=r(d,g.buffer),y=Gr(g.type,m),v=new Vl(y,g.stride);return v.uuid=g.uuid,t[p]=v,v}function r(d,p){if(n[p]!==void 0)return n[p];const g=d.arrayBuffers[p],m=new Uint32Array(g).buffer;return n[p]=m,m}const a=e.isInstancedBufferGeometry?new sg:new yt,o=e.data.index;if(o!==void 0){const d=Gr(o.type,o.array);a.setIndex(new Pt(d,1))}const l=e.data.attributes;for(const d in l){const p=l[d];let _;if(p.isInterleavedBufferAttribute){const g=i(e.data,p.data);_=new tr(g,p.itemSize,p.offset,p.normalized)}else{const g=Gr(p.type,p.array),m=p.isInstancedBufferAttribute?$r:Pt;_=new m(g,p.itemSize,p.normalized)}p.name!==void 0&&(_.name=p.name),p.usage!==void 0&&_.setUsage(p.usage),p.updateRange!==void 0&&(_.updateRange.offset=p.updateRange.offset,_.updateRange.count=p.updateRange.count),a.setAttribute(d,_)}const c=e.data.morphAttributes;if(c)for(const d in c){const p=c[d],_=[];for(let g=0,m=p.length;g<m;g++){const y=p[g];let v;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);v=new tr(x,y.itemSize,y.offset,y.normalized)}else{const x=Gr(y.type,y.array);v=new Pt(x,y.itemSize,y.normalized)}y.name!==void 0&&(v.name=y.name),_.push(v)}a.morphAttributes[d]=_}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let d=0,p=h.length;d!==p;++d){const _=h[d];a.addGroup(_.start,_.count,_.materialIndex)}const f=e.data.boundingSphere;if(f!==void 0){const d=new D;f.center!==void 0&&d.fromArray(f.center),a.boundingSphere=new gi(d,f.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class PS extends An{constructor(e){super(e)}load(e,t,n,i){const r=this,a=this.path===""?wl.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const o=new mi(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(c,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?wl.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new mi(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const a=await r.loadAsync(e,t),o=JSON.parse(a),l=o.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(o)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(c)}),o=this.parseTextures(e.textures,a),l=this.parseMaterials(e.materials,o),c=this.parseObject(e.object,r,l,o,n),u=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,u),t!==void 0){let h=!1;for(const f in a)if(a[f].data instanceof HTMLImageElement){h=!0;break}h===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),o=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,i,o,a,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new Qs().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=new $a().fromJSON(e[r],i);n[o.uuid]=o}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new rg;for(let r=0,a=e.length;r<a;r++){let o;const l=e[r];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":o=i.parse(l);break;default:l.type in ed?o=ed[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}o.uuid=l.uuid,l.name!==void 0&&(o.name=l.name),l.userData!==void 0&&(o.userData=l.userData),n[l.uuid]=o}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new ac;r.setTextures(t);for(let a=0,o=e.length;a<o;a++){const l=e[a];n[l.uuid]===void 0&&(n[l.uuid]=r.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=sr.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function a(l){return n.manager.itemStart(l),r.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function o(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return a(u)}else return l.data?{data:Gr(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new Ah(t);r=new Wa(l),r.setCrossOrigin(this.crossOrigin);for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.url;if(Array.isArray(f)){const d=[];for(let p=0,_=f.length;p<_;p++){const g=f[p],m=o(g);m!==null&&(m instanceof HTMLImageElement?d.push(m):d.push(new qr(m.data,m.width,m.height)))}i[h.uuid]=new js(d)}else{const d=o(h.url);i[h.uuid]=new js(d)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(a){if(typeof a=="string"){const o=a,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(o)?o:t.resourcePath+o;return await i.loadAsync(l)}else return a.data?{data:Gr(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){i=new Wa(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,o=e.length;a<o;a++){const l=e[a],c=l.url;if(Array.isArray(c)){const u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h],p=await r(d);p!==null&&(p instanceof HTMLImageElement?u.push(p):u.push(new qr(p.data,p.width,p.height)))}n[l.uuid]=new js(u)}else{const u=await r(l.url);n[l.uuid]=new js(u)}}}return n}parseTextures(e,t){function n(r,a){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),a[r])}const i={};if(e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=e[r];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const l=t[o.image],c=l.data;let u;Array.isArray(c)?(u=new Ka,c.length===6&&(u.needsUpdate=!0)):(c&&c.data?u=new qr:u=new un,c&&(u.needsUpdate=!0)),u.source=l,u.uuid=o.uuid,o.name!==void 0&&(u.name=o.name),o.mapping!==void 0&&(u.mapping=n(o.mapping,DS)),o.channel!==void 0&&(u.channel=o.channel),o.offset!==void 0&&u.offset.fromArray(o.offset),o.repeat!==void 0&&u.repeat.fromArray(o.repeat),o.center!==void 0&&u.center.fromArray(o.center),o.rotation!==void 0&&(u.rotation=o.rotation),o.wrap!==void 0&&(u.wrapS=n(o.wrap[0],sd),u.wrapT=n(o.wrap[1],sd)),o.format!==void 0&&(u.format=o.format),o.internalFormat!==void 0&&(u.internalFormat=o.internalFormat),o.type!==void 0&&(u.type=o.type),o.colorSpace!==void 0&&(u.colorSpace=o.colorSpace),o.encoding!==void 0&&(u.encoding=o.encoding),o.minFilter!==void 0&&(u.minFilter=n(o.minFilter,rd)),o.magFilter!==void 0&&(u.magFilter=n(o.magFilter,rd)),o.anisotropy!==void 0&&(u.anisotropy=o.anisotropy),o.flipY!==void 0&&(u.flipY=o.flipY),o.generateMipmaps!==void 0&&(u.generateMipmaps=o.generateMipmaps),o.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(u.unpackAlignment=o.unpackAlignment),o.compareFunction!==void 0&&(u.compareFunction=o.compareFunction),o.userData!==void 0&&(u.userData=o.userData),i[o.uuid]=u}return i}parseObject(e,t,n,i,r){let a;function o(f){return t[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),t[f]}function l(f){if(f!==void 0){if(Array.isArray(f)){const d=[];for(let p=0,_=f.length;p<_;p++){const g=f[p];n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),d.push(n[g])}return d}return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),n[f]}}function c(f){return i[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),i[f]}let u,h;switch(e.type){case"Scene":a=new Gl,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new Oe(e.background):a.background=c(e.background)),e.environment!==void 0&&(a.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new Hl(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new zl(e.fog.color,e.fog.density)),e.fog.name!==""&&(a.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":a=new fn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new na(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new Ih(e.color,e.intensity);break;case"DirectionalLight":a=new Rh(e.color,e.intensity);break;case"PointLight":a=new Ch(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new tg(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new wh(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new eg(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new ig().fromJSON(e);break;case"SkinnedMesh":u=o(e.geometry),h=l(e.material),a=new fh(u,h),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":u=o(e.geometry),h=l(e.material),a=new dn(u,h);break;case"InstancedMesh":u=o(e.geometry),h=l(e.material);const f=e.count,d=e.instanceMatrix,p=e.instanceColor;a=new Tm(u,h,f),a.instanceMatrix=new $r(new Float32Array(d.array),16),p!==void 0&&(a.instanceColor=new $r(new Float32Array(p.array),p.itemSize));break;case"LOD":a=new Am;break;case"Line":a=new is(o(e.geometry),l(e.material));break;case"LineLoop":a=new wm(o(e.geometry),l(e.material));break;case"LineSegments":a=new _i(o(e.geometry),l(e.material));break;case"PointCloud":case"Points":a=new Cm(o(e.geometry),l(e.material));break;case"Sprite":a=new Em(l(e.material));break;case"Group":a=new ps;break;case"Bone":a=new Wl;break;default:a=new Rt}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.up!==void 0&&a.up.fromArray(e.up),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let d=0;d<f.length;d++)a.add(this.parseObject(f[d],t,n,i,r))}if(e.animations!==void 0){const f=e.animations;for(let d=0;d<f.length;d++){const p=f[d];a.animations.push(r[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const f=e.levels;for(let d=0;d<f.length;d++){const p=f[d],_=a.getObjectByProperty("uuid",p.object);_!==void 0&&a.addLevel(_,p.distance,p.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const DS={UVMapping:Il,CubeReflectionMapping:ts,CubeRefractionMapping:xs,EquirectangularReflectionMapping:Ta,EquirectangularRefractionMapping:wa,CubeUVReflectionMapping:ea},sd={RepeatWrapping:ji,ClampToEdgeWrapping:yn,MirroredRepeatWrapping:Ca},rd={NearestFilter:on,NearestMipmapNearestFilter:Sl,NearestMipmapLinearFilter:ba,LinearFilter:ln,LinearMipmapNearestFilter:Zu,LinearMipmapLinearFilter:ns};class NS extends An{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=rr.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(l){rr.add(e,l),t&&t(l),r.manager.itemEnd(e)}).catch(function(l){i&&i(l),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}let Ko;class Lh{static getContext(){return Ko===void 0&&(Ko=new(window.AudioContext||window.webkitAudioContext)),Ko}static setContext(e){Ko=e}}class US extends An{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new mi(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){try{const c=l.slice(0);Lh.getContext().decodeAudioData(c,function(h){t(h)},o)}catch(c){o(c)}},n,i);function o(l){i?i(l):console.error(l),r.manager.itemError(e)}}}const ad=new at,od=new at,Ns=new at;class OS{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new fn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new fn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Ns.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,a=t.near*Math.tan($s*t.fov*.5)/t.zoom;let o,l;od.elements[12]=-i,ad.elements[12]=i,o=-a*t.aspect+r,l=a*t.aspect+r,Ns.elements[0]=2*t.near/(l-o),Ns.elements[8]=(l+o)/(l-o),this.cameraL.projectionMatrix.copy(Ns),o=-a*t.aspect-r,l=a*t.aspect-r,Ns.elements[0]=2*t.near/(l-o),Ns.elements[8]=(l+o)/(l-o),this.cameraR.projectionMatrix.copy(Ns)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(od),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(ad)}}class Ph{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=ld(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=ld();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function ld(){return(typeof performance>"u"?Date:performance).now()}const Us=new D,cd=new xn,FS=new D,Os=new D;class kS extends Rt{constructor(){super(),this.type="AudioListener",this.context=Lh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Ph}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Us,cd,FS),Os.set(0,0,-1).applyQuaternion(cd),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Us.x,i),t.positionY.linearRampToValueAtTime(Us.y,i),t.positionZ.linearRampToValueAtTime(Us.z,i),t.forwardX.linearRampToValueAtTime(Os.x,i),t.forwardY.linearRampToValueAtTime(Os.y,i),t.forwardZ.linearRampToValueAtTime(Os.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Us.x,Us.y,Us.z),t.setOrientation(Os.x,Os.y,Os.z,n.x,n.y,n.z)}}class ag extends Rt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Fs=new D,ud=new xn,BS=new D,ks=new D;class zS extends ag{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Fs,ud,BS),ks.set(0,0,1).applyQuaternion(ud);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Fs.x,n),t.positionY.linearRampToValueAtTime(Fs.y,n),t.positionZ.linearRampToValueAtTime(Fs.z,n),t.orientationX.linearRampToValueAtTime(ks.x,n),t.orientationY.linearRampToValueAtTime(ks.y,n),t.orientationZ.linearRampToValueAtTime(ks.z,n)}else t.setPosition(Fs.x,Fs.y,Fs.z),t.setOrientation(ks.x,ks.y,ks.z)}}class HS{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class og{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,a;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==i;++o)n[r+o]=n[o];a=t}else{a+=t;const o=t/a;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){o.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){xn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const a=this._workIndex*r;xn.multiplyQuaternionsFlat(e,a,e,t,e,n),xn.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,r){const a=1-i;for(let o=0;o!==r;++o){const l=t+o;e[l]=e[l]*a+e[n+o]*i}}_lerpAdditive(e,t,n,i,r){for(let a=0;a!==r;++a){const o=t+a;e[o]=e[o]+e[n+a]*i}}}const Dh="\\[\\]\\.:\\/",GS=new RegExp("["+Dh+"]","g"),Nh="[^"+Dh+"]",VS="[^"+Dh.replace("\\.","")+"]",WS=/((?:WC+[\/:])*)/.source.replace("WC",Nh),XS=/(WCOD+)?/.source.replace("WCOD",VS),qS=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Nh),YS=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Nh),jS=new RegExp("^"+WS+XS+qS+YS+"$"),ZS=["material","materials","bones","map"];class JS{constructor(e,t,n){const i=n||Tt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Tt{constructor(e,t,n){this.path=t,this.parsedPath=n||Tt.parseTrackName(t),this.node=Tt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Tt.Composite(e,t,n):new Tt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(GS,"")}static parseTrackName(e){const t=jS.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);ZS.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let a=0;a<r.length;a++){const o=r[a];if(o.name===t||o.uuid===t)return o;const l=n(o.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Tt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===c){c=u;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const a=e[i];if(a===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Tt.Composite=JS;Tt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Tt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Tt.prototype.GetterByBindingType=[Tt.prototype._getValue_direct,Tt.prototype._getValue_array,Tt.prototype._getValue_arrayElement,Tt.prototype._getValue_toArray];Tt.prototype.SetterByBindingTypeAndVersioning=[[Tt.prototype._setValue_direct,Tt.prototype._setValue_direct_setNeedsUpdate,Tt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Tt.prototype._setValue_array,Tt.prototype._setValue_array_setNeedsUpdate,Tt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Tt.prototype._setValue_arrayElement,Tt.prototype._setValue_arrayElement_setNeedsUpdate,Tt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Tt.prototype._setValue_fromArray,Tt.prototype._setValue_fromArray_setNeedsUpdate,Tt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class KS{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ei(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,a=r.length;let o,l=e.length,c=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){const f=arguments[u],d=f.uuid;let p=t[d];if(p===void 0){p=l++,t[d]=p,e.push(f);for(let _=0,g=a;_!==g;++_)r[_].push(new Tt(f,n[_],i[_]))}else if(p<c){o=e[p];const _=--c,g=e[_];t[g.uuid]=p,e[p]=g,t[d]=_,e[_]=f;for(let m=0,y=a;m!==y;++m){const v=r[m],x=v[_];let E=v[p];v[p]=x,E===void 0&&(E=new Tt(f,n[m],i[m])),v[_]=E}}else e[p]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const l=arguments[a],c=l.uuid,u=t[c];if(u!==void 0&&u>=r){const h=r++,f=e[h];t[f.uuid]=u,e[u]=f,t[c]=h,e[h]=l;for(let d=0,p=i;d!==p;++d){const _=n[d],g=_[h],m=_[u];_[u]=g,_[h]=m}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,a=e.length;for(let o=0,l=arguments.length;o!==l;++o){const c=arguments[o],u=c.uuid,h=t[u];if(h!==void 0)if(delete t[u],h<r){const f=--r,d=e[f],p=--a,_=e[p];t[d.uuid]=h,e[h]=d,t[_.uuid]=f,e[f]=_,e.pop();for(let g=0,m=i;g!==m;++g){const y=n[g],v=y[f],x=y[p];y[h]=v,y[f]=x,y.pop()}}else{const f=--a,d=e[f];f>0&&(t[d.uuid]=h),e[h]=d,e.pop();for(let p=0,_=i;p!==_;++p){const g=n[p];g[h]=g[f],g.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const a=this._paths,o=this._parsedPaths,l=this._objects,c=l.length,u=this.nCachedObjects_,h=new Array(c);i=r.length,n[e]=i,a.push(e),o.push(t),r.push(h);for(let f=u,d=l.length;f!==d;++f){const p=l[f];h[f]=new Tt(p,e,t)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,l=a[o],c=e[o];t[c]=n,a[n]=l,a.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}}class lg{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,a=r.length,o=new Array(a),l={endingStart:qs,endingEnd:qs};for(let c=0;c!==a;++c){const u=r[c].createInterpolant(null);o[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Xp,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,a=r/i,o=i/r;e.warp(1,a,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,c=o.sampleValues;return l[0]=r,l[1]=r+n,c[0]=e/a,c[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const l=(e-r)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case nh:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(a),c[u].accumulateAdditive(o);break;case Pl:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(a),c[u].accumulate(i,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const a=n===qp;if(e===0)return r===-1?i:a&&(r&1)===1?t-i:i;if(n===Wp){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const o=Math.floor(i/t);i-=t*o,r+=Math.abs(o);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(a&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ys,i.endingEnd=Ys):(e?i.endingStart=this.zeroSlopeAtStart?Ys:qs:i.endingStart=La,t?i.endingEnd=this.zeroSlopeAtEnd?Ys:qs:i.endingEnd=La)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,l[0]=t,o[1]=r+e,l[1]=n,this}}const $S=new Float32Array(1);class QS extends Li{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,o=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let h=0;h!==r;++h){const f=i[h],d=f.name;let p=u[d];if(p!==void 0)++p.referenceCount,a[h]=p;else{if(p=a[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,d));continue}const _=t&&t._propertyBindings[h].binding.parsedPath;p=new og(Tt.create(n,d,_),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,d),a[h]=p}o[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let a=r[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{const o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,a=this._actionsByClip,o=a[r],l=o.knownActions,c=l[l.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),e._byClipCacheIndex=null;const h=o.actionByRoot,f=(e._localRoot||this._root).uuid;delete h[f],l.length===0&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,o=a[i],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete o[r],Object.keys(o).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Mh(new Float32Array(2),new Float32Array(2),1,$S),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let a=typeof e=="string"?sr.findByName(i,e):e;const o=a!==null?a.uuid:e,l=this._actionsByClip[o];let c=null;if(n===void 0&&(a!==null?n=a.blendMode:n=Pl),l!==void 0){const h=l.actionByRoot[r];if(h!==void 0&&h.blendMode===n)return h;c=l.knownActions[0],a===null&&(a=c._clip)}if(a===null)return null;const u=new lg(this,a,t,n);return this._bindAction(u,c),this._addInactiveAction(u,o,r),u}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?sr.findByName(n,e):e,a=r?r.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,r,a);const o=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)o[c].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const a=r.knownActions;for(let o=0,l=a.length;o!==l;++o){const c=a[o];this._deactivateAction(c);const u=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const o=n[a].actionByRoot,l=o[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const a in r){const o=r[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Uh{constructor(e){this.value=e}clone(){return new Uh(this.value.clone===void 0?this.value:this.value.clone())}}let eM=0;class tM extends Li{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:eM++}),this.name="",this.usage=Oa,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class nM extends Vl{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class iM{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class sM{constructor(e,t,n=0,i=1/0){this.ray=new cr(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Ul,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return zu(e,this,n,t),n.sort(hd),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)zu(e[i],this,n,t);return n.sort(hd),n}}function hd(s,e){return s.distance-e.distance}function zu(s,e,t,n){if(s.layers.test(e.layers)&&s.raycast(e,t),n===!0){const i=s.children;for(let r=0,a=i.length;r<a;r++)zu(i[r],e,t,!0)}}class Hu{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(nn(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class rM{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const fd=new pe;class aM{constructor(e=new pe(1/0,1/0),t=new pe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=fd.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,fd).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const dd=new D,$o=new D;class oM{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){dd.subVectors(e,this.start),$o.subVectors(this.end,this.start);const n=$o.dot($o);let r=$o.dot(dd)/n;return t&&(r=nn(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const pd=new D;class lM extends Rt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new yt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,l=32;a<l;a++,o++){const c=a/l*Math.PI*2,u=o/l*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new Be(i,3));const r=new En({fog:!1,toneMapped:!1});this.cone=new _i(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),pd.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(pd),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const hs=new D,Qo=new at,Wc=new at;class cM extends _i{constructor(e){const t=cg(e),n=new yt,i=[],r=[],a=new Oe(0,0,1),o=new Oe(0,1,0);for(let c=0;c<t.length;c++){const u=t[c];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(o.r,o.g,o.b))}n.setAttribute("position",new Be(i,3)),n.setAttribute("color",new Be(r,3));const l=new En({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Wc.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){const o=t[r];o.parent&&o.parent.isBone&&(Qo.multiplyMatrices(Wc,o.matrixWorld),hs.setFromMatrixPosition(Qo),i.setXYZ(a,hs.x,hs.y,hs.z),Qo.multiplyMatrices(Wc,o.parent.matrixWorld),hs.setFromMatrixPosition(Qo),i.setXYZ(a+1,hs.x,hs.y,hs.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function cg(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,cg(s.children[t]));return e}class uM extends dn{constructor(e,t,n){const i=new to(t,4,2),r=new pi({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const hM=new D,md=new Oe,gd=new Oe;class fM extends Rt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new eo(t);i.rotateY(Math.PI*.5),this.material=new pi({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),a=new Float32Array(r.count*3);i.setAttribute("color",new Pt(a,3)),this.add(new dn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");md.copy(this.light.color),gd.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?md:gd;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(hM.setFromMatrixPosition(this.light.matrixWorld).negate())}}class ug extends _i{constructor(e=10,t=10,n=4473924,i=8947848){n=new Oe(n),i=new Oe(i);const r=t/2,a=e/t,o=e/2,l=[],c=[];for(let f=0,d=0,p=-o;f<=t;f++,p+=a){l.push(-o,0,p,o,0,p),l.push(p,0,-o,p,0,o);const _=f===r?n:i;_.toArray(c,d),d+=3,_.toArray(c,d),d+=3,_.toArray(c,d),d+=3,_.toArray(c,d),d+=3}const u=new yt;u.setAttribute("position",new Be(l,3)),u.setAttribute("color",new Be(c,3));const h=new En({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class dM extends _i{constructor(e=10,t=16,n=8,i=64,r=4473924,a=8947848){r=new Oe(r),a=new Oe(a);const o=[],l=[];if(t>1)for(let h=0;h<t;h++){const f=h/t*(Math.PI*2),d=Math.sin(f)*e,p=Math.cos(f)*e;o.push(0,0,0),o.push(d,0,p);const _=h&1?r:a;l.push(_.r,_.g,_.b),l.push(_.r,_.g,_.b)}for(let h=0;h<n;h++){const f=h&1?r:a,d=e-e/n*h;for(let p=0;p<i;p++){let _=p/i*(Math.PI*2),g=Math.sin(_)*d,m=Math.cos(_)*d;o.push(g,0,m),l.push(f.r,f.g,f.b),_=(p+1)/i*(Math.PI*2),g=Math.sin(_)*d,m=Math.cos(_)*d,o.push(g,0,m),l.push(f.r,f.g,f.b)}}const c=new yt;c.setAttribute("position",new Be(o,3)),c.setAttribute("color",new Be(l,3));const u=new En({vertexColors:!0,toneMapped:!1});super(c,u),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const _d=new D,el=new D,vd=new D;class pM extends Rt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new yt;i.setAttribute("position",new Be([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new En({fog:!1,toneMapped:!1});this.lightPlane=new is(i,r),this.add(this.lightPlane),i=new yt,i.setAttribute("position",new Be([0,0,0,0,0,1],3)),this.targetLine=new is(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),_d.setFromMatrixPosition(this.light.matrixWorld),el.setFromMatrixPosition(this.light.target.matrixWorld),vd.subVectors(el,_d),this.lightPlane.lookAt(el),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(el),this.targetLine.scale.z=vd.length()}}const tl=new D,Qt=new Ol;class mM extends _i{constructor(e){const t=new yt,n=new En({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],a={};o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4");function o(p,_){l(p),l(_)}function l(p){i.push(0,0,0),r.push(0,0,0),a[p]===void 0&&(a[p]=[]),a[p].push(i.length/3-1)}t.setAttribute("position",new Be(i,3)),t.setAttribute("color",new Be(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const c=new Oe(16755200),u=new Oe(16711680),h=new Oe(43775),f=new Oe(16777215),d=new Oe(3355443);this.setColors(c,u,h,f,d)}setColors(e,t,n,i,r){const o=this.geometry.getAttribute("color");o.setXYZ(0,e.r,e.g,e.b),o.setXYZ(1,e.r,e.g,e.b),o.setXYZ(2,e.r,e.g,e.b),o.setXYZ(3,e.r,e.g,e.b),o.setXYZ(4,e.r,e.g,e.b),o.setXYZ(5,e.r,e.g,e.b),o.setXYZ(6,e.r,e.g,e.b),o.setXYZ(7,e.r,e.g,e.b),o.setXYZ(8,e.r,e.g,e.b),o.setXYZ(9,e.r,e.g,e.b),o.setXYZ(10,e.r,e.g,e.b),o.setXYZ(11,e.r,e.g,e.b),o.setXYZ(12,e.r,e.g,e.b),o.setXYZ(13,e.r,e.g,e.b),o.setXYZ(14,e.r,e.g,e.b),o.setXYZ(15,e.r,e.g,e.b),o.setXYZ(16,e.r,e.g,e.b),o.setXYZ(17,e.r,e.g,e.b),o.setXYZ(18,e.r,e.g,e.b),o.setXYZ(19,e.r,e.g,e.b),o.setXYZ(20,e.r,e.g,e.b),o.setXYZ(21,e.r,e.g,e.b),o.setXYZ(22,e.r,e.g,e.b),o.setXYZ(23,e.r,e.g,e.b),o.setXYZ(24,t.r,t.g,t.b),o.setXYZ(25,t.r,t.g,t.b),o.setXYZ(26,t.r,t.g,t.b),o.setXYZ(27,t.r,t.g,t.b),o.setXYZ(28,t.r,t.g,t.b),o.setXYZ(29,t.r,t.g,t.b),o.setXYZ(30,t.r,t.g,t.b),o.setXYZ(31,t.r,t.g,t.b),o.setXYZ(32,n.r,n.g,n.b),o.setXYZ(33,n.r,n.g,n.b),o.setXYZ(34,n.r,n.g,n.b),o.setXYZ(35,n.r,n.g,n.b),o.setXYZ(36,n.r,n.g,n.b),o.setXYZ(37,n.r,n.g,n.b),o.setXYZ(38,i.r,i.g,i.b),o.setXYZ(39,i.r,i.g,i.b),o.setXYZ(40,r.r,r.g,r.b),o.setXYZ(41,r.r,r.g,r.b),o.setXYZ(42,r.r,r.g,r.b),o.setXYZ(43,r.r,r.g,r.b),o.setXYZ(44,r.r,r.g,r.b),o.setXYZ(45,r.r,r.g,r.b),o.setXYZ(46,r.r,r.g,r.b),o.setXYZ(47,r.r,r.g,r.b),o.setXYZ(48,r.r,r.g,r.b),o.setXYZ(49,r.r,r.g,r.b),o.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Qt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),rn("c",t,e,Qt,0,0,-1),rn("t",t,e,Qt,0,0,1),rn("n1",t,e,Qt,-n,-i,-1),rn("n2",t,e,Qt,n,-i,-1),rn("n3",t,e,Qt,-n,i,-1),rn("n4",t,e,Qt,n,i,-1),rn("f1",t,e,Qt,-n,-i,1),rn("f2",t,e,Qt,n,-i,1),rn("f3",t,e,Qt,-n,i,1),rn("f4",t,e,Qt,n,i,1),rn("u1",t,e,Qt,n*.7,i*1.1,-1),rn("u2",t,e,Qt,-n*.7,i*1.1,-1),rn("u3",t,e,Qt,0,i*2,-1),rn("cf1",t,e,Qt,-n,0,1),rn("cf2",t,e,Qt,n,0,1),rn("cf3",t,e,Qt,0,-i,1),rn("cf4",t,e,Qt,0,i,1),rn("cn1",t,e,Qt,-n,0,-1),rn("cn2",t,e,Qt,n,0,-1),rn("cn3",t,e,Qt,0,-i,-1),rn("cn4",t,e,Qt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function rn(s,e,t,n,i,r,a){tl.set(i,r,a).unproject(n);const o=e[s];if(o!==void 0){const l=t.getAttribute("position");for(let c=0,u=o.length;c<u;c++)l.setXYZ(o[c],tl.x,tl.y,tl.z)}}const nl=new Pi;class gM extends _i{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new yt;r.setIndex(new Pt(n,1)),r.setAttribute("position",new Pt(i,3)),super(r,new En({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&nl.setFromObject(this.object),nl.isEmpty())return;const t=nl.min,n=nl.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class _M extends _i{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new yt;r.setIndex(new Pt(n,1)),r.setAttribute("position",new Be(i,3)),super(r,new En({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class vM extends is{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new yt;a.setAttribute("position",new Be(r,3)),a.computeBoundingSphere(),super(a,new En({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const o=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new yt;l.setAttribute("position",new Be(o,3)),l.computeBoundingSphere(),this.add(new dn(l,new pi({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const yd=new D;let il,Xc;class yM extends Rt{constructor(e=new D(0,0,1),t=new D(0,0,0),n=1,i=16776960,r=n*.2,a=r*.2){super(),this.type="ArrowHelper",il===void 0&&(il=new yt,il.setAttribute("position",new Be([0,0,0,0,1,0],3)),Xc=new sa(0,.5,1,5,1),Xc.translate(0,-.5,0)),this.position.copy(t),this.line=new is(il,new En({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new dn(Xc,new pi({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{yd.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(yd,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class xM extends _i{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new yt;i.setAttribute("position",new Be(t,3)),i.setAttribute("color",new Be(n,3));const r=new En({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new Oe,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class bM{constructor(){this.type="ShapePath",this.color=new Oe,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Ba,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(m){const y=[];for(let v=0,x=m.length;v<x;v++){const E=m[v],w=new Qs;w.curves=E.curves,y.push(w)}return y}function n(m,y){const v=y.length;let x=!1;for(let E=v-1,w=0;w<v;E=w++){let A=y[E],P=y[w],M=P.x-A.x,R=P.y-A.y;if(Math.abs(R)>Number.EPSILON){if(R<0&&(A=y[w],M=-M,P=y[E],R=-R),m.y<A.y||m.y>P.y)continue;if(m.y===A.y){if(m.x===A.x)return!0}else{const V=R*(m.x-A.x)-M*(m.y-A.y);if(V===0)return!0;if(V<0)continue;x=!x}}else{if(m.y!==A.y)continue;if(P.x<=m.x&&m.x<=A.x||A.x<=m.x&&m.x<=P.x)return!0}}return x}const i=Ai.isClockWise,r=this.subPaths;if(r.length===0)return[];let a,o,l;const c=[];if(r.length===1)return o=r[0],l=new Qs,l.curves=o.curves,c.push(l),c;let u=!i(r[0].getPoints());u=e?!u:u;const h=[],f=[];let d=[],p=0,_;f[p]=void 0,d[p]=[];for(let m=0,y=r.length;m<y;m++)o=r[m],_=o.getPoints(),a=i(_),a=e?!a:a,a?(!u&&f[p]&&p++,f[p]={s:new Qs,p:_},f[p].s.curves=o.curves,u&&p++,d[p]=[]):d[p].push({h:o,p:_[0]});if(!f[0])return t(r);if(f.length>1){let m=!1,y=0;for(let v=0,x=f.length;v<x;v++)h[v]=[];for(let v=0,x=f.length;v<x;v++){const E=d[v];for(let w=0;w<E.length;w++){const A=E[w];let P=!0;for(let M=0;M<f.length;M++)n(A.p,f[M].p)&&(v!==M&&y++,P?(P=!1,h[M].push(A)):m=!0);P&&h[v].push(A)}}y>0&&m===!1&&(d=h)}let g;for(let m=0,y=f.length;m<y;m++){l=f[m].s,c.push(l),g=d[m];for(let v=0,x=g.length;v<x;v++)l.holes.push(g[v].h)}return c}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ya}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ya);const SM=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:ju,AddEquation:Vs,AddOperation:Ip,AdditiveAnimationBlendMode:nh,AdditiveBlending:nu,AlphaFormat:Fp,AlwaysCompare:sm,AlwaysDepth:Mp,AlwaysStencilFunc:Jp,AmbientLight:Ih,AnimationAction:lg,AnimationClip:sr,AnimationLoader:TS,AnimationMixer:QS,AnimationObjectGroup:KS,AnimationUtils:SS,ArcCurve:Rm,ArrayCamera:xm,ArrowHelper:yM,Audio:ag,AudioAnalyser:HS,AudioContext:Lh,AudioListener:kS,AudioLoader:US,AxesHelper:xM,BackSide:Nn,BasicDepthPacking:Yp,BasicShadowMap:Wg,Bone:Wl,BooleanKeyframeTrack:hr,Box2:aM,Box3:Pi,Box3Helper:_M,BoxGeometry:ur,BoxHelper:gM,BufferAttribute:Pt,BufferGeometry:yt,BufferGeometryLoader:rg,ByteType:Up,Cache:rr,Camera:Ol,CameraHelper:mM,CanvasTexture:qb,CapsuleGeometry:Yl,CatmullRomCurve3:Im,CineonToneMapping:Dp,CircleGeometry:jl,ClampToEdgeWrapping:yn,Clock:Ph,Color:Oe,ColorKeyframeTrack:Eh,ColorManagement:It,CompressedArrayTexture:Wb,CompressedCubeTexture:Xb,CompressedTexture:Xl,CompressedTextureLoader:wS,ConeGeometry:Zl,CubeCamera:fm,CubeReflectionMapping:ts,CubeRefractionMapping:xs,CubeTexture:Ka,CubeTextureLoader:CS,CubeUVReflectionMapping:ea,CubicBezierCurve:mh,CubicBezierCurve3:Lm,CubicInterpolant:jm,CullFaceBack:tu,CullFaceFront:cp,CullFaceFrontBack:Vg,CullFaceNone:lp,Curve:vi,CurvePath:Dm,CustomBlending:up,CustomToneMapping:Np,CylinderGeometry:sa,Cylindrical:rM,Data3DTexture:rh,DataArrayTexture:Nl,DataTexture:qr,DataTextureLoader:$m,DataUtils:$_,DecrementStencilOp:n_,DecrementWrapStencilOp:s_,DefaultLoadingManager:Km,DepthFormat:vs,DepthStencilFormat:er,DepthTexture:bm,DirectionalLight:Rh,DirectionalLightHelper:pM,DiscreteInterpolant:Zm,DisplayP3ColorSpace:Dl,DodecahedronGeometry:Jl,DoubleSide:hi,DstAlphaFactor:_p,DstColorFactor:yp,DynamicCopyUsage:y_,DynamicDrawUsage:d_,DynamicReadUsage:g_,EdgesGeometry:Nm,EllipseCurve:ql,EqualCompare:Qp,EqualDepth:Ap,EqualStencilFunc:l_,EquirectangularReflectionMapping:Ta,EquirectangularRefractionMapping:wa,Euler:Ja,EventDispatcher:Li,ExtrudeGeometry:$l,FileLoader:mi,Float16BufferAttribute:s0,Float32BufferAttribute:Be,Float64BufferAttribute:r0,FloatType:Mi,Fog:Hl,FogExp2:zl,FramebufferTexture:Vb,FrontSide:Ci,Frustum:Fl,GLBufferAttribute:iM,GLSL1:b_,GLSL3:Pu,GreaterCompare:tm,GreaterDepth:wp,GreaterEqualCompare:im,GreaterEqualDepth:Tp,GreaterEqualStencilFunc:f_,GreaterStencilFunc:u_,GridHelper:ug,Group:ps,HalfFloatType:Zr,HemisphereLight:eg,HemisphereLightHelper:fM,IcosahedronGeometry:Ql,ImageBitmapLoader:NS,ImageLoader:Wa,ImageUtils:sh,IncrementStencilOp:t_,IncrementWrapStencilOp:i_,InstancedBufferAttribute:$r,InstancedBufferGeometry:sg,InstancedInterleavedBuffer:nM,InstancedMesh:Tm,Int16BufferAttribute:n0,Int32BufferAttribute:i0,Int8BufferAttribute:Q_,IntType:Ju,InterleavedBuffer:Vl,InterleavedBufferAttribute:tr,Interpolant:no,InterpolateDiscrete:Ra,InterpolateLinear:Ia,InterpolateSmooth:pl,InvertStencilOp:r_,KeepStencilOp:ml,KeyframeTrack:yi,LOD:Am,LatheGeometry:Qa,Layers:Ul,LessCompare:$p,LessDepth:Ep,LessEqualCompare:em,LessEqualDepth:bl,LessEqualStencilFunc:c_,LessStencilFunc:o_,Light:As,LightProbe:ig,Line:is,Line3:oM,LineBasicMaterial:En,LineCurve:gh,LineCurve3:Pm,LineDashedMaterial:Xm,LineLoop:wm,LineSegments:_i,LinearDisplayP3ColorSpace:Za,LinearEncoding:Pa,LinearFilter:ln,LinearInterpolant:Mh,LinearMipMapLinearFilter:Zg,LinearMipMapNearestFilter:jg,LinearMipmapLinearFilter:ns,LinearMipmapNearestFilter:Zu,LinearSRGBColorSpace:Ri,LinearToneMapping:Lp,LinearTransfer:Da,Loader:An,LoaderUtils:wl,LoadingManager:Ah,LoopOnce:Wp,LoopPingPong:qp,LoopRepeat:Xp,LuminanceAlphaFormat:Bp,LuminanceFormat:kp,MOUSE:zs,Material:In,MaterialLoader:ac,MathUtils:Ws,Matrix3:bt,Matrix4:at,MaxEquation:au,Mesh:dn,MeshBasicMaterial:pi,MeshDepthMaterial:Bl,MeshDistanceMaterial:ch,MeshLambertMaterial:bh,MeshMatcapMaterial:Wm,MeshNormalMaterial:Vm,MeshPhongMaterial:Tl,MeshPhysicalMaterial:Hm,MeshStandardMaterial:xh,MeshToonMaterial:Gm,MinEquation:ru,MirroredRepeatWrapping:Ca,MixOperation:Rp,MultiplyBlending:su,MultiplyOperation:ja,NearestFilter:on,NearestMipMapLinearFilter:Yg,NearestMipMapNearestFilter:qg,NearestMipmapLinearFilter:ba,NearestMipmapNearestFilter:Sl,NeverCompare:Kp,NeverDepth:Sp,NeverStencilFunc:a_,NoBlending:Ji,NoColorSpace:Qn,NoToneMapping:Ki,NormalAnimationBlendMode:Pl,NormalBlending:Ks,NotEqualCompare:nm,NotEqualDepth:Cp,NotEqualStencilFunc:h_,NumberKeyframeTrack:Va,Object3D:Rt,ObjectLoader:PS,ObjectSpaceNormalMap:Zp,OctahedronGeometry:eo,OneFactor:pp,OneMinusDstAlphaFactor:vp,OneMinusDstColorFactor:xp,OneMinusSrcAlphaFactor:Yu,OneMinusSrcColorFactor:gp,OrthographicCamera:na,P3Primaries:Ua,PCFShadowMap:Xu,PCFSoftShadowMap:Rl,PMREMGenerator:Nu,Path:Ba,PerspectiveCamera:fn,Plane:Xi,PlaneGeometry:ta,PlaneHelper:vM,PointLight:Ch,PointLightHelper:uM,Points:Cm,PointsMaterial:dh,PolarGridHelper:dM,PolyhedronGeometry:Es,PositionalAudio:zS,PropertyBinding:Tt,PropertyMixer:og,QuadraticBezierCurve:_h,QuadraticBezierCurve3:vh,Quaternion:xn,QuaternionKeyframeTrack:fr,QuaternionLinearInterpolant:Jm,RED_GREEN_RGTC2_Format:Iu,RED_RGTC1_Format:Vp,REVISION:Ya,RGBADepthPacking:jp,RGBAFormat:$n,RGBAIntegerFormat:th,RGBA_ASTC_10x10_Format:Eu,RGBA_ASTC_10x5_Format:bu,RGBA_ASTC_10x6_Format:Su,RGBA_ASTC_10x8_Format:Mu,RGBA_ASTC_12x10_Format:Au,RGBA_ASTC_12x12_Format:Tu,RGBA_ASTC_4x4_Format:du,RGBA_ASTC_5x4_Format:pu,RGBA_ASTC_5x5_Format:mu,RGBA_ASTC_6x5_Format:gu,RGBA_ASTC_6x6_Format:_u,RGBA_ASTC_8x5_Format:vu,RGBA_ASTC_8x6_Format:yu,RGBA_ASTC_8x8_Format:xu,RGBA_BPTC_Format:dl,RGBA_ETC2_EAC_Format:fu,RGBA_PVRTC_2BPPV1_Format:uu,RGBA_PVRTC_4BPPV1_Format:cu,RGBA_S3TC_DXT1_Format:ul,RGBA_S3TC_DXT3_Format:hl,RGBA_S3TC_DXT5_Format:fl,RGB_BPTC_SIGNED_Format:wu,RGB_BPTC_UNSIGNED_Format:Cu,RGB_ETC1_Format:Gp,RGB_ETC2_Format:hu,RGB_PVRTC_2BPPV1_Format:lu,RGB_PVRTC_4BPPV1_Format:ou,RGB_S3TC_DXT1_Format:cl,RGFormat:Hp,RGIntegerFormat:eh,RawShaderMaterial:zm,Ray:cr,Raycaster:sM,Rec709Primaries:Na,RectAreaLight:tg,RedFormat:zp,RedIntegerFormat:Qu,ReinhardToneMapping:Pp,RenderTarget:lm,RepeatWrapping:ji,ReplaceStencilOp:e_,ReverseSubtractEquation:fp,RingGeometry:ec,SIGNED_RED_GREEN_RGTC2_Format:Lu,SIGNED_RED_RGTC1_Format:Ru,SRGBColorSpace:tn,SRGBTransfer:Ft,Scene:Gl,ShaderChunk:gt,ShaderLib:ui,ShaderMaterial:ai,ShadowMaterial:Bm,Shape:Qs,ShapeGeometry:tc,ShapePath:bM,ShapeUtils:Ai,ShortType:Op,Skeleton:$a,SkeletonHelper:cM,SkinnedMesh:fh,Source:js,Sphere:gi,SphereGeometry:to,Spherical:Hu,SphericalHarmonics3:ng,SplineCurve:yh,SpotLight:wh,SpotLightHelper:lM,Sprite:Em,SpriteMaterial:hh,SrcAlphaFactor:qu,SrcAlphaSaturateFactor:bp,SrcColorFactor:mp,StaticCopyUsage:v_,StaticDrawUsage:Oa,StaticReadUsage:m_,StereoCamera:OS,StreamCopyUsage:x_,StreamDrawUsage:p_,StreamReadUsage:__,StringKeyframeTrack:dr,SubtractEquation:hp,SubtractiveBlending:iu,TOUCH:Hs,TangentSpaceNormalMap:Ms,TetrahedronGeometry:nc,Texture:un,TextureLoader:Qm,TorusGeometry:ic,TorusKnotGeometry:sc,Triangle:Xn,TriangleFanDrawMode:$g,TriangleStripDrawMode:Kg,TrianglesDrawMode:Jg,TubeGeometry:rc,TwoPassDoubleSide:Xg,UVMapping:Il,Uint16BufferAttribute:ah,Uint32BufferAttribute:oh,Uint8BufferAttribute:e0,Uint8ClampedBufferAttribute:t0,Uniform:Uh,UniformsGroup:tM,UniformsLib:Pe,UniformsUtils:hm,UnsignedByteType:$i,UnsignedInt248Type:_s,UnsignedIntType:Zi,UnsignedShort4444Type:Ku,UnsignedShort5551Type:$u,UnsignedShortType:Ll,VSMShadowMap:Si,Vector2:pe,Vector3:D,Vector4:Nt,VectorKeyframeTrack:ir,VideoTexture:Gb,WebGL1Renderer:Sm,WebGL3DRenderTarget:z_,WebGLArrayRenderTarget:B_,WebGLCoordinateSystem:Ei,WebGLCubeRenderTarget:dm,WebGLMultipleRenderTargets:H_,WebGLRenderTarget:ii,WebGLRenderer:uh,WebGLUtils:ym,WebGPUCoordinateSystem:Fa,WireframeGeometry:km,WrapAroundEnding:La,ZeroCurvatureEnding:qs,ZeroFactor:dp,ZeroSlopeEnding:Ys,ZeroStencilOp:Qg,_SRGBAFormat:Ml,createCanvasElement:om,sRGBEncoding:Qi},Symbol.toStringTag,{value:"Module"})),MM=()=>sn("threlte-internal-context");function EM(s){let e;const t=s[9].default,n=Un(t,s,s[8],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,[r]){n&&n.p&&(!e||r&256)&&On(n,t,i,i[8],e?kn(t,i[8],r,null):Fn(i[8]),null)},i(i){e||(re(n,i),e=!0)},o(i){me(n,i),e=!1},d(i){n&&n.d(i)}}}const xd="threlte-disposable-object-context";function AM(s,e,t){let n,i,{$$slots:r={},$$scope:a}=e;const{collectDisposableObjects:o,addDisposableObjects:l,removeDisposableObjects:c}=MM();let{object:u=void 0}=e,h=u,{dispose:f=void 0}=e;const d=sn(xd);Dn(s,d,g=>t(7,i=g));const p=Yn(f??i??!0);Dn(s,p,g=>t(6,n=g)),qt(xd,p);let _=n?o(u):[];return l(_),cn(()=>{c(_)}),s.$$set=g=>{"object"in g&&t(2,u=g.object),"dispose"in g&&t(3,f=g.dispose),"$$scope"in g&&t(8,a=g.$$scope)},s.$$.update=()=>{s.$$.dirty&136&&p.set(f??i??!0),s.$$.dirty&116&&u!==h&&(c(_),t(5,_=n?o(u):[]),l(_),t(4,h=u))},[d,p,u,f,h,_,n,i,a,r]}class TM extends Zt{constructor(e){super(),Jt(this,e,AM,EM,Ht,{object:2,dispose:3})}}function wM(s,e){const t=Yn(s);let n=s;const i=t.subscribe(o=>n=o);return cn(i),{...t,set:o=>{if((o==null?void 0:o.uuid)===(n==null?void 0:n.uuid))return;const l=n;t.set(o),e==null||e(o,l)},update:o=>{const l=o(n);if((l==null?void 0:l.uuid)===(n==null?void 0:n.uuid))return;const c=n;t.set(l),e==null||e(l,c)}}}const rs=()=>{const s=sn("threlte");if(s===void 0)throw new Error("No Threlte context found, are you using this hook inside of <Canvas>?");return s},hg=()=>sn("threlte-hierarchical-parent-context");function CM(s){let e;const t=s[8].default,n=Un(t,s,s[7],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,[r]){n&&n.p&&(!e||r&128)&&On(n,t,i,i[7],e?kn(t,i[7],r,null):Fn(i[7]),null)},i(i){e||(re(n,i),e=!0)},o(i){me(n,i),e=!1},d(i){n&&n.d(i)}}}const RM=()=>({onChildMount:sn("threlte-hierarchical-object-on-mount"),onChildDestroy:sn("threlte-hierarchical-object-on-destroy")});function IM(s,e,t){var m;let n,{$$slots:i={},$$scope:r}=e,{object:a=void 0}=e,{children:o=[]}=e,{onChildMount:l=void 0}=e;const c=y=>{o.push(y),t(1,o),l==null||l(y)};let{onChildDestroy:u=void 0}=e;const h=y=>{const v=o.findIndex(x=>x.uuid===y.uuid);v!==-1&&o.splice(v,1),t(1,o),u==null||u(y)},{invalidate:f}=rs(),d=hg();Dn(s,d,y=>t(6,n=y));let{parent:p=n}=e;const _=RM();a&&((m=_.onChildMount)==null||m.call(_,a),f("HierarchicalObject: object added"));const g=wM(a,(y,v)=>{var x,E;v&&((x=_.onChildDestroy)==null||x.call(_,v),f("HierarchicalObject: object added")),y&&((E=_.onChildMount)==null||E.call(_,y),f("HierarchicalObject: object removed"))});return cn(()=>{var y;a&&((y=_.onChildDestroy)==null||y.call(_,a),f("HierarchicalObject: object removed"))}),qt("threlte-hierarchical-object-on-mount",c),qt("threlte-hierarchical-object-on-destroy",h),qt("threlte-hierarchical-parent-context",g),s.$$set=y=>{"object"in y&&t(3,a=y.object),"children"in y&&t(1,o=y.children),"onChildMount"in y&&t(4,l=y.onChildMount),"onChildDestroy"in y&&t(5,u=y.onChildDestroy),"parent"in y&&t(2,p=y.parent),"$$scope"in y&&t(7,r=y.$$scope)},s.$$.update=()=>{s.$$.dirty&64&&t(2,p=n),s.$$.dirty&8&&g.set(a)},[d,o,p,a,l,u,n,r,i]}class LM extends Zt{constructor(e){super(),Jt(this,e,IM,CM,Ht,{object:3,children:1,onChildMount:4,onChildDestroy:5,parent:2})}}function PM(s){let e;const t=s[1].default,n=Un(t,s,s[4],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&16)&&On(n,t,i,i[4],e?kn(t,i[4],r,null):Fn(i[4]),null)},i(i){e||(re(n,i),e=!0)},o(i){me(n,i),e=!1},d(i){n&&n.d(i)}}}function DM(s){let e,t;return e=new LM({props:{object:s[0],onChildMount:s[2],onChildDestroy:s[3],$$slots:{default:[PM]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,[i]){const r={};i&1&&(r.object=n[0]),i&1&&(r.onChildMount=n[2]),i&1&&(r.onChildDestroy=n[3]),i&16&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function NM(s,e,t){let{$$slots:n={},$$scope:i}=e,{object:r}=e;const a=l=>r.add(l),o=l=>r.remove(l);return s.$$set=l=>{"object"in l&&t(0,r=l.object),"$$scope"in l&&t(4,i=l.$$scope)},[r,n,a,o,i]}class UM extends Zt{constructor(e){super(),Jt(this,e,NM,DM,Ht,{object:0})}}const fg=(s,e)=>{if(e.includes(".")){const t=e.split("."),n=t.pop();for(let i=0;i<t.length;i+=1)s=s[t[i]];return{target:s,key:n}}else return{target:s,key:e}},qc=Symbol("initialValueBeforeAttach"),OM=()=>{const{invalidate:s}=rs();let e=!1,t=qc,n,i,r;const a=(l,c,u)=>{if(o(),!u){const h=l;((h==null?void 0:h.isMaterial)||!1)&&(u="material"),((h==null?void 0:h.isBufferGeometry)||(h==null?void 0:h.isGeometry)||!1)&&(u="geometry")}if(u){if(typeof u=="function")n=u(c,l);else{const{target:h,key:f}=fg(c,u);t=h[f],h[f]=l,i=h,r=f}e=!0,s()}},o=()=>{e&&(n?(n(),n=void 0):i&&r&&t!==qc&&(i[r]=t,t=qc,i=void 0,r=void 0),e=!1,s())};return cn(()=>{o()}),{update:a}},FM=s=>s&&s.isCamera,dg=s=>s&&s.isOrthographicCamera,pg=s=>s&&s.isPerspectiveCamera,kM=s=>pg(s)||dg(s),BM=()=>{const{invalidate:s,size:e,camera:t}=rs();let n,i;cn(()=>{i==null||i()});const r=l=>{n&&(dg(n)?(n.left=l.width/-2,n.right=l.width/2,n.top=l.height/2,n.bottom=l.height/-2,n.updateProjectionMatrix(),n.updateMatrixWorld(),s()):pg(n)&&(n.aspect=l.width/l.height,n.updateProjectionMatrix(),n.updateMatrixWorld(),s()))};return{update:(l,c)=>{if(i==null||i(),c||!kM(l)){n=void 0;return}n=l,i=e.subscribe(r)},makeDefaultCamera:(l,c)=>{!FM(l)||!c||(t.set(l),s())}}},mg=()=>{const s=Ii(),e=(n,i)=>{const r=s.$$.callbacks[n];r&&r.forEach(a=>{a(i)})};return Object.defineProperty(e,"hasEventListener",{value:n=>!!s.$$.callbacks[n],enumerable:!0}),e},zM=()=>{const s=mg(),e=[];let t,n=!1;const i=()=>{e.forEach(o=>o()),e.length=0,s("create",{ref:t,cleanup:o=>{e.push(o)}})},r=a=>{t=a,n&&i()};return ar(()=>{i(),n=!0}),cn(()=>{e.forEach(a=>a())}),{updateRef:r}},bd=s=>!!(s!=null&&s.addEventListener),HM=()=>{const s=mg(),e=Ii(),t=f=>{f!=null&&f.type&&s(f.type,f)},n=(f,d)=>{bd(f)&&d.forEach(p=>{f.removeEventListener(p,t)})},i=(f,d)=>{bd(f)&&d.forEach(p=>{f.addEventListener(p,t)})};let r=[],a;const o=Yn([]),l=o.subscribe(f=>{n(a,r),i(a,f),r=f});cn(l);const c=Yn(),u=c.subscribe(f=>{n(a,r),i(f,r),a=f});return cn(u),cn(()=>{n(a,r)}),ar(()=>{o.set(Object.keys(e.$$.callbacks))}),{updateRef:f=>{c.set(f)}}},GM=s=>{const t=sn("threlte-plugin-context");if(!t)return;const n=Object.values(t).map(c=>c(s)).filter(Boolean),i=n.flatMap(c=>c.pluginProps??[]);let r=[];return cn(()=>{r.forEach(c=>c())}),{updateRef:c=>{r.forEach(u=>u()),r=[],n.forEach(u=>{var f;const h=(f=u.onRefChange)==null?void 0:f.call(u,c);h&&r.push(h)})},updateProps:c=>{n.forEach(u=>{var h;(h=u.onPropsChange)==null||h.call(u,c)})},updateRestProps:c=>{n.forEach(u=>{var h;(h=u.onRestPropsChange)==null||h.call(u,c)})},pluginsProps:i}},VM=new Set(["$$scope","$$slots","type","args","attach","instance"]),WM=new Set(["fov","aspect","near","far","left","right","top","bottom","zoom"]),XM=s=>typeof s=="string"||typeof s=="number"||typeof s=="boolean"||typeof s>"u"||s===null,qM=()=>{const{invalidate:s}=rs(),e=new Map,t=(i,r,a,o)=>{var u,h;if(XM(a)){const f=e.get(r);if(f&&f.instance===i&&f.value===a)return;e.set(r,{instance:i,value:a})}const{key:l,target:c}=fg(i,r);if(!Array.isArray(a)&&typeof a=="number"&&typeof((u=c[l])==null?void 0:u.setScalar)=="function")c[l].setScalar(a);else if(typeof((h=c[l])==null?void 0:h.set)=="function")Array.isArray(a)?c[l].set(...a):c[l].set(a);else{if(c[l]=a,o.manualCamera)return;WM.has(l)&&(c.isPerspectiveCamera||c.isOrthographicCamera)&&c.updateProjectionMatrix()}};return{updateProps:(i,r,a)=>{var o;for(const l in r)!VM.has(l)&&!((o=a.pluginsProps)!=null&&o.includes(l))&&t(i,l,r[l],a),s()}}},YM=s=>({ref:s&2}),Sd=s=>({ref:s[1]}),jM=s=>({ref:s&2}),Md=s=>({ref:s[1]});function Ed(s){let e,t;return e=new TM({props:{object:s[1],dispose:s[0]}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.object=n[1]),i&1&&(r.dispose=n[0]),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function ZM(s){let e;const t=s[12].default,n=Un(t,s,s[13],Sd);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&8194)&&On(n,t,i,i[13],e?kn(t,i[13],r,YM):Fn(i[13]),Sd)},i(i){e||(re(n,i),e=!0)},o(i){me(n,i),e=!1},d(i){n&&n.d(i)}}}function JM(s){let e,t;return e=new UM({props:{object:s[1],$$slots:{default:[KM]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.object=n[1]),i&8194&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function KM(s){let e;const t=s[12].default,n=Un(t,s,s[13],Md);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&8194)&&On(n,t,i,i[13],e?kn(t,i[13],r,jM):Fn(i[13]),Md)},i(i){e||(re(n,i),e=!0)},o(i){me(n,i),e=!1},d(i){n&&n.d(i)}}}function $M(s){let e=s[4](s[1]),t,n,i,r,a,o,l=e&&Ed(s);const c=[JM,ZM],u=[];function h(f,d){return d&2&&(n=null),n==null&&(n=!!f[3](f[1])),n?0:1}return i=h(s,-1),r=u[i]=c[i](s),{c(){l&&l.c(),t=Bt(),r.c(),a=dt()},l(f){l&&l.l(f),t=zt(f),r.l(f),a=dt()},m(f,d){l&&l.m(f,d),Ge(f,t,d),u[i].m(f,d),Ge(f,a,d),o=!0},p(f,[d]){d&2&&(e=f[4](f[1])),e?l?(l.p(f,d),d&2&&re(l,1)):(l=Ed(f),l.c(),re(l,1),l.m(t.parentNode,t)):l&&(pn(),me(l,1,1,()=>{l=null}),mn());let p=i;i=h(f,d),i===p?u[i].p(f,d):(pn(),me(u[p],1,1,()=>{u[p]=null}),mn(),r=u[i],r?r.p(f,d):(r=u[i]=c[i](f),r.c()),re(r,1),r.m(a.parentNode,a))},i(f){o||(re(l),re(r),o=!0)},o(f){me(l),me(r),o=!1},d(f){f&&(Ue(t),Ue(a)),l&&l.d(f),u[i].d(f)}}}function QM(s,e,t){const n=["is","args","attach","manual","makeDefault","dispose","ref"];let i=bn(e,n),r,{$$slots:a={},$$scope:o}=e,{is:l}=e,{args:c=void 0}=e,{attach:u=void 0}=e,{manual:h=void 0}=e,{makeDefault:f=void 0}=e,{dispose:d=void 0}=e;const p=sn("threlte-hierarchical-parent-context");Dn(s,p,H=>t(11,r=H));const _=H=>typeof H=="function"&&/^\s*class\s+/.test(H.toString()),g=H=>Array.isArray(H),m=zM();let y=_(l)&&g(c)?new l(...c):_(l)?new l:l;m.updateRef(y);let v=!1;const x=()=>{if(!v){v=!0;return}t(1,y=_(l)&&g(c)?new l(...c):_(l)?new l:l),m.updateRef(y)};let{ref:E=y}=e;const w=Yn(y);qt("threlte-hierarchical-parent-context",w);const A=GM({ref:y,props:e}),P=(A==null?void 0:A.pluginsProps)??[],M=qM(),R=BM(),V=OM(),j=HM(),ne=H=>!!H.isObject3D,F=H=>H.dispose!==void 0;return s.$$set=H=>{t(27,e=Ut(Ut({},e),Ti(H))),t(26,i=bn(e,n)),"is"in H&&t(6,l=H.is),"args"in H&&t(7,c=H.args),"attach"in H&&t(8,u=H.attach),"manual"in H&&t(9,h=H.manual),"makeDefault"in H&&t(10,f=H.makeDefault),"dispose"in H&&t(0,d=H.dispose),"ref"in H&&t(5,E=H.ref),"$$scope"in H&&t(13,o=H.$$scope)},s.$$.update=()=>{s.$$.dirty&192&&x(),s.$$.dirty&2&&t(5,E=y),s.$$.dirty&2&&w.set(y),M.updateProps(y,i,{manualCamera:h,pluginsProps:P}),s.$$.dirty&514&&R.update(y,h),s.$$.dirty&1026&&R.makeDefaultCamera(y,f),s.$$.dirty&2306&&V.update(y,r,u),s.$$.dirty&2&&j.updateRef(y),s.$$.dirty&2&&(A==null||A.updateRef(y)),A==null||A.updateProps(e),A==null||A.updateRestProps(i)},e=Ti(e),[d,y,p,ne,F,E,l,c,u,h,f,r,a,o]}let Oh=class extends Zt{constructor(e){super(),Jt(this,e,QM,$M,Ht,{is:6,args:7,attach:8,manual:9,makeDefault:10,dispose:0,ref:5})}};const Wi=(s,e)=>{const t=Wu(s,r=>r);let n;const i=t.subscribe(async r=>{n&&n();const a=await e(r);a&&(n=a)});cn(()=>{i(),n&&n()})},bi=s=>{const e=Yn(s),t={set:n=>{t.current=n,e.set(n)},subscribe:e.subscribe,update:n=>{const i=n(t.current);t.current=i,e.set(i)},current:s};return t},Fh=typeof window<"u",eE=()=>{const s=bi({width:0,height:0});if(!Fh)return{parentSize:s,parentSizeAction:()=>{}};const e={childList:!0,subtree:!1,attributes:!1};let t;const n=o=>{i.disconnect(),r.disconnect(),i.observe(o),r.observe(o,e)},i=new ResizeObserver(([o])=>{const{width:l,height:c}=o.contentRect;l===s.current.width&&c===s.current.height||s.set({width:l,height:c})}),r=new MutationObserver(o=>{for(const l of o)for(const c of l.removedNodes)if(t===c&&t.parentElement){n(t.parentElement);return}}),a=o=>{t=o;const l=t.parentElement;l&&(s.set({width:l.clientWidth,height:l.clientHeight}),n(l))};return cn(()=>{i.disconnect(),r.disconnect()}),{parentSize:s,parentSizeAction:a}},_l=Number.parseInt(Ya.replace("dev","")),Ad=(s,e)=>{if(s===e)return!0;if(!s||!e)return!1;const t=s.length;if(e.length!==t)return!1;for(let n=0;n<t;n++)if(s[n]!==e[n])return!1;return!0},tE=()=>{qt("threlte-cache",[])},nE=()=>{const s=sn("threlte-cache");if(!s)throw new Error("No cache found. The cache can only be used in a child component to <Canvas>.");return{remember:(n,i)=>{for(const a of s)if(Ad(i,a.keys)){if(a.error)throw a.error;if(a.promise)return a.promise}const r={promise:n(),keys:i,value:void 0};return s.push(r),r.promise.catch(a=>{r.error=a}),r.promise},clear:n=>{const i=s.findIndex(r=>Ad(n,r.keys));i!==-1&&s.splice(i,1)}}},gg=s=>s.userData,iE=()=>{const s=new fn(75,0,.1,1e3);return gg(s).threlteDefaultCamera=!0,s.position.z=5,s.lookAt(0,0,0),s},sE=s=>{Wi(s.size,e=>{gg(Ng(s.camera)).threlteDefaultCamera&&s.camera.update(t=>{const n=t;return n.aspect=e.width/e.height,n.updateProjectionMatrix(),s.invalidate("Default camera: aspect ratio changed"),n})})},rE=s=>{const e={debugFrameloop:s.debugFrameloop,frame:0,frameInvalidated:!0,invalidations:{},manualFrameHandlers:new Set,autoFrameHandlers:new Set,allFrameHandlers:new Set,allFrameHandlersNeedSortCheck:!1,renderHandlers:new Set,renderHandlersNeedSortCheck:!1,advance:!1,dispose:async(a=!1)=>{await Ug(),!(!e.shouldDispose&&!a)&&(e.disposableObjects.forEach((o,l)=>{var c;(o===0||a)&&((c=l==null?void 0:l.dispose)==null||c.call(l),e.disposableObjects.delete(l))}),e.shouldDispose=!1)},collectDisposableObjects:(a,o)=>{const l=o??[];return a&&(a!=null&&a.dispose&&typeof a.dispose=="function"&&a.type!=="Scene"&&l.push(a),Object.entries(a).forEach(([c,u])=>{if(c==="parent"||c==="children"||typeof u!="object")return;const h=u;h!=null&&h.dispose&&e.collectDisposableObjects(h,l)})),l},addDisposableObjects:a=>{a.forEach(o=>{const l=e.disposableObjects.get(o);l?e.disposableObjects.set(o,l+1):e.disposableObjects.set(o,1)})},removeDisposableObjects:a=>{a.length!==0&&(a.forEach(o=>{const l=e.disposableObjects.get(o);l&&l>0&&e.disposableObjects.set(o,l-1)}),e.shouldDispose=!0)},disposableObjects:new Map,shouldDispose:!1},t={size:Wu([s.userSize,s.parentSize],([a,o])=>a||o),clock:new Ph,camera:bi(iE()),scene:new Gl,renderer:void 0,invalidate:a=>{e.frameInvalidated=!0,e.debugFrameloop&&a&&(e.invalidations[a]=e.invalidations[a]?e.invalidations[a]+1:1)},advance:()=>{e.advance=!0},colorSpace:bi(s.colorSpace),toneMapping:bi(s.toneMapping),dpr:bi(s.dpr),useLegacyLights:bi(s.useLegacyLights),shadows:bi(s.shadows),colorManagementEnabled:bi(s.colorManagementEnabled),frameloop:bi(s.frameloop)},n=bi({});return qt("threlte",t),qt("threlte-internal-context",e),qt("threlte-user-context",n),{ctx:t,internalCtx:e,getCtx:()=>t,getInternalCtx:()=>e}},aE=(s,e,t)=>{if(e.allFrameHandlers.size!==0){if(e.allFrameHandlersNeedSortCheck){const n=Array.from(e.allFrameHandlers);if(n.some(r=>r.order)){const r=n.sort((a,o)=>(a.order??0)>(o.order??0)?1:-1);e.allFrameHandlers.clear(),r.forEach(a=>e.allFrameHandlers.add(a))}e.allFrameHandlersNeedSortCheck=!1}if(e.debugFrameloop){let n=0;e.autoFrameHandlers.forEach(i=>{i.debugFrameloopMessage?e.invalidations[i.debugFrameloopMessage]=i.debugFrameloopMessage in e.invalidations?e.invalidations[i.debugFrameloopMessage]+1:1:++n}),n>0&&(e.invalidations.useFrame=e.autoFrameHandlers.size)}e.allFrameHandlers.forEach(n=>n.fn(s,t))}},oE=(s,e,t)=>{if(e.renderHandlers.size!==0){if(e.renderHandlersNeedSortCheck){const n=Array.from(e.renderHandlers);if(n.some(r=>r.order)){const r=n.sort((a,o)=>(a.order??0)>(o.order??0)?1:-1);e.renderHandlers.clear(),r.forEach(a=>e.renderHandlers.add(a))}e.renderHandlersNeedSortCheck=!1}e.renderHandlers.forEach(n=>n.fn(s,t))}},lE=s=>{s.debugFrameloop&&(s.frame+=1,console.log(`frame: ${s.frame}${Object.keys(s.invalidations).length>0?", requested by ↴":""}`),Object.keys(s.invalidations).length>0&&console.table(s.invalidations),s.invalidations={})},cE=(s,e)=>s.frameloop.current==="always"||s.frameloop.current==="demand"&&(e.frameInvalidated||e.autoFrameHandlers.size>0)||s.frameloop.current==="never"&&e.advance,uE=(s,e)=>{s.renderer.setAnimationLoop(()=>{e.dispose();const t=s.clock.getDelta();aE(s,e,t),cE(s,e)&&(e.renderHandlers.size>0?oE(s,e,t):s.camera.current&&s.renderer.render(s.scene,s.camera.current),lE(e),e.frameInvalidated=!1,e.advance=!1)})},hE={srgb:Qi,"srgb-linear":Pa,"":Pa},fE=s=>s.outputColorSpace!==void 0,dE=s=>{const e=Yn(void 0),t=(n,i)=>{s.renderer=new uh({powerPreference:"high-performance",canvas:n,antialias:!0,alpha:!0,...i}),e.set(s.renderer)};return Wi([s.colorManagementEnabled],([n])=>{_l>=150?It.enabled=n:It.legacyMode=!n}),Wi([e,s.colorSpace],([n,i])=>{if(n)if(fE(n))n.outputColorSpace=i;else{const r=hE[i];r?n.outputEncoding=r:console.warn("No encoding found for colorSpace",i)}}),Wi([e,s.dpr],([n,i])=>{n==null||n.setPixelRatio(i)}),Wi([e,s.size],([n,i])=>{var r;(r=n==null?void 0:n.xr)!=null&&r.isPresenting||n==null||n.setSize(i.width,i.height)}),Wi([e,s.shadows],([n,i])=>{n&&(n.shadowMap.enabled=!!i,i&&i!==!0?n.shadowMap.type=i:i===!0&&(n.shadowMap.type=Rl))}),Wi([e,s.toneMapping],([n,i])=>{n&&(n.toneMapping=i)}),Wi([e,s.useLegacyLights],([n,i])=>{n&&(_l>=150&&i?n.useLegacyLights=i:_l<150&&(n.physicallyCorrectLights=!i))}),{createRenderer:t}};function Td(s){let e,t;return e=new Oh({props:{is:s[0].ctx.scene,$$slots:{default:[pE]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&1&&(r.is=n[0].ctx.scene),i&131072&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function pE(s){let e;const t=s[15].default,n=Un(t,s,s[17],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&131072)&&On(n,t,i,i[17],e?kn(t,i[17],r,null):Fn(i[17]),null)},i(i){e||(re(n,i),e=!0)},o(i){me(n,i),e=!1},d(i){n&&n.d(i)}}}function mE(s){let e,t,n,i,r=s[2]&&Td(s);return{c(){e=bs("canvas"),r&&r.c(),this.h()},l(a){e=Ss(a,"CANVAS",{class:!0});var o=ss(e);r&&r.l(o),o.forEach(Ue),this.h()},h(){Cl(e,"class","svelte-o3oskp")},m(a,o){Ge(a,e,o),r&&r.m(e,null),s[16](e),t=!0,n||(i=di(s[3].call(null,e)),n=!0)},p(a,[o]){a[2]?r?(r.p(a,o),o&4&&re(r,1)):(r=Td(a),r.c(),re(r,1),r.m(e,null)):r&&(pn(),me(r,1,1,()=>{r=null}),mn())},i(a){t||(re(r),t=!0)},o(a){me(r),t=!1},d(a){a&&Ue(e),r&&r.d(),s[16](null),n=!1,i()}}}const wd=new Set;function gE(s,e,t){let{$$slots:n={},$$scope:i}=e,{colorManagementEnabled:r=!0}=e,{colorSpace:a="srgb"}=e,{debugFrameloop:o=!1}=e,{dpr:l=Fh?window.devicePixelRatio:1}=e,{frameloop:c="demand"}=e,{rendererParameters:u=void 0}=e,{shadows:h=Rl}=e,{size:f=void 0}=e,{toneMapping:d=ju}=e,{useLegacyLights:p=!(_l>=155)}=e,_,g=!1;const m=Yn(f),{parentSize:y,parentSizeAction:v}=eE(),x=rE({colorManagementEnabled:r,colorSpace:a,debugFrameloop:o,dpr:l,frameloop:c,parentSize:y,shadows:h,toneMapping:d,useLegacyLights:p,userSize:m});tE();const E=x.ctx;sE(E),wd.add(E.invalidate),cn(()=>{wd.delete(E.invalidate)});const{createRenderer:w}=dE(E);ar(()=>{w(_,u),uE(x.ctx,x.internalCtx),t(2,g=!0)}),cn(()=>{var P;x.internalCtx.dispose(!0),(P=x.ctx.renderer)==null||P.dispose()});function A(P){fi[P?"unshift":"push"](()=>{_=P,t(1,_)})}return s.$$set=P=>{"colorManagementEnabled"in P&&t(4,r=P.colorManagementEnabled),"colorSpace"in P&&t(5,a=P.colorSpace),"debugFrameloop"in P&&t(6,o=P.debugFrameloop),"dpr"in P&&t(7,l=P.dpr),"frameloop"in P&&t(8,c=P.frameloop),"rendererParameters"in P&&t(9,u=P.rendererParameters),"shadows"in P&&t(10,h=P.shadows),"size"in P&&t(11,f=P.size),"toneMapping"in P&&t(12,d=P.toneMapping),"useLegacyLights"in P&&t(13,p=P.useLegacyLights),"$$scope"in P&&t(17,i=P.$$scope)},s.$$.update=()=>{s.$$.dirty&2048&&m.set(f),s.$$.dirty&64&&t(0,x.internalCtx.debugFrameloop=o,x),s.$$.dirty&33&&x.ctx.colorSpace.set(a),s.$$.dirty&129&&x.ctx.dpr.set(l),s.$$.dirty&257&&x.ctx.frameloop.set(c),s.$$.dirty&1025&&x.ctx.shadows.set(h),s.$$.dirty&4097&&x.ctx.toneMapping.set(d)},[x,_,g,v,r,a,o,l,c,u,h,f,d,p,E,n,A,i]}class _E extends Zt{constructor(e){super(),Jt(this,e,gE,mE,Ht,{colorManagementEnabled:4,colorSpace:5,debugFrameloop:6,dpr:7,frameloop:8,rendererParameters:9,shadows:10,size:11,toneMapping:12,useLegacyLights:13,ctx:14})}get ctx(){return this.$$.ctx[14]}}const vE={},yE=(s,e)=>{const t=vE[e]||SM[e];if(!t)throw new Error(`No Three.js module found for ${e}. Did you forget to extend the catalogue?`);return{...s,props:{...s.props,is:t}}},xE=s=>new Proxy(class{},{construct(e,[t]){const n=t;return new Oh(yE(n,s))}}),jt=new Proxy(class{},{construct(s,[e]){const t=e;return new Oh(t)},get(s,e){return xE(e)}}),_g=(s,e)=>{if(!Fh)return{start:()=>{},stop:()=>{},started:Gg(!1)};const t=sn("threlte-internal-context");if(t===void 0)throw new Error("No Threlte context found, are you using this hook inside of <Canvas>?");const n=(e==null?void 0:e.invalidate)??!0,i={fn:s,order:e==null?void 0:e.order,debugFrameloopMessage:e==null?void 0:e.debugFrameloopMessage,invalidate:n},r=Yn(!1),a=()=>{n?t.autoFrameHandlers.delete(i):t.manualFrameHandlers.delete(i),t.allFrameHandlers.delete(i),r.set(!1)},o=()=>{n?t.autoFrameHandlers.add(i):t.manualFrameHandlers.add(i),t.allFrameHandlers.add(i),t.allFrameHandlersNeedSortCheck=!0,r.set(!0)};return((e==null?void 0:e.autostart)??!0)&&o(),cn(()=>{a()}),{start:o,stop:a,started:{subscribe:r.subscribe}}};function bE(s,e,t){const n=sn("threlte-user-context");if(!n)throw new Error("No user context store found, did you invoke this function outside of your main <Canvas> component?");return s?s&&!e?Wu(n,i=>i[s]):(n.update(i=>{if(s in i){if(!t||t.existing==="skip")return i;if(t.existing==="merge")return Object.assign(i[s],e),i}return i[s]=e,i}),n.current[s]):{subscribe:n.subscribe}}const Yc=s=>{const e=Yn(void 0),t=Yn(void 0);return s.then(n=>{e.set(n)}).catch(n=>{console.error("Error in asyncWritable:",n.message),t.set(n)}),Object.assign(Object.assign(s,e),{error:t,promise:s})},vg=(s,e={})=>{var o;const{remember:t,clear:n}=nE(),i=new s;return(o=e.extend)==null||o.call(e,i),{load:(l,c)=>{const u=async h=>{var f;if("loadAsync"in i){const d=await i.loadAsync(h,c==null?void 0:c.onProgress);return((f=c==null?void 0:c.transform)==null?void 0:f.call(c,d))??d}else return new Promise((d,p)=>{i.load(h,_=>{var g;return d(((g=c==null?void 0:c.transform)==null?void 0:g.call(c,_))??_)},_=>{var g;return(g=c==null?void 0:c.onProgress)==null?void 0:g.call(c,_)},p)})};if(Array.isArray(l)){const h=l.map(d=>t(()=>u(d),[s,d]));return Yc(Promise.all(h))}else if(typeof l=="string"){const h=t(()=>u(l),[s,l]);return Yc(h)}else{const h=Object.values(l).map(d=>t(()=>u(d),[s,d]));return Yc(Promise.all(h).then(d=>Object.fromEntries(Object.entries(l).map(([p],_)=>[p,d[_]]))))}},clear:l=>{Array.isArray(l)?l.forEach(c=>{n([s,c])}):typeof l=="string"?n([s,l]):Object.entries(l).forEach(([c,u])=>{n([s,c,u])})},loader:i}},yg=()=>{const s=Ii(),e=Yn(void 0);return Wi(e,t=>{t&&Object.entries(s.$$.callbacks).forEach(n=>{const[i,r]=n;i in t.$$.callbacks&&Array.isArray(t.$$.callbacks[i])?t.$$.callbacks[i].push(...r):t.$$.callbacks[i]=r})}),e};new D;new D;new D;const SE={name:"HorizontalBlurShader",uniforms:{tDiffuse:{value:null},h:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float h;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;

			gl_FragColor = sum;

		}`},ME={name:"VerticalBlurShader",uniforms:{tDiffuse:{value:null},v:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float v;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;

			gl_FragColor = sum;

		}`},Bs=s=>{let e=!1;const t=Yn(s());return{...t,memoize:(...i)=>{if(!e){e=!0;return}t.set(s())}}},EE=s=>({ref:s[1]&1024}),Cd=s=>({ref:s[41]});function AE(s){let e,t,n,i,r;e=new jt.Mesh({props:{"scale.y":-1,"rotation.x":-Math.PI/2,material:s[10],geometry:s[0]}}),n=new jt({props:{is:s[9],manual:!0}});const a=s[27].default,o=Un(a,s,s[29],Cd);return{c(){Ve(e.$$.fragment),t=Bt(),Ve(n.$$.fragment),i=Bt(),o&&o.c()},l(l){Je(e.$$.fragment,l),t=zt(l),Je(n.$$.fragment,l),i=zt(l),o&&o.l(l)},m(l,c){We(e,l,c),Ge(l,t,c),We(n,l,c),Ge(l,i,c),o&&o.m(l,c),r=!0},p(l,c){const u={};c[0]&1&&(u.geometry=l[0]),e.$set(u),o&&o.p&&(!r||c[0]&536870912|c[1]&1024)&&On(o,a,l,l[29],r?kn(a,l[29],c,EE):Fn(l[29]),Cd)},i(l){r||(re(e.$$.fragment,l),re(n.$$.fragment,l),re(o,l),r=!0)},o(l){me(e.$$.fragment,l),me(n.$$.fragment,l),me(o,l),r=!1},d(l){l&&(Ue(t),Ue(i)),Xe(e,l),Xe(n,l),o&&o.d(l)}}}function TE(s){let e,t;return e=new jt.Group({props:{"rotation.x":Math.PI/2,$$slots:{default:[AE]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i[0]&536870913|i[1]&1024&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function wE(s){let e,t;const n=[s[12]];let i={$$slots:{default:[TE,({ref:r})=>({41:r}),({ref:r})=>[0,r?1024:0]]},$$scope:{ctx:s}};for(let r=0;r<n.length;r+=1)i=Ut(i,n[r]);return e=new jt.Group({props:i}),s[28](e),{c(){Ve(e.$$.fragment)},l(r){Je(e.$$.fragment,r)},m(r,a){We(e,r,a),t=!0},p(r,a){const o=a[0]&4096?ni(n,[en(r[12])]):{};a[0]&536870913|a[1]&1024&&(o.$$scope={dirty:a,ctx:r}),e.$set(o)},i(r){t||(re(e.$$.fragment,r),t=!0)},o(r){me(e.$$.fragment,r),t=!1},d(r){s[28](null),Xe(e,r)}}}function CE(s,e,t){const n=["opacity","width","height","blur","far","smooth","resolution","frames","scale","color","depthWrite","refresh"];let i=bn(e,n),r,a,o,l,c,u,h,f,{$$slots:d={},$$scope:p}=e,{opacity:_=1}=e,{width:g=1}=e,{height:m=1}=e,{blur:y=1}=e,{far:v=10}=e,{smooth:x=!0}=e,{resolution:E=512}=e,{frames:w=1/0}=e,{scale:A=10}=e,{color:P="#000000"}=e,{depthWrite:M=!1}=e;const{scene:R,renderer:V}=rs(),j=Bs(()=>g*(Array.isArray(A)?A[0]:A||1));Dn(s,j,ge=>t(26,h=ge));const ne=Bs(()=>m*(Array.isArray(A)?A[1]:A||1));Dn(s,ne,ge=>t(25,u=ge));const F=Bs(()=>{const ge=new ii(E,E);return ge.texture.generateMipmaps=!1,"colorSpace"in ge.texture?ge.texture.colorSpace=V.outputColorSpace:ge.texture.encoding=V.outputEncoding,ge});Dn(s,F,ge=>t(36,l=ge));const H=Bs(()=>{const ge=new ii(E,E);return ge.texture.generateMipmaps=!1,ge});Dn(s,H,ge=>t(35,o=ge));const B=Bs(()=>new ta(h,u).rotateX(Math.PI/2));Dn(s,B,ge=>t(0,a=ge));const q=Bs(()=>new dn(a));Dn(s,q,ge=>t(37,c=ge));const ee=Bs(()=>{const ge=new Bl({depthTest:!1,depthWrite:!1});return ge.onBeforeCompile=et=>{et.uniforms={...et.uniforms,uColor:{value:new Oe(P).convertSRGBToLinear()}},et.fragmentShader=`uniform vec3 uColor;
`+et.fragmentShader,et.fragmentShader=et.fragmentShader.replace("vec4( vec3( 1.0 - fragCoordZ ), opacity );","vec4( uColor, ( 1.0 - fragCoordZ ) * 1.0 );"),et.fragmentShader=et.fragmentShader.replace("vec4(vec3(1.0-fragCoordZ),opacity);","vec4(uColor,(1.0-fragCoordZ)*1.0);")},ge});Dn(s,ee,ge=>t(34,r=ge));const Z=new ai({...SE,depthTest:!1}),ie=new ai({...ME,depthTest:!1}),G=new na(-h/2,h/2,u/2,-u/2,0,v);G.updateProjectionMatrix();const Y=new pi({map:l.texture,transparent:!0,opacity:_,depthWrite:M}),ce=ge=>{const et=c;et.visible=!0,et.material=Z,Z.uniforms.tDiffuse.value=l.texture,Z.uniforms.h.value=ge*1/256,V.setRenderTarget(o),V.render(et,G),et.material=ie,ie.uniforms.tDiffuse.value=o.texture,ie.uniforms.v.value=ge*1/256,V.setRenderTarget(l),V.render(et,G),et.visible=!1},ae=()=>{const ge=R.background;R.background=null;const et=R.overrideMaterial;R.overrideMaterial=r;const Ke=V.getClearAlpha();V.setClearAlpha(0),V.setRenderTarget(l),V.render(R,G),R.overrideMaterial=et,ce(y),x&&ce(y*.4),V.setRenderTarget(null),R.background=ge,V.setClearAlpha(Ke)},ue=()=>{ae()};let he=0;_g(()=>{(w===1/0||he<w)&&(ae(),he+=1)}),cn(()=>{l.dispose(),o.dispose(),a.dispose(),r.dispose(),Z.dispose(),ie.dispose(),Y.dispose()});const ye=yg();Dn(s,ye,ge=>t(1,f=ge));function we(ge){fi[ge?"unshift":"push"](()=>{f=ge,ye.set(f)})}return s.$$set=ge=>{e=Ut(Ut({},e),Ti(ge)),t(12,i=bn(e,n)),"opacity"in ge&&t(13,_=ge.opacity),"width"in ge&&t(14,g=ge.width),"height"in ge&&t(15,m=ge.height),"blur"in ge&&t(16,y=ge.blur),"far"in ge&&t(17,v=ge.far),"smooth"in ge&&t(18,x=ge.smooth),"resolution"in ge&&t(19,E=ge.resolution),"frames"in ge&&t(20,w=ge.frames),"scale"in ge&&t(21,A=ge.scale),"color"in ge&&t(22,P=ge.color),"depthWrite"in ge&&t(23,M=ge.depthWrite),"$$scope"in ge&&t(29,p=ge.$$scope)},s.$$.update=()=>{s.$$.dirty[0]&2113536&&j.memoize([g,A]),s.$$.dirty[0]&2129920&&ne.memoize(m,A),s.$$.dirty[0]&524288&&F.memoize(E),s.$$.dirty[0]&524288&&H.memoize(E),s.$$.dirty[0]&100663296&&B.memoize(h,u),s.$$.dirty[0]&1&&q.memoize(a),s.$$.dirty[0]&4194304&&ee.memoize(P)},[a,f,j,ne,F,H,B,q,ee,G,Y,ye,i,_,g,m,y,v,x,E,w,A,P,M,ue,u,h,d,we,p]}class RE extends Zt{constructor(e){super(),Jt(this,e,CE,wE,Ht,{opacity:13,width:14,height:15,blur:16,far:17,smooth:18,resolution:19,frames:20,scale:21,color:22,depthWrite:23,refresh:24},null,[-1,-1])}get refresh(){return this.$$.ctx[24]}}const IE=()=>bE("threlte-controls",{orbitControls:Yn(void 0)}),Rd={type:"change"},jc={type:"start"},Id={type:"end"},sl=new cr,Ld=new Xi,LE=Math.cos(70*Ws.DEG2RAD);let PE=class extends Li{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new D,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:zs.ROTATE,MIDDLE:zs.DOLLY,RIGHT:zs.PAN},this.touches={ONE:Hs.ROTATE,TWO:Hs.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(U){U.addEventListener("keydown",C),this._domElementKeyEvents=U},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",C),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Rd),n.update(),r=i.NONE},this.update=function(){const U=new D,ve=new xn().setFromUnitVectors(e.up,new D(0,1,0)),_e=ve.clone().invert(),ot=new D,nt=new xn,rt=new D,Ze=2*Math.PI;return function(Ce=null){const Te=n.object.position;U.copy(Te).sub(n.target),U.applyQuaternion(ve),o.setFromVector3(U),n.autoRotate&&r===i.NONE&&V(M(Ce)),n.enableDamping?(o.theta+=l.theta*n.dampingFactor,o.phi+=l.phi*n.dampingFactor):(o.theta+=l.theta,o.phi+=l.phi);let De=n.minAzimuthAngle,Re=n.maxAzimuthAngle;isFinite(De)&&isFinite(Re)&&(De<-Math.PI?De+=Ze:De>Math.PI&&(De-=Ze),Re<-Math.PI?Re+=Ze:Re>Math.PI&&(Re-=Ze),De<=Re?o.theta=Math.max(De,Math.min(Re,o.theta)):o.theta=o.theta>(De+Re)/2?Math.max(De,o.theta):Math.min(Re,o.theta)),o.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,o.phi)),o.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),n.zoomToCursor&&w||n.object.isOrthographicCamera?o.radius=Z(o.radius):o.radius=Z(o.radius*c),U.setFromSpherical(o),U.applyQuaternion(_e),Te.copy(n.target).add(U),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0));let Se=!1;if(n.zoomToCursor&&w){let je=null;if(n.object.isPerspectiveCamera){const ut=U.length();je=Z(ut*c);const Kt=ut-je;n.object.position.addScaledVector(x,Kt),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const ut=new D(E.x,E.y,0);ut.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/c)),n.object.updateProjectionMatrix(),Se=!0;const Kt=new D(E.x,E.y,0);Kt.unproject(n.object),n.object.position.sub(Kt).add(ut),n.object.updateMatrixWorld(),je=U.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;je!==null&&(this.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(je).add(n.object.position):(sl.origin.copy(n.object.position),sl.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(sl.direction))<LE?e.lookAt(n.target):(Ld.setFromNormalAndCoplanarPoint(n.object.up,n.target),sl.intersectPlane(Ld,n.target))))}else n.object.isOrthographicCamera&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/c)),n.object.updateProjectionMatrix(),Se=!0);return c=1,w=!1,Se||ot.distanceToSquared(n.object.position)>a||8*(1-nt.dot(n.object.quaternion))>a||rt.distanceToSquared(n.target)>0?(n.dispatchEvent(Rd),ot.copy(n.object.position),nt.copy(n.object.quaternion),rt.copy(n.target),Se=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",be),n.domElement.removeEventListener("pointerdown",Ne),n.domElement.removeEventListener("pointercancel",tt),n.domElement.removeEventListener("wheel",O),n.domElement.removeEventListener("pointermove",Fe),n.domElement.removeEventListener("pointerup",tt),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",C),n._domElementKeyEvents=null)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const a=1e-6,o=new Hu,l=new Hu;let c=1;const u=new D,h=new pe,f=new pe,d=new pe,p=new pe,_=new pe,g=new pe,m=new pe,y=new pe,v=new pe,x=new D,E=new pe;let w=!1;const A=[],P={};function M(U){return U!==null?2*Math.PI/60*n.autoRotateSpeed*U:2*Math.PI/60/60*n.autoRotateSpeed}function R(){return Math.pow(.95,n.zoomSpeed)}function V(U){l.theta-=U}function j(U){l.phi-=U}const ne=function(){const U=new D;return function(_e,ot){U.setFromMatrixColumn(ot,0),U.multiplyScalar(-_e),u.add(U)}}(),F=function(){const U=new D;return function(_e,ot){n.screenSpacePanning===!0?U.setFromMatrixColumn(ot,1):(U.setFromMatrixColumn(ot,0),U.crossVectors(n.object.up,U)),U.multiplyScalar(_e),u.add(U)}}(),H=function(){const U=new D;return function(_e,ot){const nt=n.domElement;if(n.object.isPerspectiveCamera){const rt=n.object.position;U.copy(rt).sub(n.target);let Ze=U.length();Ze*=Math.tan(n.object.fov/2*Math.PI/180),ne(2*_e*Ze/nt.clientHeight,n.object.matrix),F(2*ot*Ze/nt.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(ne(_e*(n.object.right-n.object.left)/n.object.zoom/nt.clientWidth,n.object.matrix),F(ot*(n.object.top-n.object.bottom)/n.object.zoom/nt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function B(U){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?c/=U:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function q(U){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?c*=U:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function ee(U){if(!n.zoomToCursor)return;w=!0;const ve=n.domElement.getBoundingClientRect(),_e=U.clientX-ve.left,ot=U.clientY-ve.top,nt=ve.width,rt=ve.height;E.x=_e/nt*2-1,E.y=-(ot/rt)*2+1,x.set(E.x,E.y,1).unproject(n.object).sub(n.object.position).normalize()}function Z(U){return Math.max(n.minDistance,Math.min(n.maxDistance,U))}function ie(U){h.set(U.clientX,U.clientY)}function G(U){ee(U),m.set(U.clientX,U.clientY)}function Y(U){p.set(U.clientX,U.clientY)}function ce(U){f.set(U.clientX,U.clientY),d.subVectors(f,h).multiplyScalar(n.rotateSpeed);const ve=n.domElement;V(2*Math.PI*d.x/ve.clientHeight),j(2*Math.PI*d.y/ve.clientHeight),h.copy(f),n.update()}function ae(U){y.set(U.clientX,U.clientY),v.subVectors(y,m),v.y>0?B(R()):v.y<0&&q(R()),m.copy(y),n.update()}function ue(U){_.set(U.clientX,U.clientY),g.subVectors(_,p).multiplyScalar(n.panSpeed),H(g.x,g.y),p.copy(_),n.update()}function he(U){ee(U),U.deltaY<0?q(R()):U.deltaY>0&&B(R()),n.update()}function ye(U){let ve=!1;switch(U.code){case n.keys.UP:U.ctrlKey||U.metaKey||U.shiftKey?j(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):H(0,n.keyPanSpeed),ve=!0;break;case n.keys.BOTTOM:U.ctrlKey||U.metaKey||U.shiftKey?j(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):H(0,-n.keyPanSpeed),ve=!0;break;case n.keys.LEFT:U.ctrlKey||U.metaKey||U.shiftKey?V(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):H(n.keyPanSpeed,0),ve=!0;break;case n.keys.RIGHT:U.ctrlKey||U.metaKey||U.shiftKey?V(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):H(-n.keyPanSpeed,0),ve=!0;break}ve&&(U.preventDefault(),n.update())}function we(){if(A.length===1)h.set(A[0].pageX,A[0].pageY);else{const U=.5*(A[0].pageX+A[1].pageX),ve=.5*(A[0].pageY+A[1].pageY);h.set(U,ve)}}function ge(){if(A.length===1)p.set(A[0].pageX,A[0].pageY);else{const U=.5*(A[0].pageX+A[1].pageX),ve=.5*(A[0].pageY+A[1].pageY);p.set(U,ve)}}function et(){const U=A[0].pageX-A[1].pageX,ve=A[0].pageY-A[1].pageY,_e=Math.sqrt(U*U+ve*ve);m.set(0,_e)}function Ke(){n.enableZoom&&et(),n.enablePan&&ge()}function k(){n.enableZoom&&et(),n.enableRotate&&we()}function xe(U){if(A.length==1)f.set(U.pageX,U.pageY);else{const _e=se(U),ot=.5*(U.pageX+_e.x),nt=.5*(U.pageY+_e.y);f.set(ot,nt)}d.subVectors(f,h).multiplyScalar(n.rotateSpeed);const ve=n.domElement;V(2*Math.PI*d.x/ve.clientHeight),j(2*Math.PI*d.y/ve.clientHeight),h.copy(f)}function de(U){if(A.length===1)_.set(U.pageX,U.pageY);else{const ve=se(U),_e=.5*(U.pageX+ve.x),ot=.5*(U.pageY+ve.y);_.set(_e,ot)}g.subVectors(_,p).multiplyScalar(n.panSpeed),H(g.x,g.y),p.copy(_)}function X(U){const ve=se(U),_e=U.pageX-ve.x,ot=U.pageY-ve.y,nt=Math.sqrt(_e*_e+ot*ot);y.set(0,nt),v.set(0,Math.pow(y.y/m.y,n.zoomSpeed)),B(v.y),m.copy(y)}function Q(U){n.enableZoom&&X(U),n.enablePan&&de(U)}function Le(U){n.enableZoom&&X(U),n.enableRotate&&xe(U)}function Ne(U){n.enabled!==!1&&(A.length===0&&(n.domElement.setPointerCapture(U.pointerId),n.domElement.addEventListener("pointermove",Fe),n.domElement.addEventListener("pointerup",tt)),Me(U),U.pointerType==="touch"?K(U):mt(U))}function Fe(U){n.enabled!==!1&&(U.pointerType==="touch"?Ae(U):Lt(U))}function tt(U){qe(U),A.length===0&&(n.domElement.releasePointerCapture(U.pointerId),n.domElement.removeEventListener("pointermove",Fe),n.domElement.removeEventListener("pointerup",tt)),n.dispatchEvent(Id),r=i.NONE}function mt(U){let ve;switch(U.button){case 0:ve=n.mouseButtons.LEFT;break;case 1:ve=n.mouseButtons.MIDDLE;break;case 2:ve=n.mouseButtons.RIGHT;break;default:ve=-1}switch(ve){case zs.DOLLY:if(n.enableZoom===!1)return;G(U),r=i.DOLLY;break;case zs.ROTATE:if(U.ctrlKey||U.metaKey||U.shiftKey){if(n.enablePan===!1)return;Y(U),r=i.PAN}else{if(n.enableRotate===!1)return;ie(U),r=i.ROTATE}break;case zs.PAN:if(U.ctrlKey||U.metaKey||U.shiftKey){if(n.enableRotate===!1)return;ie(U),r=i.ROTATE}else{if(n.enablePan===!1)return;Y(U),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(jc)}function Lt(U){switch(r){case i.ROTATE:if(n.enableRotate===!1)return;ce(U);break;case i.DOLLY:if(n.enableZoom===!1)return;ae(U);break;case i.PAN:if(n.enablePan===!1)return;ue(U);break}}function O(U){n.enabled===!1||n.enableZoom===!1||r!==i.NONE||(U.preventDefault(),n.dispatchEvent(jc),he(U),n.dispatchEvent(Id))}function C(U){n.enabled===!1||n.enablePan===!1||ye(U)}function K(U){switch(W(U),A.length){case 1:switch(n.touches.ONE){case Hs.ROTATE:if(n.enableRotate===!1)return;we(),r=i.TOUCH_ROTATE;break;case Hs.PAN:if(n.enablePan===!1)return;ge(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case Hs.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ke(),r=i.TOUCH_DOLLY_PAN;break;case Hs.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;k(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(jc)}function Ae(U){switch(W(U),r){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;xe(U),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;de(U),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Q(U),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Le(U),n.update();break;default:r=i.NONE}}function be(U){n.enabled!==!1&&U.preventDefault()}function Me(U){A.push(U)}function qe(U){delete P[U.pointerId];for(let ve=0;ve<A.length;ve++)if(A[ve].pointerId==U.pointerId){A.splice(ve,1);return}}function W(U){let ve=P[U.pointerId];ve===void 0&&(ve=new pe,P[U.pointerId]=ve),ve.set(U.pageX,U.pageY)}function se(U){const ve=U.pointerId===A[0].pointerId?A[1]:A[0];return P[ve.pointerId]}n.domElement.addEventListener("contextmenu",be),n.domElement.addEventListener("pointerdown",Ne),n.domElement.addEventListener("pointercancel",tt),n.domElement.addEventListener("wheel",O,{passive:!1}),this.update()}};const DE=s=>({ref:s&1}),Pd=s=>({ref:s[0]});function NE(s){let e;const t=s[7].default,n=Un(t,s,s[10],Pd);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&1025)&&On(n,t,i,i[10],e?kn(t,i[10],r,DE):Fn(i[10]),Pd)},i(i){e||(re(n,i),e=!0)},o(i){me(n,i),e=!1},d(i){n&&n.d(i)}}}function UE(s){let e,t;const n=[{is:s[0]},s[6]];let i={$$slots:{default:[NE,({ref:r})=>({0:r}),({ref:r})=>r?1:0]},$$scope:{ctx:s}};for(let r=0;r<n.length;r+=1)i=Ut(i,n[r]);return e=new jt({props:i}),s[8](e),e.$on("change",s[3]),e.$on("create",s[9]),{c(){Ve(e.$$.fragment)},l(r){Je(e.$$.fragment,r)},m(r,a){We(e,r,a),t=!0},p(r,[a]){const o=a&65?ni(n,[a&1&&{is:r[0]},a&64&&en(r[6])]):{};a&1025&&(o.$$scope={dirty:a,ctx:r}),e.$set(o)},i(r){t||(re(e.$$.fragment,r),t=!0)},o(r){me(e.$$.fragment,r),t=!1},d(r){s[8](null),Xe(e,r)}}}function OE(s,e,t){const n=["ref"];let i=bn(e,n),r,a,{$$slots:o={},$$scope:l}=e;const c=hg();Dn(s,c,x=>t(11,r=x));const u=x=>x.isCamera,{renderer:h,invalidate:f}=rs();if(!u(r))throw new Error("Parent missing: <OrbitControls> need to be a child of a <Camera>");const d=new PE(r,h.domElement),{start:p,stop:_}=_g(()=>d.update(),{autostart:!1,debugFrameloopMessage:"OrbitControls: updating controls"}),g=yg();Dn(s,g,x=>t(1,a=x));const{orbitControls:m}=IE();function y(x){fi[x?"unshift":"push"](()=>{a=x,g.set(a)})}const v=({ref:x,cleanup:E})=>{m.set(x),x.update(),E(()=>{m.set(void 0)})};return s.$$set=x=>{e=Ut(Ut({},e),Ti(x)),t(6,i=bn(e,n)),"$$scope"in x&&t(10,l=x.$$scope)},s.$$.update=()=>{i.autoRotate||i.enableDamping?p():_()},[d,a,c,f,g,m,i,o,y,v,l]}class FE extends Zt{constructor(e){super(),Jt(this,e,OE,UE,Ht,{ref:0})}get ref(){return this.$$.ctx[0]}}new at;new at;new dn;`${gt.logdepthbuf_pars_vertex}${gt.fog_pars_vertex}${gt.logdepthbuf_vertex}${gt.fog_vertex}`;function zr(s,e="xyz"){var t;if(s.hasAttribute(e)){const n=(t=s.getAttribute(e))==null?void 0:t.split(" ");if(n){const i=[];for(const r of n)i.push(parseFloat(r));return i}}}function kE(s){return s?new Oe(s[0],s[1],s[2]):new Oe("white")}class Dd extends $m{constructor(e){super(e)}parse(e){function t(B){switch(B.image_type){case f:case _:if(B.colormap_length>256||B.colormap_size!==24||B.colormap_type!==1)throw new Error("THREE.TGALoader: Invalid type colormap data for indexed type.");break;case d:case p:case g:case m:if(B.colormap_type)throw new Error("THREE.TGALoader: Invalid type colormap data for colormap type.");break;case h:throw new Error("THREE.TGALoader: No data.");default:throw new Error("THREE.TGALoader: Invalid type "+B.image_type)}if(B.width<=0||B.height<=0)throw new Error("THREE.TGALoader: Invalid image size.");if(B.pixel_size!==8&&B.pixel_size!==16&&B.pixel_size!==24&&B.pixel_size!==32)throw new Error("THREE.TGALoader: Invalid pixel size "+B.pixel_size)}function n(B,q,ee,Z,ie){let G,Y;const ce=ee.pixel_size>>3,ae=ee.width*ee.height*ce;if(q&&(Y=ie.subarray(Z,Z+=ee.colormap_length*(ee.colormap_size>>3))),B){G=new Uint8Array(ae);let ue,he,ye,we=0;const ge=new Uint8Array(ce);for(;we<ae;)if(ue=ie[Z++],he=(ue&127)+1,ue&128){for(ye=0;ye<ce;++ye)ge[ye]=ie[Z++];for(ye=0;ye<he;++ye)G.set(ge,we+ye*ce);we+=ce*he}else{for(he*=ce,ye=0;ye<he;++ye)G[we+ye]=ie[Z++];we+=he}}else G=ie.subarray(Z,Z+=q?ee.width*ee.height:ae);return{pixel_data:G,palettes:Y}}function i(B,q,ee,Z,ie,G,Y,ce,ae){const ue=ae;let he,ye=0,we,ge;const et=R.width;for(ge=q;ge!==Z;ge+=ee)for(we=ie;we!==Y;we+=G,ye++)he=ce[ye],B[(we+et*ge)*4+3]=255,B[(we+et*ge)*4+2]=ue[he*3+0],B[(we+et*ge)*4+1]=ue[he*3+1],B[(we+et*ge)*4+0]=ue[he*3+2];return B}function r(B,q,ee,Z,ie,G,Y,ce){let ae,ue=0,he,ye;const we=R.width;for(ye=q;ye!==Z;ye+=ee)for(he=ie;he!==Y;he+=G,ue+=2)ae=ce[ue+0]+(ce[ue+1]<<8),B[(he+we*ye)*4+0]=(ae&31744)>>7,B[(he+we*ye)*4+1]=(ae&992)>>2,B[(he+we*ye)*4+2]=(ae&31)<<3,B[(he+we*ye)*4+3]=ae&32768?0:255;return B}function a(B,q,ee,Z,ie,G,Y,ce){let ae=0,ue,he;const ye=R.width;for(he=q;he!==Z;he+=ee)for(ue=ie;ue!==Y;ue+=G,ae+=3)B[(ue+ye*he)*4+3]=255,B[(ue+ye*he)*4+2]=ce[ae+0],B[(ue+ye*he)*4+1]=ce[ae+1],B[(ue+ye*he)*4+0]=ce[ae+2];return B}function o(B,q,ee,Z,ie,G,Y,ce){let ae=0,ue,he;const ye=R.width;for(he=q;he!==Z;he+=ee)for(ue=ie;ue!==Y;ue+=G,ae+=4)B[(ue+ye*he)*4+2]=ce[ae+0],B[(ue+ye*he)*4+1]=ce[ae+1],B[(ue+ye*he)*4+0]=ce[ae+2],B[(ue+ye*he)*4+3]=ce[ae+3];return B}function l(B,q,ee,Z,ie,G,Y,ce){let ae,ue=0,he,ye;const we=R.width;for(ye=q;ye!==Z;ye+=ee)for(he=ie;he!==Y;he+=G,ue++)ae=ce[ue],B[(he+we*ye)*4+0]=ae,B[(he+we*ye)*4+1]=ae,B[(he+we*ye)*4+2]=ae,B[(he+we*ye)*4+3]=255;return B}function c(B,q,ee,Z,ie,G,Y,ce){let ae=0,ue,he;const ye=R.width;for(he=q;he!==Z;he+=ee)for(ue=ie;ue!==Y;ue+=G,ae+=2)B[(ue+ye*he)*4+0]=ce[ae+0],B[(ue+ye*he)*4+1]=ce[ae+0],B[(ue+ye*he)*4+2]=ce[ae+0],B[(ue+ye*he)*4+3]=ce[ae+1];return B}function u(B,q,ee,Z,ie){let G,Y,ce,ae,ue,he;switch((R.flags&y)>>v){default:case w:G=0,ce=1,ue=q,Y=0,ae=1,he=ee;break;case x:G=0,ce=1,ue=q,Y=ee-1,ae=-1,he=-1;break;case A:G=q-1,ce=-1,ue=-1,Y=0,ae=1,he=ee;break;case E:G=q-1,ce=-1,ue=-1,Y=ee-1,ae=-1,he=-1;break}if(ne)switch(R.pixel_size){case 8:l(B,Y,ae,he,G,ce,ue,Z);break;case 16:c(B,Y,ae,he,G,ce,ue,Z);break;default:throw new Error("THREE.TGALoader: Format not supported.")}else switch(R.pixel_size){case 8:i(B,Y,ae,he,G,ce,ue,Z,ie);break;case 16:r(B,Y,ae,he,G,ce,ue,Z);break;case 24:a(B,Y,ae,he,G,ce,ue,Z);break;case 32:o(B,Y,ae,he,G,ce,ue,Z);break;default:throw new Error("THREE.TGALoader: Format not supported.")}return B}const h=0,f=1,d=2,p=3,_=9,g=10,m=11,y=48,v=4,x=0,E=1,w=2,A=3;if(e.length<19)throw new Error("THREE.TGALoader: Not enough data to contain header.");let P=0;const M=new Uint8Array(e),R={id_length:M[P++],colormap_type:M[P++],image_type:M[P++],colormap_index:M[P++]|M[P++]<<8,colormap_length:M[P++]|M[P++]<<8,colormap_size:M[P++],origin:[M[P++]|M[P++]<<8,M[P++]|M[P++]<<8],width:M[P++]|M[P++]<<8,height:M[P++]|M[P++]<<8,pixel_size:M[P++],flags:M[P++]};if(t(R),R.id_length+P>e.length)throw new Error("THREE.TGALoader: No data.");P+=R.id_length;let V=!1,j=!1,ne=!1;switch(R.image_type){case _:V=!0,j=!0;break;case f:j=!0;break;case g:V=!0;break;case d:break;case m:V=!0,ne=!0;break;case p:ne=!0;break}const F=new Uint8Array(R.width*R.height*4),H=n(V,j,R,P,M);return u(F,R.width,R.height,H.pixel_data,H.palettes),{data:F,width:R.width,height:R.height,flipY:!0,generateMipmaps:!0,minFilter:ns}}}class Nd extends An{constructor(e){super(e)}load(e,t,n,i){const r=this,a=r.path===""?wl.extractUrlBase(e):r.path,o=new mi(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(l){try{t(r.parse(l,a))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e,t){function n(S,b){const I=[],T=S.childNodes;for(let L=0,te=T.length;L<te;L++){const fe=T[L];fe.nodeName===b&&I.push(fe)}return I}function i(S){if(S.length===0)return[];const b=S.trim().split(/\s+/),I=new Array(b.length);for(let T=0,L=b.length;T<L;T++)I[T]=b[T];return I}function r(S){if(S.length===0)return[];const b=S.trim().split(/\s+/),I=new Array(b.length);for(let T=0,L=b.length;T<L;T++)I[T]=parseFloat(b[T]);return I}function a(S){if(S.length===0)return[];const b=S.trim().split(/\s+/),I=new Array(b.length);for(let T=0,L=b.length;T<L;T++)I[T]=parseInt(b[T]);return I}function o(S){return S.substring(1)}function l(){return"three_default_"+Cg++}function c(S){return Object.keys(S).length===0}function u(S){return{unit:h(n(S,"unit")[0]),upAxis:f(n(S,"up_axis")[0])}}function h(S){return S!==void 0&&S.hasAttribute("meter")===!0?parseFloat(S.getAttribute("meter")):1}function f(S){return S!==void 0?S.textContent:"Y_UP"}function d(S,b,I,T){const L=n(S,b)[0];if(L!==void 0){const te=n(L,I);for(let fe=0;fe<te.length;fe++)T(te[fe])}}function p(S,b){for(const I in S){const T=S[I];T.build=b(S[I])}}function _(S,b){return S.build!==void 0||(S.build=b(S)),S.build}function g(S){const b={sources:{},samplers:{},channels:{}};let I=!1;for(let T=0,L=S.childNodes.length;T<L;T++){const te=S.childNodes[T];if(te.nodeType!==1)continue;let fe;switch(te.nodeName){case"source":fe=te.getAttribute("id"),b.sources[fe]=Te(te);break;case"sampler":fe=te.getAttribute("id"),b.samplers[fe]=m(te);break;case"channel":fe=te.getAttribute("target"),b.channels[fe]=y(te);break;case"animation":g(te),I=!0;break;default:console.log(te)}}I===!1&&(ft.animations[S.getAttribute("id")||Ws.generateUUID()]=b)}function m(S){const b={inputs:{}};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"input":const te=o(L.getAttribute("source")),fe=L.getAttribute("semantic");b.inputs[fe]=te;break}}return b}function y(S){const b={};let T=S.getAttribute("target").split("/");const L=T.shift();let te=T.shift();const fe=te.indexOf("(")!==-1,ze=te.indexOf(".")!==-1;if(ze)T=te.split("."),te=T.shift(),b.member=T.shift();else if(fe){const Ie=te.split("(");te=Ie.shift();for(let ke=0;ke<Ie.length;ke++)Ie[ke]=parseInt(Ie[ke].replace(/\)/,""));b.indices=Ie}return b.id=L,b.sid=te,b.arraySyntax=fe,b.memberSyntax=ze,b.sampler=o(S.getAttribute("source")),b}function v(S){const b=[],I=S.channels,T=S.samplers,L=S.sources;for(const te in I)if(I.hasOwnProperty(te)){const fe=I[te],ze=T[fe.sampler],Ie=ze.inputs.INPUT,ke=ze.inputs.OUTPUT,it=L[Ie],Ee=L[ke],Qe=E(fe,it,Ee);R(Qe,b)}return b}function x(S){return _(ft.animations[S],v)}function E(S,b,I){const T=ft.nodes[S.id],L=Ot(T.id),te=T.transforms[S.sid],fe=T.matrix.clone().transpose();let ze,Ie,ke,it,Ee,Qe;const Ye={};switch(te){case"matrix":for(ke=0,it=b.array.length;ke<it;ke++)if(ze=b.array[ke],Ie=ke*I.stride,Ye[ze]===void 0&&(Ye[ze]={}),S.arraySyntax===!0){const Xt=I.array[Ie],Dt=S.indices[0]+4*S.indices[1];Ye[ze][Dt]=Xt}else for(Ee=0,Qe=I.stride;Ee<Qe;Ee++)Ye[ze][Ee]=I.array[Ie+Ee];break;case"translate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',te);break;case"rotate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',te);break;case"scale":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',te);break}const ct=w(Ye,fe);return{name:L.uuid,keyframes:ct}}function w(S,b){const I=[];for(const L in S)I.push({time:parseFloat(L),value:S[L]});I.sort(T);for(let L=0;L<16;L++)V(I,L,b.elements[L]);return I;function T(L,te){return L.time-te.time}}const A=new D,P=new D,M=new xn;function R(S,b){const I=S.keyframes,T=S.name,L=[],te=[],fe=[],ze=[];for(let Ie=0,ke=I.length;Ie<ke;Ie++){const it=I[Ie],Ee=it.time,Qe=it.value;$e.fromArray(Qe).transpose(),$e.decompose(A,M,P),L.push(Ee),te.push(A.x,A.y,A.z),fe.push(M.x,M.y,M.z,M.w),ze.push(P.x,P.y,P.z)}return te.length>0&&b.push(new ir(T+".position",L,te)),fe.length>0&&b.push(new fr(T+".quaternion",L,fe)),ze.length>0&&b.push(new ir(T+".scale",L,ze)),b}function V(S,b,I){let T,L=!0,te,fe;for(te=0,fe=S.length;te<fe;te++)T=S[te],T.value[b]===void 0?T.value[b]=null:L=!1;if(L===!0)for(te=0,fe=S.length;te<fe;te++)T=S[te],T.value[b]=I;else j(S,b)}function j(S,b){let I,T;for(let L=0,te=S.length;L<te;L++){const fe=S[L];if(fe.value[b]===null){if(I=ne(S,L,b),T=F(S,L,b),I===null){fe.value[b]=T.value[b];continue}if(T===null){fe.value[b]=I.value[b];continue}H(fe,I,T,b)}}}function ne(S,b,I){for(;b>=0;){const T=S[b];if(T.value[I]!==null)return T;b--}return null}function F(S,b,I){for(;b<S.length;){const T=S[b];if(T.value[I]!==null)return T;b++}return null}function H(S,b,I,T){if(I.time-b.time===0){S.value[T]=b.value[T];return}S.value[T]=(S.time-b.time)*(I.value[T]-b.value[T])/(I.time-b.time)+b.value[T]}function B(S){const b={name:S.getAttribute("id")||"default",start:parseFloat(S.getAttribute("start")||0),end:parseFloat(S.getAttribute("end")||0),animations:[]};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"instance_animation":b.animations.push(o(L.getAttribute("url")));break}}ft.clips[S.getAttribute("id")]=b}function q(S){const b=[],I=S.name,T=S.end-S.start||-1,L=S.animations;for(let te=0,fe=L.length;te<fe;te++){const ze=x(L[te]);for(let Ie=0,ke=ze.length;Ie<ke;Ie++)b.push(ze[Ie])}return new sr(I,T,b)}function ee(S){return _(ft.clips[S],q)}function Z(S){const b={};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"skin":b.id=o(L.getAttribute("source")),b.skin=ie(L);break;case"morph":b.id=o(L.getAttribute("source")),console.warn("THREE.ColladaLoader: Morph target animation not supported yet.");break}}ft.controllers[S.getAttribute("id")]=b}function ie(S){const b={sources:{}};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"bind_shape_matrix":b.bindShapeMatrix=r(L.textContent);break;case"source":const te=L.getAttribute("id");b.sources[te]=Te(L);break;case"joints":b.joints=G(L);break;case"vertex_weights":b.vertexWeights=Y(L);break}}return b}function G(S){const b={inputs:{}};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"input":const te=L.getAttribute("semantic"),fe=o(L.getAttribute("source"));b.inputs[te]=fe;break}}return b}function Y(S){const b={inputs:{}};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"input":const te=L.getAttribute("semantic"),fe=o(L.getAttribute("source")),ze=parseInt(L.getAttribute("offset"));b.inputs[te]={id:fe,offset:ze};break;case"vcount":b.vcount=a(L.textContent);break;case"v":b.v=a(L.textContent);break}}return b}function ce(S){const b={id:S.id},I=ft.geometries[b.id];return S.skin!==void 0&&(b.skin=ae(S.skin),I.sources.skinIndices=b.skin.indices,I.sources.skinWeights=b.skin.weights),b}function ae(S){const I={joints:[],indices:{array:[],stride:4},weights:{array:[],stride:4}},T=S.sources,L=S.vertexWeights,te=L.vcount,fe=L.v,ze=L.inputs.JOINT.offset,Ie=L.inputs.WEIGHT.offset,ke=S.sources[S.joints.inputs.JOINT],it=S.sources[S.joints.inputs.INV_BIND_MATRIX],Ee=T[L.inputs.WEIGHT.id].array;let Qe=0,Ye,ct,st;for(Ye=0,st=te.length;Ye<st;Ye++){const Dt=te[Ye],wt=[];for(ct=0;ct<Dt;ct++){const Ct=fe[Qe+ze],Ui=fe[Qe+Ie],Gn=Ee[Ui];wt.push({index:Ct,weight:Gn}),Qe+=2}for(wt.sort(Xt),ct=0;ct<4;ct++){const Ct=wt[ct];Ct!==void 0?(I.indices.array.push(Ct.index),I.weights.array.push(Ct.weight)):(I.indices.array.push(0),I.weights.array.push(0))}}for(S.bindShapeMatrix?I.bindMatrix=new at().fromArray(S.bindShapeMatrix).transpose():I.bindMatrix=new at().identity(),Ye=0,st=ke.array.length;Ye<st;Ye++){const Dt=ke.array[Ye],wt=new at().fromArray(it.array,Ye*it.stride).transpose();I.joints.push({name:Dt,boneInverse:wt})}return I;function Xt(Dt,wt){return wt.weight-Dt.weight}}function ue(S){return _(ft.controllers[S],ce)}function he(S){const b={init_from:n(S,"init_from")[0].textContent};ft.images[S.getAttribute("id")]=b}function ye(S){return S.build!==void 0?S.build:S.init_from}function we(S){const b=ft.images[S];return b!==void 0?_(b,ye):(console.warn("THREE.ColladaLoader: Couldn't find image with ID:",S),null)}function ge(S){const b={};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"profile_COMMON":b.profile=et(L);break}}ft.effects[S.getAttribute("id")]=b}function et(S){const b={surfaces:{},samplers:{}};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"newparam":Ke(L,b);break;case"technique":b.technique=de(L);break;case"extra":b.extra=tt(L);break}}return b}function Ke(S,b){const I=S.getAttribute("sid");for(let T=0,L=S.childNodes.length;T<L;T++){const te=S.childNodes[T];if(te.nodeType===1)switch(te.nodeName){case"surface":b.surfaces[I]=k(te);break;case"sampler2D":b.samplers[I]=xe(te);break}}}function k(S){const b={};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"init_from":b.init_from=L.textContent;break}}return b}function xe(S){const b={};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"source":b.source=L.textContent;break}}return b}function de(S){const b={};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"constant":case"lambert":case"blinn":case"phong":b.type=L.nodeName,b.parameters=X(L);break;case"extra":b.extra=tt(L);break}}return b}function X(S){const b={};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"emission":case"diffuse":case"specular":case"bump":case"ambient":case"shininess":case"transparency":b[L.nodeName]=Q(L);break;case"transparent":b[L.nodeName]={opaque:L.hasAttribute("opaque")?L.getAttribute("opaque"):"A_ONE",data:Q(L)};break}}return b}function Q(S){const b={};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"color":b[L.nodeName]=r(L.textContent);break;case"float":b[L.nodeName]=parseFloat(L.textContent);break;case"texture":b[L.nodeName]={id:L.getAttribute("texture"),extra:Le(L)};break}}return b}function Le(S){const b={technique:{}};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"extra":Ne(L,b);break}}return b}function Ne(S,b){for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"technique":Fe(L,b);break}}}function Fe(S,b){for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"repeatU":case"repeatV":case"offsetU":case"offsetV":b.technique[L.nodeName]=parseFloat(L.textContent);break;case"wrapU":case"wrapV":L.textContent.toUpperCase()==="TRUE"?b.technique[L.nodeName]=1:L.textContent.toUpperCase()==="FALSE"?b.technique[L.nodeName]=0:b.technique[L.nodeName]=parseInt(L.textContent);break;case"bump":b[L.nodeName]=Lt(L);break}}}function tt(S){const b={};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"technique":b.technique=mt(L);break}}return b}function mt(S){const b={};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"double_sided":b[L.nodeName]=parseInt(L.textContent);break;case"bump":b[L.nodeName]=Lt(L);break}}return b}function Lt(S){const b={};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"texture":b[L.nodeName]={id:L.getAttribute("texture"),texcoord:L.getAttribute("texcoord"),extra:Le(L)};break}}return b}function O(S){return S}function C(S){return _(ft.effects[S],O)}function K(S){const b={name:S.getAttribute("name")};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"instance_effect":b.url=o(L.getAttribute("url"));break}}ft.materials[S.getAttribute("id")]=b}function Ae(S){let b,I=S.slice((S.lastIndexOf(".")-1>>>0)+2);switch(I=I.toLowerCase(),I){case"tga":b=fc;break;default:b=Gh}return b}function be(S){const b=C(S.url),I=b.profile.technique;let T;switch(I.type){case"phong":case"blinn":T=new Tl;break;case"lambert":T=new bh;break;default:T=new pi;break}T.name=S.name||"";function L(Ie,ke=null){const it=b.profile.samplers[Ie.id];let Ee=null;if(it!==void 0){const Qe=b.profile.surfaces[it.source];Ee=we(Qe.init_from)}else console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."),Ee=we(Ie.id);if(Ee!==null){const Qe=Ae(Ee);if(Qe!==void 0){const Ye=Qe.load(Ee),ct=Ie.extra;if(ct!==void 0&&ct.technique!==void 0&&c(ct.technique)===!1){const st=ct.technique;Ye.wrapS=st.wrapU?ji:yn,Ye.wrapT=st.wrapV?ji:yn,Ye.offset.set(st.offsetU||0,st.offsetV||0),Ye.repeat.set(st.repeatU||1,st.repeatV||1)}else Ye.wrapS=ji,Ye.wrapT=ji;return ke!==null&&(Ye.colorSpace=ke),Ye}else return console.warn("THREE.ColladaLoader: Loader for texture %s not found.",Ee),null}else return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:",Ie.id),null}const te=I.parameters;for(const Ie in te){const ke=te[Ie];switch(Ie){case"diffuse":ke.color&&T.color.fromArray(ke.color),ke.texture&&(T.map=L(ke.texture,tn));break;case"specular":ke.color&&T.specular&&T.specular.fromArray(ke.color),ke.texture&&(T.specularMap=L(ke.texture));break;case"bump":ke.texture&&(T.normalMap=L(ke.texture));break;case"ambient":ke.texture&&(T.lightMap=L(ke.texture,tn));break;case"shininess":ke.float&&T.shininess&&(T.shininess=ke.float);break;case"emission":ke.color&&T.emissive&&T.emissive.fromArray(ke.color),ke.texture&&(T.emissiveMap=L(ke.texture,tn));break}}T.color.convertSRGBToLinear(),T.specular&&T.specular.convertSRGBToLinear(),T.emissive&&T.emissive.convertSRGBToLinear();let fe=te.transparent,ze=te.transparency;if(ze===void 0&&fe&&(ze={float:1}),fe===void 0&&ze&&(fe={opaque:"A_ONE",data:{color:[1,1,1,1]}}),fe&&ze)if(fe.data.texture)T.transparent=!0;else{const Ie=fe.data.color;switch(fe.opaque){case"A_ONE":T.opacity=Ie[3]*ze.float;break;case"RGB_ZERO":T.opacity=1-Ie[0]*ze.float;break;case"A_ZERO":T.opacity=1-Ie[3]*ze.float;break;case"RGB_ONE":T.opacity=Ie[0]*ze.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',fe.opaque)}T.opacity<1&&(T.transparent=!0)}if(I.extra!==void 0&&I.extra.technique!==void 0){const Ie=I.extra.technique;for(const ke in Ie){const it=Ie[ke];switch(ke){case"double_sided":T.side=it===1?hi:Ci;break;case"bump":T.normalMap=L(it.texture),T.normalScale=new pe(1,1);break}}}return T}function Me(S){return _(ft.materials[S],be)}function qe(S){const b={name:S.getAttribute("name")};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"optics":b.optics=W(L);break}}ft.cameras[S.getAttribute("id")]=b}function W(S){for(let b=0;b<S.childNodes.length;b++){const I=S.childNodes[b];switch(I.nodeName){case"technique_common":return se(I)}}return{}}function se(S){const b={};for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];switch(T.nodeName){case"perspective":case"orthographic":b.technique=T.nodeName,b.parameters=U(T);break}}return b}function U(S){const b={};for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];switch(T.nodeName){case"xfov":case"yfov":case"xmag":case"ymag":case"znear":case"zfar":case"aspect_ratio":b[T.nodeName]=parseFloat(T.textContent);break}}return b}function ve(S){let b;switch(S.optics.technique){case"perspective":b=new fn(S.optics.parameters.yfov,S.optics.parameters.aspect_ratio,S.optics.parameters.znear,S.optics.parameters.zfar);break;case"orthographic":let I=S.optics.parameters.ymag,T=S.optics.parameters.xmag;const L=S.optics.parameters.aspect_ratio;T=T===void 0?I*L:T,I=I===void 0?T/L:I,T*=.5,I*=.5,b=new na(-T,T,I,-I,S.optics.parameters.znear,S.optics.parameters.zfar);break;default:b=new fn;break}return b.name=S.name||"",b}function _e(S){const b=ft.cameras[S];return b!==void 0?_(b,ve):(console.warn("THREE.ColladaLoader: Couldn't find camera with ID:",S),null)}function ot(S){let b={};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"technique_common":b=nt(L);break}}ft.lights[S.getAttribute("id")]=b}function nt(S){const b={};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"directional":case"point":case"spot":case"ambient":b.technique=L.nodeName,b.parameters=rt(L)}}return b}function rt(S){const b={};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"color":const te=r(L.textContent);b.color=new Oe().fromArray(te).convertSRGBToLinear();break;case"falloff_angle":b.falloffAngle=parseFloat(L.textContent);break;case"quadratic_attenuation":const fe=parseFloat(L.textContent);b.distance=fe?Math.sqrt(1/fe):0;break}}return b}function Ze(S){let b;switch(S.technique){case"directional":b=new Rh;break;case"point":b=new Ch;break;case"spot":b=new wh;break;case"ambient":b=new Ih;break}return S.parameters.color&&b.color.copy(S.parameters.color),S.parameters.distance&&(b.distance=S.parameters.distance),b}function z(S){const b=ft.lights[S];return b!==void 0?_(b,Ze):(console.warn("THREE.ColladaLoader: Couldn't find light with ID:",S),null)}function Ce(S){const b={name:S.getAttribute("name"),sources:{},vertices:{},primitives:[]},I=n(S,"mesh")[0];if(I!==void 0){for(let T=0;T<I.childNodes.length;T++){const L=I.childNodes[T];if(L.nodeType!==1)continue;const te=L.getAttribute("id");switch(L.nodeName){case"source":b.sources[te]=Te(L);break;case"vertices":b.vertices=De(L);break;case"polygons":console.warn("THREE.ColladaLoader: Unsupported primitive type: ",L.nodeName);break;case"lines":case"linestrips":case"polylist":case"triangles":b.primitives.push(Re(L));break;default:console.log(L)}}ft.geometries[S.getAttribute("id")]=b}}function Te(S){const b={array:[],stride:3};for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];if(T.nodeType===1)switch(T.nodeName){case"float_array":b.array=r(T.textContent);break;case"Name_array":b.array=i(T.textContent);break;case"technique_common":const L=n(T,"accessor")[0];L!==void 0&&(b.stride=parseInt(L.getAttribute("stride")));break}}return b}function De(S){const b={};for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];T.nodeType===1&&(b[T.getAttribute("semantic")]=o(T.getAttribute("source")))}return b}function Re(S){const b={type:S.nodeName,material:S.getAttribute("material"),count:parseInt(S.getAttribute("count")),inputs:{},stride:0,hasUV:!1};for(let I=0,T=S.childNodes.length;I<T;I++){const L=S.childNodes[I];if(L.nodeType===1)switch(L.nodeName){case"input":const te=o(L.getAttribute("source")),fe=L.getAttribute("semantic"),ze=parseInt(L.getAttribute("offset")),Ie=parseInt(L.getAttribute("set")),ke=Ie>0?fe+Ie:fe;b.inputs[ke]={id:te,offset:ze},b.stride=Math.max(b.stride,ze+1),fe==="TEXCOORD"&&(b.hasUV=!0);break;case"vcount":b.vcount=a(L.textContent);break;case"p":b.p=a(L.textContent);break}}return b}function Se(S){const b={};for(let I=0;I<S.length;I++){const T=S[I];b[T.type]===void 0&&(b[T.type]=[]),b[T.type].push(T)}return b}function je(S){let b=0;for(let I=0,T=S.length;I<T;I++)S[I].hasUV===!0&&b++;b>0&&b<S.length&&(S.uvsNeedsFix=!0)}function ut(S){const b={},I=S.sources,T=S.vertices,L=S.primitives;if(L.length===0)return{};const te=Se(L);for(const fe in te){const ze=te[fe];je(ze),b[fe]=Kt(ze,I,T)}return b}function Kt(S,b,I){const T={},L={array:[],stride:0},te={array:[],stride:0},fe={array:[],stride:0},ze={array:[],stride:0},Ie={array:[],stride:0},ke={array:[],stride:4},it={array:[],stride:4},Ee=new yt,Qe=[];let Ye=0;for(let ct=0;ct<S.length;ct++){const st=S[ct],Xt=st.inputs;let Dt=0;switch(st.type){case"lines":case"linestrips":Dt=st.count*2;break;case"triangles":Dt=st.count*3;break;case"polylist":for(let wt=0;wt<st.count;wt++){const Ct=st.vcount[wt];switch(Ct){case 3:Dt+=3;break;case 4:Dt+=6;break;default:Dt+=(Ct-2)*3;break}}break;default:console.warn("THREE.ColladaLoader: Unknow primitive type:",st.type)}Ee.addGroup(Ye,Dt,ct),Ye+=Dt,st.material&&Qe.push(st.material);for(const wt in Xt){const Ct=Xt[wt];switch(wt){case"VERTEX":for(const Ui in I){const Gn=I[Ui];switch(Ui){case"POSITION":const _r=L.array.length;if(Mt(st,b[Gn],Ct.offset,L.array),L.stride=b[Gn].stride,b.skinWeights&&b.skinIndices&&(Mt(st,b.skinIndices,Ct.offset,ke.array),Mt(st,b.skinWeights,Ct.offset,it.array)),st.hasUV===!1&&S.uvsNeedsFix===!0){const Rg=(L.array.length-_r)/L.stride;for(let Wh=0;Wh<Rg;Wh++)fe.array.push(0,0)}break;case"NORMAL":Mt(st,b[Gn],Ct.offset,te.array),te.stride=b[Gn].stride;break;case"COLOR":Mt(st,b[Gn],Ct.offset,Ie.array),Ie.stride=b[Gn].stride;break;case"TEXCOORD":Mt(st,b[Gn],Ct.offset,fe.array),fe.stride=b[Gn].stride;break;case"TEXCOORD1":Mt(st,b[Gn],Ct.offset,ze.array),fe.stride=b[Gn].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',Ui)}}break;case"NORMAL":Mt(st,b[Ct.id],Ct.offset,te.array),te.stride=b[Ct.id].stride;break;case"COLOR":Mt(st,b[Ct.id],Ct.offset,Ie.array,!0),Ie.stride=b[Ct.id].stride;break;case"TEXCOORD":Mt(st,b[Ct.id],Ct.offset,fe.array),fe.stride=b[Ct.id].stride;break;case"TEXCOORD1":Mt(st,b[Ct.id],Ct.offset,ze.array),ze.stride=b[Ct.id].stride;break}}}return L.array.length>0&&Ee.setAttribute("position",new Be(L.array,L.stride)),te.array.length>0&&Ee.setAttribute("normal",new Be(te.array,te.stride)),Ie.array.length>0&&Ee.setAttribute("color",new Be(Ie.array,Ie.stride)),fe.array.length>0&&Ee.setAttribute("uv",new Be(fe.array,fe.stride)),ze.array.length>0&&Ee.setAttribute("uv1",new Be(ze.array,ze.stride)),ke.array.length>0&&Ee.setAttribute("skinIndex",new Be(ke.array,ke.stride)),it.array.length>0&&Ee.setAttribute("skinWeight",new Be(it.array,it.stride)),T.data=Ee,T.type=S[0].type,T.materialKeys=Qe,T}function Mt(S,b,I,T,L=!1){const te=S.p,fe=S.stride,ze=S.vcount;function Ie(Ee){let Qe=te[Ee+I]*it;const Ye=Qe+it;for(;Qe<Ye;Qe++)T.push(ke[Qe]);if(L){const ct=T.length-it-1;ho.setRGB(T[ct+0],T[ct+1],T[ct+2]).convertSRGBToLinear(),T[ct+0]=ho.r,T[ct+1]=ho.g,T[ct+2]=ho.b}}const ke=b.array,it=b.stride;if(S.vcount!==void 0){let Ee=0;for(let Qe=0,Ye=ze.length;Qe<Ye;Qe++){const ct=ze[Qe];if(ct===4){const st=Ee+fe*0,Xt=Ee+fe*1,Dt=Ee+fe*2,wt=Ee+fe*3;Ie(st),Ie(Xt),Ie(wt),Ie(Xt),Ie(Dt),Ie(wt)}else if(ct===3){const st=Ee+fe*0,Xt=Ee+fe*1,Dt=Ee+fe*2;Ie(st),Ie(Xt),Ie(Dt)}else if(ct>4)for(let st=1,Xt=ct-2;st<=Xt;st++){const Dt=Ee+fe*0,wt=Ee+fe*st,Ct=Ee+fe*(st+1);Ie(Dt),Ie(wt),Ie(Ct)}Ee+=fe*ct}}else for(let Ee=0,Qe=te.length;Ee<Qe;Ee+=fe)Ie(Ee)}function Zn(S){return _(ft.geometries[S],ut)}function Sn(S){const b={name:S.getAttribute("name")||"",joints:{},links:[]};for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];if(T.nodeType===1)switch(T.nodeName){case"technique_common":cc(T,b);break}}ft.kinematicsModels[S.getAttribute("id")]=b}function ro(S){return S.build!==void 0?S.build:S}function ao(S){return _(ft.kinematicsModels[S],ro)}function cc(S,b){for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];if(T.nodeType===1)switch(T.nodeName){case"joint":b.joints[T.getAttribute("sid")]=pr(T);break;case"link":b.links.push(ws(T));break}}}function pr(S){let b;for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];if(T.nodeType===1)switch(T.nodeName){case"prismatic":case"revolute":b=oo(T);break}}return b}function oo(S){const b={sid:S.getAttribute("sid"),name:S.getAttribute("name")||"",axis:new D,limits:{min:0,max:0},type:S.nodeName,static:!1,zeroPosition:0,middlePosition:0};for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];if(T.nodeType===1)switch(T.nodeName){case"axis":const L=r(T.textContent);b.axis.fromArray(L);break;case"limits":const te=T.getElementsByTagName("max")[0],fe=T.getElementsByTagName("min")[0];b.limits.max=parseFloat(te.textContent),b.limits.min=parseFloat(fe.textContent);break}}return b.limits.min>=b.limits.max&&(b.static=!0),b.middlePosition=(b.limits.min+b.limits.max)/2,b}function ws(S){const b={sid:S.getAttribute("sid"),name:S.getAttribute("name")||"",attachments:[],transforms:[]};for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];if(T.nodeType===1)switch(T.nodeName){case"attachment_full":b.attachments.push(lo(T));break;case"matrix":case"translate":case"rotate":b.transforms.push(co(T));break}}return b}function lo(S){const b={joint:S.getAttribute("joint").split("/").pop(),transforms:[],links:[]};for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];if(T.nodeType===1)switch(T.nodeName){case"link":b.links.push(ws(T));break;case"matrix":case"translate":case"rotate":b.transforms.push(co(T));break}}return b}function co(S){const b={type:S.nodeName},I=r(S.textContent);switch(b.type){case"matrix":b.obj=new at,b.obj.fromArray(I).transpose();break;case"translate":b.obj=new D,b.obj.fromArray(I);break;case"rotate":b.obj=new D,b.obj.fromArray(I),b.angle=Ws.degToRad(I[3]);break}return b}function uc(S){const b={name:S.getAttribute("name")||"",rigidBodies:{}};for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];if(T.nodeType===1)switch(T.nodeName){case"rigid_body":b.rigidBodies[T.getAttribute("name")]={},hc(T,b.rigidBodies[T.getAttribute("name")]);break}}ft.physicsModels[S.getAttribute("id")]=b}function hc(S,b){for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];if(T.nodeType===1)switch(T.nodeName){case"technique_common":N(T,b);break}}}function N(S,b){for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];if(T.nodeType===1)switch(T.nodeName){case"inertia":b.inertia=r(T.textContent);break;case"mass":b.mass=r(T.textContent)[0];break}}}function J(S){const b={bindJointAxis:[]};for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];if(T.nodeType===1)switch(T.nodeName){case"bind_joint_axis":b.bindJointAxis.push(oe(T));break}}ft.kinematicsScenes[o(S.getAttribute("url"))]=b}function oe(S){const b={target:S.getAttribute("target").split("/").pop()};for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];if(T.nodeType===1)switch(T.nodeName){case"axis":const L=T.getElementsByTagName("param")[0];b.axis=L.textContent;const te=b.axis.split("inst_").pop().split("axis")[0];b.jointIndex=te.substring(0,te.length-1);break}}return b}function $(S){return S.build!==void 0?S.build:S}function le(S){return _(ft.kinematicsScenes[S],$)}function He(){const S=Object.keys(ft.kinematicsModels)[0],b=Object.keys(ft.kinematicsScenes)[0],I=Object.keys(ft.visualScenes)[0];if(S===void 0||b===void 0)return;const T=ao(S),L=le(b),te=gr(I),fe=L.bindJointAxis,ze={};for(let it=0,Ee=fe.length;it<Ee;it++){const Qe=fe[it],Ye=Wt.querySelector('[sid="'+Qe.target+'"]');if(Ye){const ct=Ye.parentElement;Ie(Qe.jointIndex,ct)}}function Ie(it,Ee){const Qe=Ee.getAttribute("name"),Ye=T.joints[it];te.traverse(function(ct){ct.name===Qe&&(ze[it]={object:ct,transforms:lt(Ee),joint:Ye,position:Ye.zeroPosition})})}const ke=new at;Vh={joints:T&&T.joints,getJointValue:function(it){const Ee=ze[it];if(Ee)return Ee.position;console.warn("THREE.ColladaLoader: Joint "+it+" doesn't exist.")},setJointValue:function(it,Ee){const Qe=ze[it];if(Qe){const Ye=Qe.joint;if(Ee>Ye.limits.max||Ee<Ye.limits.min)console.warn("THREE.ColladaLoader: Joint "+it+" value "+Ee+" outside of limits (min: "+Ye.limits.min+", max: "+Ye.limits.max+").");else if(Ye.static)console.warn("THREE.ColladaLoader: Joint "+it+" is static.");else{const ct=Qe.object,st=Ye.axis,Xt=Qe.transforms;$e.identity();for(let Dt=0;Dt<Xt.length;Dt++){const wt=Xt[Dt];if(wt.sid&&wt.sid.indexOf(it)!==-1)switch(Ye.type){case"revolute":$e.multiply(ke.makeRotationAxis(st,Ws.degToRad(Ee)));break;case"prismatic":$e.multiply(ke.makeTranslation(st.x*Ee,st.y*Ee,st.z*Ee));break;default:console.warn("THREE.ColladaLoader: Unknown joint type: "+Ye.type);break}else switch(wt.type){case"matrix":$e.multiply(wt.obj);break;case"translate":$e.multiply(ke.makeTranslation(wt.obj.x,wt.obj.y,wt.obj.z));break;case"scale":$e.scale(wt.obj);break;case"rotate":$e.multiply(ke.makeRotationAxis(wt.obj,wt.angle));break}}ct.matrix.copy($e),ct.matrix.decompose(ct.position,ct.quaternion,ct.scale),ze[it].position=Ee}}else console.log("THREE.ColladaLoader: "+it+" does not exist.")}}}function lt(S){const b=[],I=Wt.querySelector('[id="'+S.id+'"]');for(let T=0;T<I.childNodes.length;T++){const L=I.childNodes[T];if(L.nodeType!==1)continue;let te,fe;switch(L.nodeName){case"matrix":te=r(L.textContent);const ze=new at().fromArray(te).transpose();b.push({sid:L.getAttribute("sid"),type:L.nodeName,obj:ze});break;case"translate":case"scale":te=r(L.textContent),fe=new D().fromArray(te),b.push({sid:L.getAttribute("sid"),type:L.nodeName,obj:fe});break;case"rotate":te=r(L.textContent),fe=new D().fromArray(te);const Ie=Ws.degToRad(te[3]);b.push({sid:L.getAttribute("sid"),type:L.nodeName,obj:fe,angle:Ie});break}}return b}function pt(S){const b=S.getElementsByTagName("node");for(let I=0;I<b.length;I++){const T=b[I];T.hasAttribute("id")===!1&&T.setAttribute("id",l())}}const $e=new at,_t=new D;function ht(S){const b={name:S.getAttribute("name")||"",type:S.getAttribute("type"),id:S.getAttribute("id"),sid:S.getAttribute("sid"),matrix:new at,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}};for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];if(T.nodeType!==1)continue;let L;switch(T.nodeName){case"node":b.nodes.push(T.getAttribute("id")),ht(T);break;case"instance_camera":b.instanceCameras.push(o(T.getAttribute("url")));break;case"instance_controller":b.instanceControllers.push(vt(T));break;case"instance_light":b.instanceLights.push(o(T.getAttribute("url")));break;case"instance_geometry":b.instanceGeometries.push(vt(T));break;case"instance_node":b.instanceNodes.push(o(T.getAttribute("url")));break;case"matrix":L=r(T.textContent),b.matrix.multiply($e.fromArray(L).transpose()),b.transforms[T.getAttribute("sid")]=T.nodeName;break;case"translate":L=r(T.textContent),_t.fromArray(L),b.matrix.multiply($e.makeTranslation(_t.x,_t.y,_t.z)),b.transforms[T.getAttribute("sid")]=T.nodeName;break;case"rotate":L=r(T.textContent);const te=Ws.degToRad(L[3]);b.matrix.multiply($e.makeRotationAxis(_t.fromArray(L),te)),b.transforms[T.getAttribute("sid")]=T.nodeName;break;case"scale":L=r(T.textContent),b.matrix.scale(_t.fromArray(L)),b.transforms[T.getAttribute("sid")]=T.nodeName;break;case"extra":break;default:console.log(T)}}return mr(b.id)?console.warn("THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.",b.id):ft.nodes[b.id]=b,b}function vt(S){const b={id:o(S.getAttribute("url")),materials:{},skeletons:[]};for(let I=0;I<S.childNodes.length;I++){const T=S.childNodes[I];switch(T.nodeName){case"bind_material":const L=T.getElementsByTagName("instance_material");for(let te=0;te<L.length;te++){const fe=L[te],ze=fe.getAttribute("symbol"),Ie=fe.getAttribute("target");b.materials[ze]=o(Ie)}break;case"skeleton":b.skeletons.push(o(T.textContent));break}}return b}function Gt(S,b){const I=[],T=[];let L,te,fe;for(L=0;L<S.length;L++){const ke=S[L];let it;if(mr(ke))it=Ot(ke),Vt(it,b,I);else if(Cs(ke)){const Qe=ft.visualScenes[ke].children;for(let Ye=0;Ye<Qe.length;Ye++){const ct=Qe[Ye];if(ct.type==="JOINT"){const st=Ot(ct.id);Vt(st,b,I)}}}else console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:",ke)}for(L=0;L<b.length;L++)for(te=0;te<I.length;te++)if(fe=I[te],fe.bone.name===b[L].name){T[L]=fe,fe.processed=!0;break}for(L=0;L<I.length;L++)fe=I[L],fe.processed===!1&&(T.push(fe),fe.processed=!0);const ze=[],Ie=[];for(L=0;L<T.length;L++)fe=T[L],ze.push(fe.bone),Ie.push(fe.boneInverse);return new $a(ze,Ie)}function Vt(S,b,I){S.traverse(function(T){if(T.isBone===!0){let L;for(let te=0;te<b.length;te++){const fe=b[te];if(fe.name===T.name){L=fe.boneInverse;break}}L===void 0&&(L=new at),I.push({bone:T,boneInverse:L,processed:!1})}})}function Hn(S){const b=[],I=S.matrix,T=S.nodes,L=S.type,te=S.instanceCameras,fe=S.instanceControllers,ze=S.instanceLights,Ie=S.instanceGeometries,ke=S.instanceNodes;for(let Ee=0,Qe=T.length;Ee<Qe;Ee++)b.push(Ot(T[Ee]));for(let Ee=0,Qe=te.length;Ee<Qe;Ee++){const Ye=_e(te[Ee]);Ye!==null&&b.push(Ye.clone())}for(let Ee=0,Qe=fe.length;Ee<Qe;Ee++){const Ye=fe[Ee],ct=ue(Ye.id),st=Zn(ct.id),Xt=St(st,Ye.materials),Dt=Ye.skeletons,wt=ct.skin.joints,Ct=Gt(Dt,wt);for(let Ui=0,Gn=Xt.length;Ui<Gn;Ui++){const _r=Xt[Ui];_r.isSkinnedMesh&&(_r.bind(Ct,ct.skin.bindMatrix),_r.normalizeSkinWeights()),b.push(_r)}}for(let Ee=0,Qe=ze.length;Ee<Qe;Ee++){const Ye=z(ze[Ee]);Ye!==null&&b.push(Ye.clone())}for(let Ee=0,Qe=Ie.length;Ee<Qe;Ee++){const Ye=Ie[Ee],ct=Zn(Ye.id),st=St(ct,Ye.materials);for(let Xt=0,Dt=st.length;Xt<Dt;Xt++)b.push(st[Xt])}for(let Ee=0,Qe=ke.length;Ee<Qe;Ee++)b.push(Ot(ke[Ee]).clone());let it;if(T.length===0&&b.length===1)it=b[0];else{it=L==="JOINT"?new Wl:new ps;for(let Ee=0;Ee<b.length;Ee++)it.add(b[Ee])}return it.name=L==="JOINT"?S.sid:S.name,it.matrix.copy(I),it.matrix.decompose(it.position,it.quaternion,it.scale),it}const oi=new pi({name:An.DEFAULT_MATERIAL_NAME,color:16711935});function $t(S,b){const I=[];for(let T=0,L=S.length;T<L;T++){const te=b[S[T]];te===void 0?(console.warn("THREE.ColladaLoader: Material with key %s not found. Apply fallback material.",S[T]),I.push(oi)):I.push(Me(te))}return I}function St(S,b){const I=[];for(const T in S){const L=S[T],te=$t(L.materialKeys,b);if(te.length===0&&(T==="lines"||T==="linestrips"?te.push(new En):te.push(new Tl)),T==="lines"||T==="linestrips")for(let ke=0,it=te.length;ke<it;ke++){const Ee=te[ke];if(Ee.isMeshPhongMaterial===!0||Ee.isMeshLambertMaterial===!0){const Qe=new En;Qe.color.copy(Ee.color),Qe.opacity=Ee.opacity,Qe.transparent=Ee.transparent,te[ke]=Qe}}const fe=L.data.attributes.skinIndex!==void 0,ze=te.length===1?te[0]:te;let Ie;switch(T){case"lines":Ie=new _i(L.data,ze);break;case"linestrips":Ie=new is(L.data,ze);break;case"triangles":case"polylist":fe?Ie=new fh(L.data,ze):Ie=new dn(L.data,ze);break}I.push(Ie)}return I}function mr(S){return ft.nodes[S]!==void 0}function Ot(S){return _(ft.nodes[S],Hn)}function Di(S){const b={name:S.getAttribute("name"),children:[]};pt(S);const I=n(S,"node");for(let T=0;T<I.length;T++)b.children.push(ht(I[T]));ft.visualScenes[S.getAttribute("id")]=b}function aa(S){const b=new ps;b.name=S.name;const I=S.children;for(let T=0;T<I.length;T++){const L=I[T];b.add(Ot(L.id))}return b}function Cs(S){return ft.visualScenes[S]!==void 0}function gr(S){return _(ft.visualScenes[S],aa)}function Mn(S){const b=n(S,"instance_visual_scene")[0];return gr(o(b.getAttribute("url")))}function Ni(){const S=ft.clips;if(c(S)===!0){if(c(ft.animations)===!1){const b=[];for(const I in ft.animations){const T=x(I);for(let L=0,te=T.length;L<te;L++)b.push(T[L])}fo.push(new sr("default",-1,b))}}else for(const b in S)fo.push(ee(b))}function oa(S){let b="";const I=[S];for(;I.length;){const T=I.shift();T.nodeType===Node.TEXT_NODE?b+=T.textContent:(b+=`
`,I.push.apply(I,T.childNodes))}return b.trim()}if(e.length===0)return{scene:new Gl};const Tn=new DOMParser().parseFromString(e,"application/xml"),Wt=n(Tn,"COLLADA")[0],la=Tn.getElementsByTagName("parsererror")[0];if(la!==void 0){const S=n(la,"div")[0];let b;return S?b=S.textContent:b=oa(la),console.error(`THREE.ColladaLoader: Failed to parse collada file.
`,b),null}const uo=Wt.getAttribute("version");console.debug("THREE.ColladaLoader: File version",uo);const Hh=u(n(Wt,"asset")[0]),Gh=new Qm(this.manager);Gh.setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);let fc;Dd&&(fc=new Dd(this.manager),fc.setPath(this.resourcePath||t));const ho=new Oe,fo=[];let Vh={},Cg=0;const ft={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};d(Wt,"library_animations","animation",g),d(Wt,"library_animation_clips","animation_clip",B),d(Wt,"library_controllers","controller",Z),d(Wt,"library_images","image",he),d(Wt,"library_effects","effect",ge),d(Wt,"library_materials","material",K),d(Wt,"library_cameras","camera",qe),d(Wt,"library_lights","light",ot),d(Wt,"library_geometries","geometry",Ce),d(Wt,"library_nodes","node",ht),d(Wt,"library_visual_scenes","visual_scene",Di),d(Wt,"library_kinematics_models","kinematics_model",Sn),d(Wt,"library_physics_models","physics_model",uc),d(Wt,"scene","instance_kinematics_scene",J),p(ft.animations,v),p(ft.clips,q),p(ft.controllers,ce),p(ft.images,ye),p(ft.effects,O),p(ft.materials,be),p(ft.cameras,ve),p(ft.lights,Ze),p(ft.geometries,ut),p(ft.visualScenes,aa),Ni(),He();const po=Mn(n(Wt,"scene")[0]);return po.animations=fo,Hh.upAxis==="Z_UP"&&(console.warn("THREE.ColladaLoader: You are loading an asset with a Z-UP coordinate system. The loader just rotates the asset to transform it into Y-UP. The vertex data are not converted, see #24289."),po.rotation.set(-Math.PI/2,0,0)),po.scale.multiplyScalar(Hh.unit),{get animations(){return console.warn("THREE.ColladaLoader: Please access animations over scene.animations now."),fo},kinematics:Vh,library:ft,scene:po}}}function BE(s){let e,t=`<!-- include stl: ${s[0]} ${s[2]} -->`,n,i,r;return i=new jt.Mesh({props:{castShadow:!0,receiveShadow:!0,geometry:s[5],scale:s[2],position:s[4],rotation:s[3],$$slots:{default:[zE]},$$scope:{ctx:s}}}),{c(){e=new or(!1),n=Bt(),Ve(i.$$.fragment),this.h()},l(a){e=lr(a,!1),n=zt(a),Je(i.$$.fragment,a),this.h()},h(){e.a=n},m(a,o){e.m(t,a,o),Ge(a,n,o),We(i,a,o),r=!0},p(a,o){(!r||o&5)&&t!==(t=`<!-- include stl: ${a[0]} ${a[2]} -->`)&&e.p(t);const l={};o&4&&(l.scale=a[2]),o&16&&(l.position=a[4]),o&8&&(l.rotation=a[3]),o&2050&&(l.$$scope={dirty:o,ctx:a}),i.$set(l)},i(a){r||(re(i.$$.fragment,a),r=!0)},o(a){me(i.$$.fragment,a),r=!1},d(a){a&&(e.d(),Ue(n)),Xe(i,a)}}}function zE(s){let e,t;return e=new jt.MeshLambertMaterial({props:{color:s[1]}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.color=n[1]),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function HE(s){let e,t,n=s[5]&&BE(s);return{c(){n&&n.c(),e=dt()},l(i){n&&n.l(i),e=dt()},m(i,r){n&&n.m(i,r),Ge(i,e,r),t=!0},p(i,[r]){i[5]&&n.p(i,r)},i(i){t||(re(n),t=!0)},o(i){me(n),t=!1},d(i){i&&Ue(e),n&&n.d(i)}}}function GE(s,e,t){let{filename:n}=e,{color:i=new Oe("pink")}=e,{scale:r=[1,1,1]}=e,{rotation:a=[1,1,1]}=e,{position:o=[1,1,1]}=e;const l=ap(),{invalidate:c}=rs(),u=vg(Nd,()=>new Nd);let h;const f=p=>{c("Collada: model loaded"),l("load",p)},d=p=>{console.error(p),l("error")};return s.$$set=p=>{"filename"in p&&t(0,n=p.filename),"color"in p&&t(1,i=p.color),"scale"in p&&t(2,r=p.scale),"rotation"in p&&t(3,a=p.rotation),"position"in p&&t(4,o=p.position)},s.$$.update=()=>{s.$$.dirty&1&&u.load(n,f,void 0,d)},[n,i,r,a,o,h]}class VE extends Zt{constructor(e){super(),Jt(this,e,GE,HE,Ht,{filename:0,color:1,scale:2,rotation:3,position:4})}}class WE extends An{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new mi(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{t(r.parse(o))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){function t(c){const u=new DataView(c),h=32/8*3+32/8*3*3+16/8,f=u.getUint32(80,!0);if(80+32/8+f*h===u.byteLength)return!0;const p=[115,111,108,105,100];for(let _=0;_<5;_++)if(n(p,u,_))return!1;return!0}function n(c,u,h){for(let f=0,d=c.length;f<d;f++)if(c[f]!==u.getUint8(h+f))return!1;return!0}function i(c){const u=new DataView(c),h=u.getUint32(80,!0);let f,d,p,_=!1,g,m,y,v,x;for(let V=0;V<80-10;V++)u.getUint32(V,!1)==1129270351&&u.getUint8(V+4)==82&&u.getUint8(V+5)==61&&(_=!0,g=new Float32Array(h*3*3),m=u.getUint8(V+6)/255,y=u.getUint8(V+7)/255,v=u.getUint8(V+8)/255,x=u.getUint8(V+9)/255);const E=84,w=12*4+2,A=new yt,P=new Float32Array(h*3*3),M=new Float32Array(h*3*3),R=new Oe;for(let V=0;V<h;V++){const j=E+V*w,ne=u.getFloat32(j,!0),F=u.getFloat32(j+4,!0),H=u.getFloat32(j+8,!0);if(_){const B=u.getUint16(j+48,!0);B&32768?(f=m,d=y,p=v):(f=(B&31)/31,d=(B>>5&31)/31,p=(B>>10&31)/31)}for(let B=1;B<=3;B++){const q=j+B*12,ee=V*3*3+(B-1)*3;P[ee]=u.getFloat32(q,!0),P[ee+1]=u.getFloat32(q+4,!0),P[ee+2]=u.getFloat32(q+8,!0),M[ee]=ne,M[ee+1]=F,M[ee+2]=H,_&&(R.set(f,d,p).convertSRGBToLinear(),g[ee]=R.r,g[ee+1]=R.g,g[ee+2]=R.b)}}return A.setAttribute("position",new Pt(P,3)),A.setAttribute("normal",new Pt(M,3)),_&&(A.setAttribute("color",new Pt(g,3)),A.hasColors=!0,A.alpha=x),A}function r(c){const u=new yt,h=/solid([\s\S]*?)endsolid/g,f=/facet([\s\S]*?)endfacet/g,d=/solid\s(.+)/;let p=0;const _=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,g=new RegExp("vertex"+_+_+_,"g"),m=new RegExp("normal"+_+_+_,"g"),y=[],v=[],x=[],E=new D;let w,A=0,P=0,M=0;for(;(w=h.exec(c))!==null;){P=M;const R=w[0],V=(w=d.exec(R))!==null?w[1]:"";for(x.push(V);(w=f.exec(R))!==null;){let F=0,H=0;const B=w[0];for(;(w=m.exec(B))!==null;)E.x=parseFloat(w[1]),E.y=parseFloat(w[2]),E.z=parseFloat(w[3]),H++;for(;(w=g.exec(B))!==null;)y.push(parseFloat(w[1]),parseFloat(w[2]),parseFloat(w[3])),v.push(E.x,E.y,E.z),F++,M++;H!==1&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+p),F!==3&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+p),p++}const j=P,ne=M-P;u.userData.groupNames=x,u.addGroup(j,ne,A),A++}return u.setAttribute("position",new Be(y,3)),u.setAttribute("normal",new Be(v,3)),u}function a(c){return typeof c!="string"?new TextDecoder().decode(c):c}function o(c){if(typeof c=="string"){const u=new Uint8Array(c.length);for(let h=0;h<c.length;h++)u[h]=c.charCodeAt(h)&255;return u.buffer||u}else return c}const l=o(e);return t(l)?i(l):r(a(e))}}function Ud(s){let e,t=`<!-- include stl: ${s[0]} ${s[2]} -->`,n,i,r;return i=new jt.Mesh({props:{castShadow:!0,receiveShadow:!0,geometry:s[6],scale:s[2],position:s[4],rotation:s[3],$$slots:{default:[XE]},$$scope:{ctx:s}}}),{c(){e=new or(!1),n=Bt(),Ve(i.$$.fragment),this.h()},l(a){e=lr(a,!1),n=zt(a),Je(i.$$.fragment,a),this.h()},h(){e.a=n},m(a,o){e.m(t,a,o),Ge(a,n,o),We(i,a,o),r=!0},p(a,o){(!r||o&5)&&t!==(t=`<!-- include stl: ${a[0]} ${a[2]} -->`)&&e.p(t);const l={};o&64&&(l.geometry=a[6]),o&4&&(l.scale=a[2]),o&16&&(l.position=a[4]),o&8&&(l.rotation=a[3]),o&1026&&(l.$$scope={dirty:o,ctx:a}),i.$set(l)},i(a){r||(re(i.$$.fragment,a),r=!0)},o(a){me(i.$$.fragment,a),r=!1},d(a){a&&(e.d(),Ue(n)),Xe(i,a)}}}function XE(s){let e,t;return e=new jt.MeshLambertMaterial({props:{color:s[1]}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.color=n[1]),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function qE(s){let e,t,n=s[6]&&Ud(s);return{c(){n&&n.c(),e=dt()},l(i){n&&n.l(i),e=dt()},m(i,r){n&&n.m(i,r),Ge(i,e,r),t=!0},p(i,[r]){i[6]?n?(n.p(i,r),r&64&&re(n,1)):(n=Ud(i),n.c(),re(n,1),n.m(e.parentNode,e)):n&&(pn(),me(n,1,1,()=>{n=null}),mn())},i(i){t||(re(n),t=!0)},o(i){me(n),t=!1},d(i){i&&Ue(e),n&&n.d(i)}}}function YE(s,e,t){let n,i=kt,r=()=>(i(),i=Og(f,d=>t(6,n=d)),f);s.$$.on_destroy.push(()=>i());let{filename:a}=e,{color:o=new Oe("pink")}=e,{scale:l=[1,1,1]}=e,{rotation:c=[1,1,1]}=e,{position:u=[1,1,1]}=e;ap(),rs();const h=vg(WE);let f;return s.$$set=d=>{"filename"in d&&t(0,a=d.filename),"color"in d&&t(1,o=d.color),"scale"in d&&t(2,l=d.scale),"rotation"in d&&t(3,c=d.rotation),"position"in d&&t(4,u=d.position)},s.$$.update=()=>{s.$$.dirty&1&&r(t(5,f=h.load(a)))},[a,o,l,c,u,f,n]}class jE extends Zt{constructor(e){super(),Jt(this,e,YE,qE,Ht,{filename:0,color:1,scale:2,rotation:3,position:4})}}function ZE(s){let e,t;return e=new jt.Mesh({props:{castShadow:!0,receiveShadow:!0,scale:s[1],position:s[3],rotation:s[4],$$slots:{default:[QE]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.scale=n[1]),i&65&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function JE(s){let e,t,n,i;const r=[tA,eA],a=[];function o(l,c){return l[2].type==="stl"?0:l[2].type==="dae"?1:-1}return~(e=o(s))&&(t=a[e]=r[e](s)),{c(){t&&t.c(),n=dt()},l(l){t&&t.l(l),n=dt()},m(l,c){~e&&a[e].m(l,c),Ge(l,n,c),i=!0},p(l,c){let u=e;e=o(l),e===u?~e&&a[e].p(l,c):(t&&(pn(),me(a[u],1,1,()=>{a[u]=null}),mn()),~e?(t=a[e],t?t.p(l,c):(t=a[e]=r[e](l),t.c()),re(t,1),t.m(n.parentNode,n)):t=null)},i(l){i||(re(t),i=!0)},o(l){me(t),i=!1},d(l){l&&Ue(n),~e&&a[e].d(l)}}}function KE(s){let e,t;return e=new jt.BoxGeometry({}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function $E(s){let e,t;return e=new jt.CylinderGeometry({}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function QE(s){let e,t,n,i,r;const a=[$E,KE],o=[];function l(c,u){return c[0].type==="cylinder"?0:c[0].type==="box"?1:-1}return~(e=l(s))&&(t=o[e]=a[e](s)),i=new jt.MeshBasicMaterial({props:{color:s[5]}}),{c(){t&&t.c(),n=Bt(),Ve(i.$$.fragment)},l(c){t&&t.l(c),n=zt(c),Je(i.$$.fragment,c)},m(c,u){~e&&o[e].m(c,u),Ge(c,n,u),We(i,c,u),r=!0},p(c,u){let h=e;e=l(c),e!==h&&(t&&(pn(),me(o[h],1,1,()=>{o[h]=null}),mn()),~e?(t=o[e],t||(t=o[e]=a[e](c),t.c()),re(t,1),t.m(n.parentNode,n)):t=null)},i(c){r||(re(t),re(i.$$.fragment,c),r=!0)},o(c){me(t),me(i.$$.fragment,c),r=!1},d(c){c&&Ue(n),~e&&o[e].d(c),Xe(i,c)}}}function eA(s){let e,t;return e=new VE({props:{filename:s[2].filename,position:s[3],rotation:s[4],color:s[5],scale:s[1]}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&4&&(r.filename=n[2].filename),i&2&&(r.scale=n[1]),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function tA(s){let e,t;return e=new jE({props:{filename:s[2].filename,position:s[3],rotation:s[4],color:s[5],scale:s[1]}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&4&&(r.filename=n[2].filename),i&2&&(r.scale=n[1]),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function nA(s){let e,t,n,i;const r=[JE,ZE],a=[];function o(l,c){return l[0].type==="mesh"?0:1}return e=o(s),t=a[e]=r[e](s),{c(){t.c(),n=dt()},l(l){t.l(l),n=dt()},m(l,c){a[e].m(l,c),Ge(l,n,c),i=!0},p(l,[c]){let u=e;e=o(l),e===u?a[e].p(l,c):(pn(),me(a[u],1,1,()=>{a[u]=null}),mn(),t=a[e],t?t.p(l,c):(t=a[e]=r[e](l),t.c()),re(t,1),t.m(n.parentNode,n))},i(l){i||(re(t),i=!0)},o(l){me(t),i=!1},d(l){l&&Ue(n),a[e].d(l)}}}function iA(s,e,t){let{visual:n}=e;const i=n.origin_xyz||[0,0,0],r=n.origin_rpy||[0,0,0],a=kE(n.color_rgba);let o=[1,1,1],l;switch(n.type){case"mesh":l=n.geometry,o=l.scale;break}return s.$$set=c=>{"visual"in c&&t(0,n=c.visual)},[n,o,l,i,r,a]}class sA extends Zt{constructor(e){super(),Jt(this,e,iA,nA,Ht,{visual:0})}}function Od(s,e,t){const n=s.slice();return n[2]=e[t],n}function Fd(s,e,t){const n=s.slice();return n[5]=e[t],n}function kd(s){let e,t;return e=new xg({props:{joint:s[5],parser:s[1]}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&3&&(r.joint=n[5]),i&2&&(r.parser=n[1]),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function Bd(s){let e,t,n,i;e=new sA({props:{visual:s[2]}});let r=wi(s[1].getChildJoints(s[0].child)),a=[];for(let l=0;l<r.length;l+=1)a[l]=kd(Fd(s,r,l));const o=l=>me(a[l],1,1,()=>{a[l]=null});return{c(){Ve(e.$$.fragment),t=Bt();for(let l=0;l<a.length;l+=1)a[l].c();n=dt()},l(l){Je(e.$$.fragment,l),t=zt(l);for(let c=0;c<a.length;c+=1)a[c].l(l);n=dt()},m(l,c){We(e,l,c),Ge(l,t,c);for(let u=0;u<a.length;u+=1)a[u]&&a[u].m(l,c);Ge(l,n,c),i=!0},p(l,c){const u={};if(c&1&&(u.visual=l[2]),e.$set(u),c&3){r=wi(l[1].getChildJoints(l[0].child));let h;for(h=0;h<r.length;h+=1){const f=Fd(l,r,h);a[h]?(a[h].p(f,c),re(a[h],1)):(a[h]=kd(f),a[h].c(),re(a[h],1),a[h].m(n.parentNode,n))}for(pn(),h=r.length;h<a.length;h+=1)o(h);mn()}},i(l){if(!i){re(e.$$.fragment,l);for(let c=0;c<r.length;c+=1)re(a[c]);i=!0}},o(l){me(e.$$.fragment,l),a=a.filter(Boolean);for(let c=0;c<a.length;c+=1)me(a[c]);i=!1},d(l){l&&(Ue(t),Ue(n)),Xe(e,l),Xa(a,l)}}}function rA(s){let e,t,n=wi(s[0].child.visual),i=[];for(let a=0;a<n.length;a+=1)i[a]=Bd(Od(s,n,a));const r=a=>me(i[a],1,1,()=>{i[a]=null});return{c(){for(let a=0;a<i.length;a+=1)i[a].c();e=dt()},l(a){for(let o=0;o<i.length;o+=1)i[o].l(a);e=dt()},m(a,o){for(let l=0;l<i.length;l+=1)i[l]&&i[l].m(a,o);Ge(a,e,o),t=!0},p(a,o){if(o&3){n=wi(a[0].child.visual);let l;for(l=0;l<n.length;l+=1){const c=Od(a,n,l);i[l]?(i[l].p(c,o),re(i[l],1)):(i[l]=Bd(c),i[l].c(),re(i[l],1),i[l].m(e.parentNode,e))}for(pn(),l=n.length;l<i.length;l+=1)r(l);mn()}},i(a){if(!t){for(let o=0;o<n.length;o+=1)re(i[o]);t=!0}},o(a){i=i.filter(Boolean);for(let o=0;o<i.length;o+=1)me(i[o]);t=!1},d(a){a&&Ue(e),Xa(i,a)}}}function aA(s){let e,t=`<!-- Joint ${s[0].name} -->`,n,i,r;return i=new jt.Group({props:{rotation:s[0].origin_rpy,position:s[0].origin_xyz,$$slots:{default:[rA]},$$scope:{ctx:s}}}),{c(){e=new or(!1),n=Bt(),Ve(i.$$.fragment),this.h()},l(a){e=lr(a,!1),n=zt(a),Je(i.$$.fragment,a),this.h()},h(){e.a=n},m(a,o){e.m(t,a,o),Ge(a,n,o),We(i,a,o),r=!0},p(a,[o]){(!r||o&1)&&t!==(t=`<!-- Joint ${a[0].name} -->`)&&e.p(t);const l={};o&1&&(l.rotation=a[0].origin_rpy),o&1&&(l.position=a[0].origin_xyz),o&259&&(l.$$scope={dirty:o,ctx:a}),i.$set(l)},i(a){r||(re(i.$$.fragment,a),r=!0)},o(a){me(i.$$.fragment,a),r=!1},d(a){a&&(e.d(),Ue(n)),Xe(i,a)}}}function oA(s,e,t){let{joint:n}=e,{parser:i}=e;return s.$$set=r=>{"joint"in r&&t(0,n=r.joint),"parser"in r&&t(1,i=r.parser)},[n,i]}class xg extends Zt{constructor(e){super(),Jt(this,e,oA,aA,Ht,{joint:0,parser:1})}}function zd(s,e,t){const n=s.slice();return n[3]=e[t],n}function Hd(s){let e,t;return e=new xg({props:{joint:s[3],parser:s[1]}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.joint=n[3]),i&2&&(r.parser=n[1]),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function lA(s){let e,t,n=wi(s[1].getRootJoints()),i=[];for(let a=0;a<n.length;a+=1)i[a]=Hd(zd(s,n,a));const r=a=>me(i[a],1,1,()=>{i[a]=null});return{c(){for(let a=0;a<i.length;a+=1)i[a].c();e=dt()},l(a){for(let o=0;o<i.length;o+=1)i[o].l(a);e=dt()},m(a,o){for(let l=0;l<i.length;l+=1)i[l]&&i[l].m(a,o);Ge(a,e,o),t=!0},p(a,o){if(o&2){n=wi(a[1].getRootJoints());let l;for(l=0;l<n.length;l+=1){const c=zd(a,n,l);i[l]?(i[l].p(c,o),re(i[l],1)):(i[l]=Hd(c),i[l].c(),re(i[l],1),i[l].m(e.parentNode,e))}for(pn(),l=n.length;l<i.length;l+=1)r(l);mn()}},i(a){if(!t){for(let o=0;o<n.length;o+=1)re(i[o]);t=!0}},o(a){i=i.filter(Boolean);for(let o=0;o<i.length;o+=1)me(i[o]);t=!1},d(a){a&&Ue(e),Xa(i,a)}}}function cA(s){let e,t;return e=new jt.Group({props:{position:s[2],quaternion:s[0],$$slots:{default:[lA]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,[i]){const r={};i&4&&(r.position=n[2]),i&1&&(r.quaternion=n[0]),i&66&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function uA(s,e,t){let{parser:n}=e,{position:i=[0,0,0]}=e,{quaternion:r=void 0}=e;if(!r){const a=new xn;a.setFromAxisAngle(new D(-1,0,0),Math.PI*.5),r=[a.x,a.y,a.z,a.w]}return s.$$set=a=>{"parser"in a&&t(1,n=a.parser),"position"in a&&t(2,i=a.position),"quaternion"in a&&t(0,r=a.quaternion)},[r,n,i]}class hA extends Zt{constructor(e){super(),Jt(this,e,uA,cA,Ht,{parser:1,position:2,quaternion:0})}}function Gd(s){let e,t;return e=new RE({props:{scale:s[1]*4,far:s[1],blur:2}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.scale=n[1]*4),i&2&&(r.far=n[1]),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function fA(s){let e,t,n=s[2]&&Gd(s);return{c(){n&&n.c(),e=dt()},l(i){n&&n.l(i),e=dt()},m(i,r){n&&n.m(i,r),Ge(i,e,r),t=!0},p(i,r){i[2]?n?(n.p(i,r),r&4&&re(n,1)):(n=Gd(i),n.c(),re(n,1),n.m(e.parentNode,e)):n&&(pn(),me(n,1,1,()=>{n=null}),mn())},i(i){t||(re(n),t=!0)},o(i){me(n),t=!1},d(i){i&&Ue(e),n&&n.d(i)}}}function dA(s){let e,t,n,i,r,a,o,l;return e=new jt.AmbientLight({props:{intensity:s[0]/3}}),n=new jt.SpotLight({props:{penumbra:1,position:[s[8].main[0]*s[1],s[8].main[1]*s[1],s[8].main[2]*s[1]],intensity:s[0]*2,castShadow:s[2],"shadow-bias":s[3],"shadow-normalBias":s[4],"shadow-mapSize":s[5]}}),r=new jt.PointLight({props:{position:[s[8].fill[0]*s[1],s[8].fill[1]*s[1],s[8].fill[2]*s[1]],intensity:s[0]}}),o=new jt.Group({props:{position:[0,-s[6]/2-s[7]/2,0],$$slots:{default:[fA]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment),t=Bt(),Ve(n.$$.fragment),i=Bt(),Ve(r.$$.fragment),a=Bt(),Ve(o.$$.fragment)},l(c){Je(e.$$.fragment,c),t=zt(c),Je(n.$$.fragment,c),i=zt(c),Je(r.$$.fragment,c),a=zt(c),Je(o.$$.fragment,c)},m(c,u){We(e,c,u),Ge(c,t,u),We(n,c,u),Ge(c,i,u),We(r,c,u),Ge(c,a,u),We(o,c,u),l=!0},p(c,[u]){const h={};u&1&&(h.intensity=c[0]/3),e.$set(h);const f={};u&2&&(f.position=[c[8].main[0]*c[1],c[8].main[1]*c[1],c[8].main[2]*c[1]]),u&1&&(f.intensity=c[0]*2),u&4&&(f.castShadow=c[2]),u&8&&(f["shadow-bias"]=c[3]),u&16&&(f["shadow-normalBias"]=c[4]),u&32&&(f["shadow-mapSize"]=c[5]),n.$set(f);const d={};u&2&&(d.position=[c[8].fill[0]*c[1],c[8].fill[1]*c[1],c[8].fill[2]*c[1]]),u&1&&(d.intensity=c[0]),r.$set(d);const p={};u&192&&(p.position=[0,-c[6]/2-c[7]/2,0]),u&2054&&(p.$$scope={dirty:u,ctx:c}),o.$set(p)},i(c){l||(re(e.$$.fragment,c),re(n.$$.fragment,c),re(r.$$.fragment,c),re(o.$$.fragment,c),l=!0)},o(c){me(e.$$.fragment,c),me(n.$$.fragment,c),me(r.$$.fragment,c),me(o.$$.fragment,c),l=!1},d(c){c&&(Ue(t),Ue(i),Ue(a)),Xe(e,c),Xe(n,c),Xe(r,c),Xe(o,c)}}}function pA(s,e,t){let{intensity:n=.5}=e,{radius:i=1}=e,{shadows:r=!0}=e,{preset_name:a="rembrandt"}=e,{shadowBias:o=-1e-4}=e,{normalBias:l=0}=e,{shadowSize:c=256}=e,{height:u=1}=e,{shadowOffset:h=1}=e;const d={rembrandt:{main:[1,2,1],fill:[-2,-.5,-2]},portrait:{main:[-1,2,.5],fill:[-1,.5,-1.5]},upfront:{main:[0,2,1],fill:[-1,.5,-1.5]},soft:{main:[-2,4,4],fill:[-1,.5,-1.5]}}[a];return s.$$set=p=>{"intensity"in p&&t(0,n=p.intensity),"radius"in p&&t(1,i=p.radius),"shadows"in p&&t(2,r=p.shadows),"preset_name"in p&&t(9,a=p.preset_name),"shadowBias"in p&&t(3,o=p.shadowBias),"normalBias"in p&&t(4,l=p.normalBias),"shadowSize"in p&&t(5,c=p.shadowSize),"height"in p&&t(6,u=p.height),"shadowOffset"in p&&t(7,h=p.shadowOffset)},[n,i,r,o,l,c,u,h,d,a]}class mA extends Zt{constructor(e){super(),Jt(this,e,pA,dA,Ht,{intensity:0,radius:1,shadows:2,preset_name:9,shadowBias:3,normalBias:4,shadowSize:5,height:6,shadowOffset:7})}}function gA(s,e,t){let{size:n=10}=e,{divisions:i=10}=e,{position:r=[0,0,0]}=e;const{scene:a,invalidate:o}=rs(),l=new ug(n,i);return l.position.x=r[0],l.position.y=r[1],l.position.z=r[2],a.add(l),cn(()=>{a.remove(l)}),s.$$set=c=>{"size"in c&&t(0,n=c.size),"divisions"in c&&t(1,i=c.divisions),"position"in c&&t(2,r=c.position)},[n,i,r]}class _A extends Zt{constructor(e){super(),Jt(this,e,gA,null,Ht,{size:0,divisions:1,position:2})}}var Gu=function(s,e){return Gu=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])},Gu(s,e)};function oc(s,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");Gu(s,e);function t(){this.constructor=s}s.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var es=function(){return es=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++){t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},es.apply(this,arguments)};function rl(s){var e=typeof Symbol=="function"&&Symbol.iterator,t=e&&s[e],n=0;if(t)return t.call(s);if(s&&typeof s.length=="number")return{next:function(){return s&&n>=s.length&&(s=void 0),{value:s&&s[n++],done:!s}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function Vd(s,e){var t=typeof Symbol=="function"&&s[Symbol.iterator];if(!t)return s;var n=t.call(s),i,r=[],a;try{for(;(e===void 0||e-- >0)&&!(i=n.next()).done;)r.push(i.value)}catch(o){a={error:o}}finally{try{i&&!i.done&&(t=n.return)&&t.call(n)}finally{if(a)throw a.error}}return r}function vA(s,e,t){if(t||arguments.length===2)for(var n=0,i=e.length,r;n<i;n++)(r||!(n in e))&&(r||(r=Array.prototype.slice.call(e,0,n)),r[n]=e[n]);return s.concat(r||Array.prototype.slice.call(e))}/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */var kh=function(){function s(e){e===void 0&&(e={}),this.adapter=e}return Object.defineProperty(s,"cssClasses",{get:function(){return{}},enumerable:!1,configurable:!0}),Object.defineProperty(s,"strings",{get:function(){return{}},enumerable:!1,configurable:!0}),Object.defineProperty(s,"numbers",{get:function(){return{}},enumerable:!1,configurable:!0}),Object.defineProperty(s,"defaultAdapter",{get:function(){return{}},enumerable:!1,configurable:!0}),s.prototype.init=function(){},s.prototype.destroy=function(){},s}();/**
 * @license
 * Copyright 2020 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */var Zc="mdc-dom-focus-sentinel",yA=function(){function s(e,t){t===void 0&&(t={}),this.root=e,this.options=t,this.elFocusedBeforeTrapFocus=null}return s.prototype.trapFocus=function(){var e=this.getFocusableElements(this.root);if(e.length===0)throw new Error("FocusTrap: Element must have at least one focusable child.");this.elFocusedBeforeTrapFocus=document.activeElement instanceof HTMLElement?document.activeElement:null,this.wrapTabFocus(this.root),this.options.skipInitialFocus||this.focusInitialElement(e,this.options.initialFocusEl)},s.prototype.releaseFocus=function(){[].slice.call(this.root.querySelectorAll("."+Zc)).forEach(function(e){e.parentElement.removeChild(e)}),!this.options.skipRestoreFocus&&this.elFocusedBeforeTrapFocus&&this.elFocusedBeforeTrapFocus.focus()},s.prototype.wrapTabFocus=function(e){var t=this,n=this.createSentinel(),i=this.createSentinel();n.addEventListener("focus",function(){var r=t.getFocusableElements(e);r.length>0&&r[r.length-1].focus()}),i.addEventListener("focus",function(){var r=t.getFocusableElements(e);r.length>0&&r[0].focus()}),e.insertBefore(n,e.children[0]),e.appendChild(i)},s.prototype.focusInitialElement=function(e,t){var n=0;t&&(n=Math.max(e.indexOf(t),0)),e[n].focus()},s.prototype.getFocusableElements=function(e){var t=[].slice.call(e.querySelectorAll("[autofocus], [tabindex], a, input, textarea, select, button"));return t.filter(function(n){var i=n.getAttribute("aria-disabled")==="true"||n.getAttribute("disabled")!=null||n.getAttribute("hidden")!=null||n.getAttribute("aria-hidden")==="true",r=n.tabIndex>=0&&n.getBoundingClientRect().width>0&&!n.classList.contains(Zc)&&!i,a=!1;if(r){var o=getComputedStyle(n);a=o.display==="none"||o.visibility==="hidden"}return r&&!a})},s.prototype.createSentinel=function(){var e=document.createElement("div");return e.setAttribute("tabindex","0"),e.setAttribute("aria-hidden","true"),e.classList.add(Zc),e},s}();const xA=Object.freeze(Object.defineProperty({__proto__:null,FocusTrap:yA},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */function bA(s,e){if(s.closest)return s.closest(e);for(var t=s;t;){if(bg(t,e))return t;t=t.parentElement}return null}function bg(s,e){var t=s.matches||s.webkitMatchesSelector||s.msMatchesSelector;return t.call(s,e)}function SA(s){var e=s;if(e.offsetParent!==null)return e.scrollWidth;var t=e.cloneNode(!0);t.style.setProperty("position","absolute"),t.style.setProperty("transform","translate(-9999px, -9999px)"),document.documentElement.appendChild(t);var n=t.scrollWidth;return document.documentElement.removeChild(t),n}const Sg=Object.freeze(Object.defineProperty({__proto__:null,closest:bA,estimateScrollWidth:SA,matches:bg},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */var fs,Vi,At={LIST_ITEM_ACTIVATED_CLASS:"mdc-list-item--activated",LIST_ITEM_CLASS:"mdc-list-item",LIST_ITEM_DISABLED_CLASS:"mdc-list-item--disabled",LIST_ITEM_SELECTED_CLASS:"mdc-list-item--selected",LIST_ITEM_TEXT_CLASS:"mdc-list-item__text",LIST_ITEM_PRIMARY_TEXT_CLASS:"mdc-list-item__primary-text",ROOT:"mdc-list"};fs={},fs[""+At.LIST_ITEM_ACTIVATED_CLASS]="mdc-list-item--activated",fs[""+At.LIST_ITEM_CLASS]="mdc-list-item",fs[""+At.LIST_ITEM_DISABLED_CLASS]="mdc-list-item--disabled",fs[""+At.LIST_ITEM_SELECTED_CLASS]="mdc-list-item--selected",fs[""+At.LIST_ITEM_PRIMARY_TEXT_CLASS]="mdc-list-item__primary-text",fs[""+At.ROOT]="mdc-list";var Hr=(Vi={},Vi[""+At.LIST_ITEM_ACTIVATED_CLASS]="mdc-deprecated-list-item--activated",Vi[""+At.LIST_ITEM_CLASS]="mdc-deprecated-list-item",Vi[""+At.LIST_ITEM_DISABLED_CLASS]="mdc-deprecated-list-item--disabled",Vi[""+At.LIST_ITEM_SELECTED_CLASS]="mdc-deprecated-list-item--selected",Vi[""+At.LIST_ITEM_TEXT_CLASS]="mdc-deprecated-list-item__text",Vi[""+At.LIST_ITEM_PRIMARY_TEXT_CLASS]="mdc-deprecated-list-item__primary-text",Vi[""+At.ROOT]="mdc-deprecated-list",Vi),ds={ACTION_EVENT:"MDCList:action",SELECTION_CHANGE_EVENT:"MDCList:selectionChange",ARIA_CHECKED:"aria-checked",ARIA_CHECKED_CHECKBOX_SELECTOR:'[role="checkbox"][aria-checked="true"]',ARIA_CHECKED_RADIO_SELECTOR:'[role="radio"][aria-checked="true"]',ARIA_CURRENT:"aria-current",ARIA_DISABLED:"aria-disabled",ARIA_ORIENTATION:"aria-orientation",ARIA_ORIENTATION_HORIZONTAL:"horizontal",ARIA_ROLE_CHECKBOX_SELECTOR:'[role="checkbox"]',ARIA_SELECTED:"aria-selected",ARIA_INTERACTIVE_ROLES_SELECTOR:'[role="listbox"], [role="menu"]',ARIA_MULTI_SELECTABLE_SELECTOR:'[aria-multiselectable="true"]',CHECKBOX_RADIO_SELECTOR:'input[type="checkbox"], input[type="radio"]',CHECKBOX_SELECTOR:'input[type="checkbox"]',CHILD_ELEMENTS_TO_TOGGLE_TABINDEX:`
    .`+At.LIST_ITEM_CLASS+` button:not(:disabled),
    .`+At.LIST_ITEM_CLASS+` a,
    .`+Hr[At.LIST_ITEM_CLASS]+` button:not(:disabled),
    .`+Hr[At.LIST_ITEM_CLASS]+` a
  `,DEPRECATED_SELECTOR:".mdc-deprecated-list",FOCUSABLE_CHILD_ELEMENTS:`
    .`+At.LIST_ITEM_CLASS+` button:not(:disabled),
    .`+At.LIST_ITEM_CLASS+` a,
    .`+At.LIST_ITEM_CLASS+` input[type="radio"]:not(:disabled),
    .`+At.LIST_ITEM_CLASS+` input[type="checkbox"]:not(:disabled),
    .`+Hr[At.LIST_ITEM_CLASS]+` button:not(:disabled),
    .`+Hr[At.LIST_ITEM_CLASS]+` a,
    .`+Hr[At.LIST_ITEM_CLASS]+` input[type="radio"]:not(:disabled),
    .`+Hr[At.LIST_ITEM_CLASS]+` input[type="checkbox"]:not(:disabled)
  `,RADIO_SELECTOR:'input[type="radio"]',SELECTED_ITEM_SELECTOR:'[aria-selected="true"], [aria-current="true"]'},an={UNSET_INDEX:-1,TYPEAHEAD_BUFFER_CLEAR_TIMEOUT_MS:300};/**
 * @license
 * Copyright 2020 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */var Et={UNKNOWN:"Unknown",BACKSPACE:"Backspace",ENTER:"Enter",SPACEBAR:"Spacebar",PAGE_UP:"PageUp",PAGE_DOWN:"PageDown",END:"End",HOME:"Home",ARROW_LEFT:"ArrowLeft",ARROW_UP:"ArrowUp",ARROW_RIGHT:"ArrowRight",ARROW_DOWN:"ArrowDown",DELETE:"Delete",ESCAPE:"Escape",TAB:"Tab"},Bn=new Set;Bn.add(Et.BACKSPACE);Bn.add(Et.ENTER);Bn.add(Et.SPACEBAR);Bn.add(Et.PAGE_UP);Bn.add(Et.PAGE_DOWN);Bn.add(Et.END);Bn.add(Et.HOME);Bn.add(Et.ARROW_LEFT);Bn.add(Et.ARROW_UP);Bn.add(Et.ARROW_RIGHT);Bn.add(Et.ARROW_DOWN);Bn.add(Et.DELETE);Bn.add(Et.ESCAPE);Bn.add(Et.TAB);var jn={BACKSPACE:8,ENTER:13,SPACEBAR:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,ARROW_LEFT:37,ARROW_UP:38,ARROW_RIGHT:39,ARROW_DOWN:40,DELETE:46,ESCAPE:27,TAB:9},zn=new Map;zn.set(jn.BACKSPACE,Et.BACKSPACE);zn.set(jn.ENTER,Et.ENTER);zn.set(jn.SPACEBAR,Et.SPACEBAR);zn.set(jn.PAGE_UP,Et.PAGE_UP);zn.set(jn.PAGE_DOWN,Et.PAGE_DOWN);zn.set(jn.END,Et.END);zn.set(jn.HOME,Et.HOME);zn.set(jn.ARROW_LEFT,Et.ARROW_LEFT);zn.set(jn.ARROW_UP,Et.ARROW_UP);zn.set(jn.ARROW_RIGHT,Et.ARROW_RIGHT);zn.set(jn.ARROW_DOWN,Et.ARROW_DOWN);zn.set(jn.DELETE,Et.DELETE);zn.set(jn.ESCAPE,Et.ESCAPE);zn.set(jn.TAB,Et.TAB);var Ts=new Set;Ts.add(Et.PAGE_UP);Ts.add(Et.PAGE_DOWN);Ts.add(Et.END);Ts.add(Et.HOME);Ts.add(Et.ARROW_LEFT);Ts.add(Et.ARROW_UP);Ts.add(Et.ARROW_RIGHT);Ts.add(Et.ARROW_DOWN);function Rn(s){var e=s.key;if(Bn.has(e))return e;var t=zn.get(s.keyCode);return t||Et.UNKNOWN}/**
 * @license
 * Copyright 2020 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */var MA=["input","button","textarea","select"],ri=function(s){var e=s.target;if(e){var t=(""+e.tagName).toLowerCase();MA.indexOf(t)===-1&&s.preventDefault()}};/**
 * @license
 * Copyright 2020 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */function EA(){var s={bufferClearTimeout:0,currentFirstChar:"",sortedIndexCursor:0,typeaheadBuffer:""};return s}function AA(s,e){for(var t=new Map,n=0;n<s;n++){var i=e(n).trim();if(i){var r=i[0].toLowerCase();t.has(r)||t.set(r,[]),t.get(r).push({text:i.toLowerCase(),index:n})}}return t.forEach(function(a){a.sort(function(o,l){return o.index-l.index})}),t}function Vu(s,e){var t=s.nextChar,n=s.focusItemAtIndex,i=s.sortedIndexByFirstChar,r=s.focusedItemIndex,a=s.skipFocus,o=s.isItemAtIndexDisabled;clearTimeout(e.bufferClearTimeout),e.bufferClearTimeout=setTimeout(function(){Eg(e)},an.TYPEAHEAD_BUFFER_CLEAR_TIMEOUT_MS),e.typeaheadBuffer=e.typeaheadBuffer+t;var l;return e.typeaheadBuffer.length===1?l=TA(i,r,o,e):l=wA(i,o,e),l!==-1&&!a&&n(l),l}function TA(s,e,t,n){var i=n.typeaheadBuffer[0],r=s.get(i);if(!r)return-1;if(i===n.currentFirstChar&&r[n.sortedIndexCursor].index===e){n.sortedIndexCursor=(n.sortedIndexCursor+1)%r.length;var a=r[n.sortedIndexCursor].index;if(!t(a))return a}n.currentFirstChar=i;var o=-1,l;for(l=0;l<r.length;l++)if(!t(r[l].index)){o=l;break}for(;l<r.length;l++)if(r[l].index>e&&!t(r[l].index)){o=l;break}return o!==-1?(n.sortedIndexCursor=o,r[n.sortedIndexCursor].index):-1}function wA(s,e,t){var n=t.typeaheadBuffer[0],i=s.get(n);if(!i)return-1;var r=i[t.sortedIndexCursor];if(r.text.lastIndexOf(t.typeaheadBuffer,0)===0&&!e(r.index))return r.index;for(var a=(t.sortedIndexCursor+1)%i.length,o=-1;a!==t.sortedIndexCursor;){var l=i[a],c=l.text.lastIndexOf(t.typeaheadBuffer,0)===0,u=!e(l.index);if(c&&u){o=a;break}a=(a+1)%i.length}return o!==-1?(t.sortedIndexCursor=o,i[t.sortedIndexCursor].index):-1}function Mg(s){return s.typeaheadBuffer.length>0}function Eg(s){s.typeaheadBuffer=""}function Wd(s,e){var t=s.event,n=s.isTargetListItem,i=s.focusedItemIndex,r=s.focusItemAtIndex,a=s.sortedIndexByFirstChar,o=s.isItemAtIndexDisabled,l=Rn(t)==="ArrowLeft",c=Rn(t)==="ArrowUp",u=Rn(t)==="ArrowRight",h=Rn(t)==="ArrowDown",f=Rn(t)==="Home",d=Rn(t)==="End",p=Rn(t)==="Enter",_=Rn(t)==="Spacebar";if(t.altKey||t.ctrlKey||t.metaKey||l||c||u||h||f||d||p)return-1;var g=!_&&t.key.length===1;if(g){ri(t);var m={focusItemAtIndex:r,focusedItemIndex:i,nextChar:t.key.toLowerCase(),sortedIndexByFirstChar:a,skipFocus:!1,isItemAtIndexDisabled:o};return Vu(m,e)}if(!_)return-1;n&&ri(t);var y=n&&Mg(e);if(y){var m={focusItemAtIndex:r,focusedItemIndex:i,nextChar:" ",sortedIndexByFirstChar:a,skipFocus:!1,isItemAtIndexDisabled:o};return Vu(m,e)}return-1}/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */function CA(s){return s instanceof Array}var RA=["Alt","Control","Meta","Shift"];function Xd(s){var e=new Set(s?RA.filter(function(t){return s.getModifierState(t)}):[]);return function(t){return t.every(function(n){return e.has(n)})&&t.length===e.size}}var IA=function(s){oc(e,s);function e(t){var n=s.call(this,es(es({},e.defaultAdapter),t))||this;return n.wrapFocus=!1,n.isVertical=!0,n.isSingleSelectionList=!1,n.areDisabledItemsFocusable=!0,n.selectedIndex=an.UNSET_INDEX,n.focusedItemIndex=an.UNSET_INDEX,n.useActivatedClass=!1,n.useSelectedAttr=!1,n.ariaCurrentAttrValue=null,n.isCheckboxList=!1,n.isRadioList=!1,n.lastSelectedIndex=null,n.hasTypeahead=!1,n.typeaheadState=EA(),n.sortedIndexByFirstChar=new Map,n}return Object.defineProperty(e,"strings",{get:function(){return ds},enumerable:!1,configurable:!0}),Object.defineProperty(e,"cssClasses",{get:function(){return At},enumerable:!1,configurable:!0}),Object.defineProperty(e,"numbers",{get:function(){return an},enumerable:!1,configurable:!0}),Object.defineProperty(e,"defaultAdapter",{get:function(){return{addClassForElementIndex:function(){},focusItemAtIndex:function(){},getAttributeForElementIndex:function(){return null},getFocusedElementIndex:function(){return 0},getListItemCount:function(){return 0},hasCheckboxAtIndex:function(){return!1},hasRadioAtIndex:function(){return!1},isCheckboxCheckedAtIndex:function(){return!1},isFocusInsideList:function(){return!1},isRootFocused:function(){return!1},listItemAtIndexHasClass:function(){return!1},notifyAction:function(){},notifySelectionChange:function(){},removeClassForElementIndex:function(){},setAttributeForElementIndex:function(){},setCheckedCheckboxOrRadioAtIndex:function(){},setTabIndexForListItemChildren:function(){},getPrimaryTextAtIndex:function(){return""}}},enumerable:!1,configurable:!0}),e.prototype.layout=function(){this.adapter.getListItemCount()!==0&&(this.adapter.hasCheckboxAtIndex(0)?this.isCheckboxList=!0:this.adapter.hasRadioAtIndex(0)?this.isRadioList=!0:this.maybeInitializeSingleSelection(),this.hasTypeahead&&(this.sortedIndexByFirstChar=this.typeaheadInitSortedIndex()))},e.prototype.getFocusedItemIndex=function(){return this.focusedItemIndex},e.prototype.setWrapFocus=function(t){this.wrapFocus=t},e.prototype.setVerticalOrientation=function(t){this.isVertical=t},e.prototype.setSingleSelection=function(t){this.isSingleSelectionList=t,t&&(this.maybeInitializeSingleSelection(),this.selectedIndex=this.getSelectedIndexFromDOM())},e.prototype.setDisabledItemsFocusable=function(t){this.areDisabledItemsFocusable=t},e.prototype.maybeInitializeSingleSelection=function(){var t=this.getSelectedIndexFromDOM();if(t!==an.UNSET_INDEX){var n=this.adapter.listItemAtIndexHasClass(t,At.LIST_ITEM_ACTIVATED_CLASS);n&&this.setUseActivatedClass(!0),this.isSingleSelectionList=!0,this.selectedIndex=t}},e.prototype.getSelectedIndexFromDOM=function(){for(var t=an.UNSET_INDEX,n=this.adapter.getListItemCount(),i=0;i<n;i++){var r=this.adapter.listItemAtIndexHasClass(i,At.LIST_ITEM_SELECTED_CLASS),a=this.adapter.listItemAtIndexHasClass(i,At.LIST_ITEM_ACTIVATED_CLASS);if(r||a){t=i;break}}return t},e.prototype.setHasTypeahead=function(t){this.hasTypeahead=t,t&&(this.sortedIndexByFirstChar=this.typeaheadInitSortedIndex())},e.prototype.isTypeaheadInProgress=function(){return this.hasTypeahead&&Mg(this.typeaheadState)},e.prototype.setUseActivatedClass=function(t){this.useActivatedClass=t},e.prototype.setUseSelectedAttribute=function(t){this.useSelectedAttr=t},e.prototype.getSelectedIndex=function(){return this.selectedIndex},e.prototype.setSelectedIndex=function(t,n){n===void 0&&(n={}),this.isIndexValid(t)&&(this.isCheckboxList?this.setCheckboxAtIndex(t,n):this.isRadioList?this.setRadioAtIndex(t,n):this.setSingleSelectionAtIndex(t,n))},e.prototype.handleFocusIn=function(t){t>=0&&(this.focusedItemIndex=t,this.adapter.setAttributeForElementIndex(t,"tabindex","0"),this.adapter.setTabIndexForListItemChildren(t,"0"))},e.prototype.handleFocusOut=function(t){var n=this;t>=0&&(this.adapter.setAttributeForElementIndex(t,"tabindex","-1"),this.adapter.setTabIndexForListItemChildren(t,"-1")),setTimeout(function(){n.adapter.isFocusInsideList()||n.setTabindexToFirstSelectedOrFocusedItem()},0)},e.prototype.isIndexDisabled=function(t){return this.adapter.listItemAtIndexHasClass(t,At.LIST_ITEM_DISABLED_CLASS)},e.prototype.handleKeydown=function(t,n,i){var r=this,a,o=Rn(t)==="ArrowLeft",l=Rn(t)==="ArrowUp",c=Rn(t)==="ArrowRight",u=Rn(t)==="ArrowDown",h=Rn(t)==="Home",f=Rn(t)==="End",d=Rn(t)==="Enter",p=Rn(t)==="Spacebar",_=this.isVertical&&u||!this.isVertical&&c,g=this.isVertical&&l||!this.isVertical&&o,m=t.key==="A"||t.key==="a",y=Xd(t);if(this.adapter.isRootFocused()){if((g||f)&&y([]))t.preventDefault(),this.focusLastElement();else if((_||h)&&y([]))t.preventDefault(),this.focusFirstElement();else if(g&&y(["Shift"])&&this.isCheckboxList){t.preventDefault();var v=this.focusLastElement();v!==-1&&this.setSelectedIndexOnAction(v,!1)}else if(_&&y(["Shift"])&&this.isCheckboxList){t.preventDefault();var v=this.focusFirstElement();v!==-1&&this.setSelectedIndexOnAction(v,!1)}if(this.hasTypeahead){var x={event:t,focusItemAtIndex:function(A){r.focusItemAtIndex(A)},focusedItemIndex:-1,isTargetListItem:n,sortedIndexByFirstChar:this.sortedIndexByFirstChar,isItemAtIndexDisabled:function(A){return r.isIndexDisabled(A)}};Wd(x,this.typeaheadState)}return}var E=this.adapter.getFocusedElementIndex();if(!(E===-1&&(E=i,E<0))){if(_&&y([]))ri(t),this.focusNextElement(E);else if(g&&y([]))ri(t),this.focusPrevElement(E);else if(_&&y(["Shift"])&&this.isCheckboxList){ri(t);var v=this.focusNextElement(E);v!==-1&&this.setSelectedIndexOnAction(v,!1)}else if(g&&y(["Shift"])&&this.isCheckboxList){ri(t);var v=this.focusPrevElement(E);v!==-1&&this.setSelectedIndexOnAction(v,!1)}else if(h&&y([]))ri(t),this.focusFirstElement();else if(f&&y([]))ri(t),this.focusLastElement();else if(h&&y(["Control","Shift"])&&this.isCheckboxList){if(ri(t),this.isIndexDisabled(E))return;this.focusFirstElement(),this.toggleCheckboxRange(0,E,E)}else if(f&&y(["Control","Shift"])&&this.isCheckboxList){if(ri(t),this.isIndexDisabled(E))return;this.focusLastElement(),this.toggleCheckboxRange(E,this.adapter.getListItemCount()-1,E)}else if(m&&y(["Control"])&&this.isCheckboxList)t.preventDefault(),this.checkboxListToggleAll(this.selectedIndex===an.UNSET_INDEX?[]:this.selectedIndex,!0);else if((d||p)&&y([])){if(n){var w=t.target;if(w&&w.tagName==="A"&&d||(ri(t),this.isIndexDisabled(E)))return;this.isTypeaheadInProgress()||(this.isSelectableList()&&this.setSelectedIndexOnAction(E,!1),this.adapter.notifyAction(E))}}else if((d||p)&&y(["Shift"])&&this.isCheckboxList){var w=t.target;if(w&&w.tagName==="A"&&d||(ri(t),this.isIndexDisabled(E)))return;this.isTypeaheadInProgress()||(this.toggleCheckboxRange((a=this.lastSelectedIndex)!==null&&a!==void 0?a:E,E,E),this.adapter.notifyAction(E))}if(this.hasTypeahead){var x={event:t,focusItemAtIndex:function(P){r.focusItemAtIndex(P)},focusedItemIndex:this.focusedItemIndex,isTargetListItem:n,sortedIndexByFirstChar:this.sortedIndexByFirstChar,isItemAtIndexDisabled:function(P){return r.isIndexDisabled(P)}};Wd(x,this.typeaheadState)}}},e.prototype.handleClick=function(t,n,i){var r,a=Xd(i);t!==an.UNSET_INDEX&&(this.isIndexDisabled(t)||(a([])?(this.isSelectableList()&&this.setSelectedIndexOnAction(t,n),this.adapter.notifyAction(t)):this.isCheckboxList&&a(["Shift"])&&(this.toggleCheckboxRange((r=this.lastSelectedIndex)!==null&&r!==void 0?r:t,t,t),this.adapter.notifyAction(t))))},e.prototype.focusNextElement=function(t){var n=this.adapter.getListItemCount(),i=t,r=null;do{if(i++,i>=n)if(this.wrapFocus)i=0;else return t;if(i===r)return-1;r=r??i}while(!this.areDisabledItemsFocusable&&this.isIndexDisabled(i));return this.focusItemAtIndex(i),i},e.prototype.focusPrevElement=function(t){var n=this.adapter.getListItemCount(),i=t,r=null;do{if(i--,i<0)if(this.wrapFocus)i=n-1;else return t;if(i===r)return-1;r=r??i}while(!this.areDisabledItemsFocusable&&this.isIndexDisabled(i));return this.focusItemAtIndex(i),i},e.prototype.focusFirstElement=function(){return this.focusNextElement(-1)},e.prototype.focusLastElement=function(){return this.focusPrevElement(this.adapter.getListItemCount())},e.prototype.focusInitialElement=function(){var t=this.getFirstSelectedOrFocusedItemIndex();return this.focusItemAtIndex(t),t},e.prototype.setEnabled=function(t,n){this.isIndexValid(t,!1)&&(n?(this.adapter.removeClassForElementIndex(t,At.LIST_ITEM_DISABLED_CLASS),this.adapter.setAttributeForElementIndex(t,ds.ARIA_DISABLED,"false")):(this.adapter.addClassForElementIndex(t,At.LIST_ITEM_DISABLED_CLASS),this.adapter.setAttributeForElementIndex(t,ds.ARIA_DISABLED,"true")))},e.prototype.setSingleSelectionAtIndex=function(t,n){if(n===void 0&&(n={}),!(this.selectedIndex===t&&!n.forceUpdate)){var i=At.LIST_ITEM_SELECTED_CLASS;this.useActivatedClass&&(i=At.LIST_ITEM_ACTIVATED_CLASS),this.selectedIndex!==an.UNSET_INDEX&&this.adapter.removeClassForElementIndex(this.selectedIndex,i),this.setAriaForSingleSelectionAtIndex(t),this.setTabindexAtIndex(t),t!==an.UNSET_INDEX&&this.adapter.addClassForElementIndex(t,i),this.selectedIndex=t,n.isUserInteraction&&!n.forceUpdate&&this.adapter.notifySelectionChange([t])}},e.prototype.setAriaForSingleSelectionAtIndex=function(t){this.selectedIndex===an.UNSET_INDEX&&(this.ariaCurrentAttrValue=this.adapter.getAttributeForElementIndex(t,ds.ARIA_CURRENT));var n=this.ariaCurrentAttrValue!==null,i=n?ds.ARIA_CURRENT:ds.ARIA_SELECTED;if(this.selectedIndex!==an.UNSET_INDEX&&this.adapter.setAttributeForElementIndex(this.selectedIndex,i,"false"),t!==an.UNSET_INDEX){var r=n?this.ariaCurrentAttrValue:"true";this.adapter.setAttributeForElementIndex(t,i,r)}},e.prototype.getSelectionAttribute=function(){return this.useSelectedAttr?ds.ARIA_SELECTED:ds.ARIA_CHECKED},e.prototype.setRadioAtIndex=function(t,n){n===void 0&&(n={});var i=this.getSelectionAttribute();this.adapter.setCheckedCheckboxOrRadioAtIndex(t,!0),!(this.selectedIndex===t&&!n.forceUpdate)&&(this.selectedIndex!==an.UNSET_INDEX&&this.adapter.setAttributeForElementIndex(this.selectedIndex,i,"false"),this.adapter.setAttributeForElementIndex(t,i,"true"),this.selectedIndex=t,n.isUserInteraction&&!n.forceUpdate&&this.adapter.notifySelectionChange([t]))},e.prototype.setCheckboxAtIndex=function(t,n){n===void 0&&(n={});for(var i=this.selectedIndex,r=n.isUserInteraction?new Set(i===an.UNSET_INDEX?[]:i):null,a=this.getSelectionAttribute(),o=[],l=0;l<this.adapter.getListItemCount();l++){var c=r==null?void 0:r.has(l),u=t.indexOf(l)>=0;u!==c&&o.push(l),this.adapter.setCheckedCheckboxOrRadioAtIndex(l,u),this.adapter.setAttributeForElementIndex(l,a,u?"true":"false")}this.selectedIndex=t,n.isUserInteraction&&o.length&&this.adapter.notifySelectionChange(o)},e.prototype.toggleCheckboxRange=function(t,n,i){this.lastSelectedIndex=i;for(var r=new Set(this.selectedIndex===an.UNSET_INDEX?[]:this.selectedIndex),a=!(r!=null&&r.has(i)),o=Vd([t,n].sort(),2),l=o[0],c=o[1],u=this.getSelectionAttribute(),h=[],f=l;f<=c;f++)if(!this.isIndexDisabled(f)){var d=r.has(f);a!==d&&(h.push(f),this.adapter.setCheckedCheckboxOrRadioAtIndex(f,a),this.adapter.setAttributeForElementIndex(f,u,""+a),a?r.add(f):r.delete(f))}h.length&&(this.selectedIndex=vA([],Vd(r)),this.adapter.notifySelectionChange(h))},e.prototype.setTabindexAtIndex=function(t){this.focusedItemIndex===an.UNSET_INDEX&&t!==0?this.adapter.setAttributeForElementIndex(0,"tabindex","-1"):this.focusedItemIndex>=0&&this.focusedItemIndex!==t&&this.adapter.setAttributeForElementIndex(this.focusedItemIndex,"tabindex","-1"),!(this.selectedIndex instanceof Array)&&this.selectedIndex!==t&&this.adapter.setAttributeForElementIndex(this.selectedIndex,"tabindex","-1"),t!==an.UNSET_INDEX&&this.adapter.setAttributeForElementIndex(t,"tabindex","0")},e.prototype.isSelectableList=function(){return this.isSingleSelectionList||this.isCheckboxList||this.isRadioList},e.prototype.setTabindexToFirstSelectedOrFocusedItem=function(){var t=this.getFirstSelectedOrFocusedItemIndex();this.setTabindexAtIndex(t)},e.prototype.getFirstSelectedOrFocusedItemIndex=function(){return this.isSelectableList()?typeof this.selectedIndex=="number"&&this.selectedIndex!==an.UNSET_INDEX?this.selectedIndex:CA(this.selectedIndex)&&this.selectedIndex.length>0?this.selectedIndex.reduce(function(t,n){return Math.min(t,n)}):0:Math.max(this.focusedItemIndex,0)},e.prototype.isIndexValid=function(t,n){var i=this;if(n===void 0&&(n=!0),t instanceof Array){if(!this.isCheckboxList&&n)throw new Error("MDCListFoundation: Array of index is only supported for checkbox based list");return t.length===0?!0:t.some(function(r){return i.isIndexInRange(r)})}else if(typeof t=="number"){if(this.isCheckboxList&&n)throw new Error("MDCListFoundation: Expected array of index for checkbox based list but got number: "+t);return this.isIndexInRange(t)||this.isSingleSelectionList&&t===an.UNSET_INDEX}else return!1},e.prototype.isIndexInRange=function(t){var n=this.adapter.getListItemCount();return t>=0&&t<n},e.prototype.setSelectedIndexOnAction=function(t,n){this.lastSelectedIndex=t,this.isCheckboxList?(this.toggleCheckboxAtIndex(t,n),this.adapter.notifySelectionChange([t])):this.setSelectedIndex(t,{isUserInteraction:!0})},e.prototype.toggleCheckboxAtIndex=function(t,n){var i=this.getSelectionAttribute(),r=this.adapter.isCheckboxCheckedAtIndex(t),a;n?a=r:(a=!r,this.adapter.setCheckedCheckboxOrRadioAtIndex(t,a)),this.adapter.setAttributeForElementIndex(t,i,a?"true":"false");var o=this.selectedIndex===an.UNSET_INDEX?[]:this.selectedIndex.slice();a?o.push(t):o=o.filter(function(l){return l!==t}),this.selectedIndex=o},e.prototype.focusItemAtIndex=function(t){this.adapter.focusItemAtIndex(t),this.focusedItemIndex=t},e.prototype.checkboxListToggleAll=function(t,n){var i=this.adapter.getListItemCount();if(t.length===i)this.setCheckboxAtIndex([],{isUserInteraction:n});else{for(var r=[],a=0;a<i;a++)(!this.isIndexDisabled(a)||t.indexOf(a)>-1)&&r.push(a);this.setCheckboxAtIndex(r,{isUserInteraction:n})}},e.prototype.typeaheadMatchItem=function(t,n,i){var r=this;i===void 0&&(i=!1);var a={focusItemAtIndex:function(o){r.focusItemAtIndex(o)},focusedItemIndex:n||this.focusedItemIndex,nextChar:t,sortedIndexByFirstChar:this.sortedIndexByFirstChar,skipFocus:i,isItemAtIndexDisabled:function(o){return r.isIndexDisabled(o)}};return Vu(a,this.typeaheadState)},e.prototype.typeaheadInitSortedIndex=function(){return AA(this.adapter.getListItemCount(),this.adapter.getPrimaryTextAtIndex)},e.prototype.clearTypeaheadBuffer=function(){Eg(this.typeaheadState)},e}(kh);/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */var Vn={ANIMATE:"mdc-drawer--animate",CLOSING:"mdc-drawer--closing",DISMISSIBLE:"mdc-drawer--dismissible",MODAL:"mdc-drawer--modal",OPEN:"mdc-drawer--open",OPENING:"mdc-drawer--opening",ROOT:"mdc-drawer"},LA={APP_CONTENT_SELECTOR:".mdc-drawer-app-content",CLOSE_EVENT:"MDCDrawer:closed",OPEN_EVENT:"MDCDrawer:opened",SCRIM_SELECTOR:".mdc-drawer-scrim",LIST_SELECTOR:".mdc-list,.mdc-deprecated-list",LIST_ITEM_ACTIVATED_SELECTOR:".mdc-list-item--activated,.mdc-deprecated-list-item--activated"};/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */var Ag=function(s){oc(e,s);function e(t){var n=s.call(this,es(es({},e.defaultAdapter),t))||this;return n.animationFrame=0,n.animationTimer=0,n}return Object.defineProperty(e,"strings",{get:function(){return LA},enumerable:!1,configurable:!0}),Object.defineProperty(e,"cssClasses",{get:function(){return Vn},enumerable:!1,configurable:!0}),Object.defineProperty(e,"defaultAdapter",{get:function(){return{addClass:function(){},removeClass:function(){},hasClass:function(){return!1},elementHasClass:function(){return!1},notifyClose:function(){},notifyOpen:function(){},saveFocus:function(){},restoreFocus:function(){},focusActiveNavigationItem:function(){},trapFocus:function(){},releaseFocus:function(){}}},enumerable:!1,configurable:!0}),e.prototype.destroy=function(){this.animationFrame&&cancelAnimationFrame(this.animationFrame),this.animationTimer&&clearTimeout(this.animationTimer)},e.prototype.open=function(){var t=this;this.isOpen()||this.isOpening()||this.isClosing()||(this.adapter.addClass(Vn.OPEN),this.adapter.addClass(Vn.ANIMATE),this.runNextAnimationFrame(function(){t.adapter.addClass(Vn.OPENING)}),this.adapter.saveFocus())},e.prototype.close=function(){!this.isOpen()||this.isOpening()||this.isClosing()||this.adapter.addClass(Vn.CLOSING)},e.prototype.isOpen=function(){return this.adapter.hasClass(Vn.OPEN)},e.prototype.isOpening=function(){return this.adapter.hasClass(Vn.OPENING)||this.adapter.hasClass(Vn.ANIMATE)},e.prototype.isClosing=function(){return this.adapter.hasClass(Vn.CLOSING)},e.prototype.handleKeydown=function(t){var n=t.keyCode,i=t.key,r=i==="Escape"||n===27;r&&this.close()},e.prototype.handleTransitionEnd=function(t){var n=Vn.OPENING,i=Vn.CLOSING,r=Vn.OPEN,a=Vn.ANIMATE,o=Vn.ROOT,l=this.isElement(t.target)&&this.adapter.elementHasClass(t.target,o);l&&(this.isClosing()?(this.adapter.removeClass(r),this.closed(),this.adapter.restoreFocus(),this.adapter.notifyClose()):(this.adapter.focusActiveNavigationItem(),this.opened(),this.adapter.notifyOpen()),this.adapter.removeClass(a),this.adapter.removeClass(n),this.adapter.removeClass(i))},e.prototype.opened=function(){},e.prototype.closed=function(){},e.prototype.runNextAnimationFrame=function(t){var n=this;cancelAnimationFrame(this.animationFrame),this.animationFrame=requestAnimationFrame(function(){n.animationFrame=0,clearTimeout(n.animationTimer),n.animationTimer=setTimeout(t,0)})},e.prototype.isElement=function(t){return!!t.classList},e}(kh);/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */var PA=function(s){oc(e,s);function e(){return s!==null&&s.apply(this,arguments)||this}return e.prototype.handleScrimClick=function(){this.close()},e.prototype.opened=function(){this.adapter.trapFocus()},e.prototype.closed=function(){this.adapter.releaseFocus()},e}(Ag);/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */function DA(s){return s===void 0&&(s=window),NA(s)?{passive:!0}:!1}function NA(s){s===void 0&&(s=window);var e=!1;try{var t={get passive(){return e=!0,!1}},n=function(){};s.document.addEventListener("test",n,t),s.document.removeEventListener("test",n,t)}catch{e=!1}return e}const UA=Object.freeze(Object.defineProperty({__proto__:null,applyPassive:DA},Symbol.toStringTag,{value:"Module"}));function ti(s){return Object.entries(s).filter(([e,t])=>e!==""&&t).map(([e])=>e).join(" ")}function ys(s,e,t,n={bubbles:!0},i=!1){if(typeof Event>"u")throw new Error("Event not defined.");if(!s)throw new Error("Tried to dipatch event without element.");const r=new CustomEvent(e,Object.assign(Object.assign({},n),{detail:t}));if(s==null||s.dispatchEvent(r),i&&e.startsWith("SMUI")){const a=new CustomEvent(e.replace(/^SMUI/g,()=>"MDC"),Object.assign(Object.assign({},n),{detail:t}));s==null||s.dispatchEvent(a),a.defaultPrevented&&r.preventDefault()}return r}const qd=/^[a-z]+(?::(?:preventDefault|stopPropagation|passive|nonpassive|capture|once|self))+$/,OA=/^[^$]+(?:\$(?:preventDefault|stopPropagation|passive|nonpassive|capture|once|self))+$/;function ra(s){let e,t=[];s.$on=(i,r)=>{let a=i,o=()=>{};return e?o=e(a,r):t.push([a,r]),a.match(qd)&&console&&console.warn('Event modifiers in SMUI now use "$" instead of ":", so that all events can be bound with modifiers. Please update your event binding: ',a),()=>{o()}};function n(i){const r=s.$$.callbacks[i.type];r&&r.slice().forEach(a=>a.call(this,i))}return i=>{const r=[],a={};e=(o,l)=>{let c=o,u=l,h=!1;const f=c.match(qd),d=c.match(OA),p=f||d;if(c.match(/^SMUI:\w+:/)){const m=c.split(":");let y="";for(let v=0;v<m.length;v++)y+=v===m.length-1?":"+m[v]:m[v].split("-").map(x=>x.slice(0,1).toUpperCase()+x.slice(1)).join("");console.warn(`The event ${c.split("$")[0]} has been renamed to ${y.split("$")[0]}.`),c=y}if(p){const m=c.split(f?":":"$");c=m[0];const y=m.slice(1).reduce((v,x)=>(v[x]=!0,v),{});y.passive&&(h=h||{},h.passive=!0),y.nonpassive&&(h=h||{},h.passive=!1),y.capture&&(h=h||{},h.capture=!0),y.once&&(h=h||{},h.once=!0),y.preventDefault&&(u=FA(u)),y.stopPropagation&&(u=kA(u)),y.stopImmediatePropagation&&(u=BA(u)),y.self&&(u=zA(i,u)),y.trusted&&(u=HA(u))}const _=Yd(i,c,u,h),g=()=>{_();const m=r.indexOf(g);m>-1&&r.splice(m,1)};return r.push(g),c in a||(a[c]=Yd(i,c,n)),g};for(let o=0;o<t.length;o++)e(t[o][0],t[o][1]);return{destroy:()=>{for(let o=0;o<r.length;o++)r[o]();for(let o of Object.entries(a))o[1]()}}}}function Yd(s,e,t,n){return s.addEventListener(e,t,n),()=>s.removeEventListener(e,t,n)}function FA(s){return function(e){return e.preventDefault(),s.call(this,e)}}function kA(s){return function(e){return e.stopPropagation(),s.call(this,e)}}function BA(s){return function(e){return e.stopImmediatePropagation(),s.call(this,e)}}function zA(s,e){return function(t){if(t.target===s)return e.call(this,t)}}function HA(s){return function(e){if(e.isTrusted)return s.call(this,e)}}function io(s,e){let t=[];if(e)for(let n=0;n<e.length;n++){const i=e[n],r=Array.isArray(i)?i[0]:i;Array.isArray(i)&&i.length>1?t.push(r(s,i[1])):t.push(r(s))}return{update(n){if((n&&n.length||0)!=t.length)throw new Error("You must not change the length of an actions array.");if(n)for(let i=0;i<n.length;i++){const r=t[i];if(r&&r.update){const a=n[i];Array.isArray(a)&&a.length>1?r.update(a[1]):r.update()}}},destroy(){for(let n=0;n<t.length;n++){const i=t[n];i&&i.destroy&&i.destroy()}}}}function GA(s){let e,t,n,i,r,a;const o=s[15].default,l=Un(o,s,s[14],null);let c=[{class:t=ti({[s[1]]:!0,"mdc-drawer":!0,"mdc-drawer--dismissible":s[2]==="dismissible","mdc-drawer--modal":s[2]==="modal","smui-drawer__absolute":s[2]==="modal"&&!s[3],...s[6]})},s[8]],u={};for(let h=0;h<c.length;h+=1)u=Ut(u,c[h]);return{c(){e=bs("aside"),l&&l.c(),this.h()},l(h){e=Ss(h,"ASIDE",{class:!0});var f=ss(e);l&&l.l(f),f.forEach(Ue),this.h()},h(){vl(e,u)},m(h,f){Ge(h,e,f),l&&l.m(e,null),s[16](e),i=!0,r||(a=[di(n=io.call(null,e,s[0])),di(s[7].call(null,e)),eu(e,"keydown",function(){Js(s[4]&&s[4].handleKeydown.bind(s[4]))&&(s[4]&&s[4].handleKeydown.bind(s[4])).apply(this,arguments)}),eu(e,"transitionend",function(){Js(s[4]&&s[4].handleTransitionEnd.bind(s[4]))&&(s[4]&&s[4].handleTransitionEnd.bind(s[4])).apply(this,arguments)})],r=!0)},p(h,[f]){s=h,l&&l.p&&(!i||f&16384)&&On(l,o,s,s[14],i?kn(o,s[14],f,null):Fn(s[14]),null),vl(e,u=ni(c,[(!i||f&78&&t!==(t=ti({[s[1]]:!0,"mdc-drawer":!0,"mdc-drawer--dismissible":s[2]==="dismissible","mdc-drawer--modal":s[2]==="modal","smui-drawer__absolute":s[2]==="modal"&&!s[3],...s[6]})))&&{class:t},f&256&&s[8]])),n&&Js(n.update)&&f&1&&n.update.call(null,s[0])},i(h){i||(re(l,h),i=!0)},o(h){me(l,h),i=!1},d(h){h&&Ue(e),l&&l.d(h),s[16](null),r=!1,qa(a)}}}function VA(s,e,t){const n=["use","class","variant","open","fixed","setOpen","isOpen","getElement"];let i=bn(e,n),{$$slots:r={},$$scope:a}=e;const{FocusTrap:o}=xA,l=ra(Ii());let{use:c=[]}=e,{class:u=""}=e,{variant:h=void 0}=e,{open:f=!1}=e,{fixed:d=!0}=e,p,_,g={},m=null,y,v=!1;qt("SMUI:list:nav",!0),qt("SMUI:list:item:nav",!0),qt("SMUI:list:wrapFocus",!0);let x=h;ar(()=>{y=new o(p,{skipInitialFocus:!0}),t(4,_=E()),_&&_.init()}),cn(()=>{_&&_.destroy(),v&&v.removeEventListener("SMUIDrawerScrim:click",M)});function E(){var F,H;v&&v.removeEventListener("SMUIDrawerScrim:click",M),h==="modal"&&(v=(H=(F=p.parentNode)===null||F===void 0?void 0:F.querySelector(".mdc-drawer-scrim"))!==null&&H!==void 0?H:!1,v&&v.addEventListener("SMUIDrawerScrim:click",M));const B=h==="dismissible"?Ag:h==="modal"?PA:void 0;return B?new B({addClass:A,removeClass:P,hasClass:w,elementHasClass:(q,ee)=>q.classList.contains(ee),saveFocus:()=>m=document.activeElement,restoreFocus:()=>{m&&"focus"in m&&p.contains(document.activeElement)&&m.focus()},focusActiveNavigationItem:()=>{const q=p.querySelector(".mdc-list-item--activated,.mdc-deprecated-list-item--activated");q&&q.focus()},notifyClose:()=>{t(9,f=!1),ys(p,"SMUIDrawer:closed",void 0,void 0,!0)},notifyOpen:()=>{t(9,f=!0),ys(p,"SMUIDrawer:opened",void 0,void 0,!0)},trapFocus:()=>y.trapFocus(),releaseFocus:()=>y.releaseFocus()}):void 0}function w(F){return F in g?g[F]:j().classList.contains(F)}function A(F){g[F]||t(6,g[F]=!0,g)}function P(F){(!(F in g)||g[F])&&t(6,g[F]=!1,g)}function M(){_&&"handleScrimClick"in _&&_.handleScrimClick()}function R(F){t(9,f=F)}function V(){return f}function j(){return p}function ne(F){fi[F?"unshift":"push"](()=>{p=F,t(5,p)})}return s.$$set=F=>{e=Ut(Ut({},e),Ti(F)),t(8,i=bn(e,n)),"use"in F&&t(0,c=F.use),"class"in F&&t(1,u=F.class),"variant"in F&&t(2,h=F.variant),"open"in F&&t(9,f=F.open),"fixed"in F&&t(3,d=F.fixed),"$$scope"in F&&t(14,a=F.$$scope)},s.$$.update=()=>{s.$$.dirty&8212&&x!==h&&(t(13,x=h),_&&_.destroy(),t(6,g={}),t(4,_=E()),_&&_.init()),s.$$.dirty&528&&_&&_.isOpen()!==f&&(f?_.open():_.close())},[c,u,h,d,_,p,g,l,i,f,R,V,j,x,a,r,ne]}class WA extends Zt{constructor(e){super(),Jt(this,e,VA,GA,Ht,{use:0,class:1,variant:2,open:9,fixed:3,setOpen:10,isOpen:11,getElement:12})}get setOpen(){return this.$$.ctx[10]}get isOpen(){return this.$$.ctx[11]}get getElement(){return this.$$.ctx[12]}}function XA(s){let e=s[1],t,n,i=s[1]&&Jc(s);return{c(){i&&i.c(),t=dt()},l(r){i&&i.l(r),t=dt()},m(r,a){i&&i.m(r,a),Ge(r,t,a),n=!0},p(r,a){r[1]?e?Ht(e,r[1])?(i.d(1),i=Jc(r),e=r[1],i.c(),i.m(t.parentNode,t)):i.p(r,a):(i=Jc(r),e=r[1],i.c(),i.m(t.parentNode,t)):e&&(i.d(1),i=null,e=r[1])},i(r){n||(re(i,r),n=!0)},o(r){me(i,r),n=!1},d(r){r&&Ue(t),i&&i.d(r)}}}function qA(s){let e=s[1],t,n=s[1]&&Kc(s);return{c(){n&&n.c(),t=dt()},l(i){n&&n.l(i),t=dt()},m(i,r){n&&n.m(i,r),Ge(i,t,r)},p(i,r){i[1]?e?Ht(e,i[1])?(n.d(1),n=Kc(i),e=i[1],n.c(),n.m(t.parentNode,t)):n.p(i,r):(n=Kc(i),e=i[1],n.c(),n.m(t.parentNode,t)):e&&(n.d(1),n=null,e=i[1])},i:kt,o:kt,d(i){i&&Ue(t),n&&n.d(i)}}}function YA(s){let e,t,n,i,r;const a=s[8].default,o=Un(a,s,s[7],null);let l=[s[5]],c={};for(let u=0;u<l.length;u+=1)c=Ut(c,l[u]);return{c(){e=Fg("svg"),o&&o.c(),this.h()},l(u){e=kg(u,"svg",{});var h=ss(e);o&&o.l(h),h.forEach(Ue),this.h()},h(){Xh(e,c)},m(u,h){Ge(u,e,h),o&&o.m(e,null),s[9](e),n=!0,i||(r=[di(t=io.call(null,e,s[0])),di(s[4].call(null,e))],i=!0)},p(u,h){o&&o.p&&(!n||h&128)&&On(o,a,u,u[7],n?kn(a,u[7],h,null):Fn(u[7]),null),Xh(e,c=ni(l,[h&32&&u[5]])),t&&Js(t.update)&&h&1&&t.update.call(null,u[0])},i(u){n||(re(o,u),n=!0)},o(u){me(o,u),n=!1},d(u){u&&Ue(e),o&&o.d(u),s[9](null),i=!1,qa(r)}}}function Jc(s){let e,t,n,i,r;const a=s[8].default,o=Un(a,s,s[7],null);let l=[s[5]],c={};for(let u=0;u<l.length;u+=1)c=Ut(c,l[u]);return{c(){e=bs(s[1]),o&&o.c(),this.h()},l(u){e=Ss(u,(s[1]||"null").toUpperCase(),{});var h=ss(e);o&&o.l(h),h.forEach(Ue),this.h()},h(){yl(s[1])(e,c)},m(u,h){Ge(u,e,h),o&&o.m(e,null),s[11](e),n=!0,i||(r=[di(t=io.call(null,e,s[0])),di(s[4].call(null,e))],i=!0)},p(u,h){o&&o.p&&(!n||h&128)&&On(o,a,u,u[7],n?kn(a,u[7],h,null):Fn(u[7]),null),yl(u[1])(e,c=ni(l,[h&32&&u[5]])),t&&Js(t.update)&&h&1&&t.update.call(null,u[0])},i(u){n||(re(o,u),n=!0)},o(u){me(o,u),n=!1},d(u){u&&Ue(e),o&&o.d(u),s[11](null),i=!1,qa(r)}}}function Kc(s){let e,t,n,i,r=[s[5]],a={};for(let o=0;o<r.length;o+=1)a=Ut(a,r[o]);return{c(){e=bs(s[1]),this.h()},l(o){e=Ss(o,(s[1]||"null").toUpperCase(),{}),ss(e).forEach(Ue),this.h()},h(){yl(s[1])(e,a)},m(o,l){Ge(o,e,l),s[10](e),n||(i=[di(t=io.call(null,e,s[0])),di(s[4].call(null,e))],n=!0)},p(o,l){yl(o[1])(e,a=ni(r,[l&32&&o[5]])),t&&Js(t.update)&&l&1&&t.update.call(null,o[0])},d(o){o&&Ue(e),s[10](null),n=!1,qa(i)}}}function jA(s){let e,t,n,i;const r=[YA,qA,XA],a=[];function o(l,c){return l[1]==="svg"?0:l[3]?1:2}return e=o(s),t=a[e]=r[e](s),{c(){t.c(),n=dt()},l(l){t.l(l),n=dt()},m(l,c){a[e].m(l,c),Ge(l,n,c),i=!0},p(l,[c]){let u=e;e=o(l),e===u?a[e].p(l,c):(pn(),me(a[u],1,1,()=>{a[u]=null}),mn(),t=a[e],t?t.p(l,c):(t=a[e]=r[e](l),t.c()),re(t,1),t.m(n.parentNode,n))},i(l){i||(re(t),i=!0)},o(l){me(t),i=!1},d(l){l&&Ue(n),a[e].d(l)}}}function ZA(s,e,t){let n;const i=["use","tag","getElement"];let r=bn(e,i),{$$slots:a={},$$scope:o}=e,{use:l=[]}=e,{tag:c}=e;const u=ra(Ii());let h;function f(){return h}function d(g){fi[g?"unshift":"push"](()=>{h=g,t(2,h)})}function p(g){fi[g?"unshift":"push"](()=>{h=g,t(2,h)})}function _(g){fi[g?"unshift":"push"](()=>{h=g,t(2,h)})}return s.$$set=g=>{e=Ut(Ut({},e),Ti(g)),t(5,r=bn(e,i)),"use"in g&&t(0,l=g.use),"tag"in g&&t(1,c=g.tag),"$$scope"in g&&t(7,o=g.$$scope)},s.$$.update=()=>{s.$$.dirty&2&&t(3,n=["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"].indexOf(c)>-1)},[l,c,h,n,u,r,f,o,a,d,p,_]}class Qr extends Zt{constructor(e){super(),Jt(this,e,ZA,jA,Ht,{use:0,tag:1,getElement:6})}get getElement(){return this.$$.ctx[6]}}function JA(s){let e;const t=s[11].default,n=Un(t,s,s[13],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&8192)&&On(n,t,i,i[13],e?kn(t,i[13],r,null):Fn(i[13]),null)},i(i){e||(re(n,i),e=!0)},o(i){me(n,i),e=!1},d(i){n&&n.d(i)}}}function KA(s){let e,t,n;const i=[{tag:s[3]},{use:[s[8],...s[0]]},{class:ti({[s[1]]:!0,[s[6]]:!0,...s[5]})},s[7],s[9]];var r=s[2];function a(o,l){let c={$$slots:{default:[JA]},$$scope:{ctx:o}};if(l!==void 0&&l&1003)c=ni(i,[l&8&&{tag:o[3]},l&257&&{use:[o[8],...o[0]]},l&98&&{class:ti({[o[1]]:!0,[o[6]]:!0,...o[5]})},l&128&&en(o[7]),l&512&&en(o[9])]);else for(let u=0;u<i.length;u+=1)c=Ut(c,i[u]);return{props:c}}return r&&(e=Yr(r,a(s)),s[12](e)),{c(){e&&Ve(e.$$.fragment),t=dt()},l(o){e&&Je(e.$$.fragment,o),t=dt()},m(o,l){e&&We(e,o,l),Ge(o,t,l),n=!0},p(o,[l]){if(l&4&&r!==(r=o[2])){if(e){pn();const c=e;me(c.$$.fragment,1,0,()=>{Xe(c,1)}),mn()}r?(e=Yr(r,a(o,l)),o[12](e),Ve(e.$$.fragment),re(e.$$.fragment,1),We(e,t.parentNode,t)):e=null}else if(r){const c=l&1003?ni(i,[l&8&&{tag:o[3]},l&257&&{use:[o[8],...o[0]]},l&98&&{class:ti({[o[1]]:!0,[o[6]]:!0,...o[5]})},l&128&&en(o[7]),l&512&&en(o[9])]):{};l&8192&&(c.$$scope={dirty:l,ctx:o}),e.$set(c)}},i(o){n||(e&&re(e.$$.fragment,o),n=!0)},o(o){e&&me(e.$$.fragment,o),n=!1},d(o){o&&Ue(t),s[12](null),e&&Xe(e,o)}}}const qi={component:Qr,tag:"div",class:"",classMap:{},contexts:{},props:{}};function $A(s,e,t){const n=["use","class","component","tag","getElement"];let i=bn(e,n),{$$slots:r={},$$scope:a}=e,{use:o=[]}=e,{class:l=""}=e,c;const u=qi.class,h={},f=[],d=qi.contexts,p=qi.props;let{component:_=qi.component}=e,{tag:g=_===Qr?qi.tag:void 0}=e;Object.entries(qi.classMap).forEach(([x,E])=>{const w=sn(E);w&&"subscribe"in w&&f.push(w.subscribe(A=>{t(5,h[x]=A,h)}))});const m=ra(Ii());for(let x in d)d.hasOwnProperty(x)&&qt(x,d[x]);cn(()=>{for(const x of f)x()});function y(){return c.getElement()}function v(x){fi[x?"unshift":"push"](()=>{c=x,t(4,c)})}return s.$$set=x=>{e=Ut(Ut({},e),Ti(x)),t(9,i=bn(e,n)),"use"in x&&t(0,o=x.use),"class"in x&&t(1,l=x.class),"component"in x&&t(2,_=x.component),"tag"in x&&t(3,g=x.tag),"$$scope"in x&&t(13,a=x.$$scope)},[o,l,_,g,c,h,u,p,m,i,y,r,v,a]}class QA extends Zt{constructor(e){super(),Jt(this,e,$A,KA,Ht,{use:0,class:1,component:2,tag:3,getElement:10})}get getElement(){return this.$$.ctx[10]}}const jd=Object.assign({},qi);function xi(s){return new Proxy(QA,{construct:function(e,t){return Object.assign(qi,jd,s),new e(...t)},get:function(e,t){return Object.assign(qi,jd,s),e[t]}})}const e1=xi({class:"mdc-drawer-app-content",tag:"div"}),t1=xi({class:"mdc-drawer__content",tag:"div"});xi({class:"mdc-drawer__header",tag:"div"});xi({class:"mdc-drawer__title",tag:"h1"});xi({class:"mdc-drawer__subtitle",tag:"h2"});function n1(s){let e;const t=s[42].default,n=Un(t,s,s[44],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r[1]&8192)&&On(n,t,i,i[44],e?kn(t,i[44],r,null):Fn(i[44]),null)},i(i){e||(re(n,i),e=!0)},o(i){me(n,i),e=!1},d(i){n&&n.d(i)}}}function i1(s){let e,t,n;const i=[{tag:s[13]},{use:[s[16],...s[0]]},{class:ti({[s[1]]:!0,"mdc-deprecated-list":!0,"mdc-deprecated-list--non-interactive":s[2],"mdc-deprecated-list--dense":s[3],"mdc-deprecated-list--textual-list":s[4],"mdc-deprecated-list--avatar-list":s[5]||s[17],"mdc-deprecated-list--icon-list":s[6],"mdc-deprecated-list--image-list":s[7],"mdc-deprecated-list--thumbnail-list":s[8],"mdc-deprecated-list--video-list":s[9],"mdc-deprecated-list--two-line":s[10],"smui-list--three-line":s[11]&&!s[10]})},{role:s[15]},s[25]];var r=s[12];function a(o,l){let c={$$slots:{default:[n1]},$$scope:{ctx:o}};if(l!==void 0&&l[0]&33796095)c=ni(i,[l[0]&8192&&{tag:o[13]},l[0]&65537&&{use:[o[16],...o[0]]},l[0]&135166&&{class:ti({[o[1]]:!0,"mdc-deprecated-list":!0,"mdc-deprecated-list--non-interactive":o[2],"mdc-deprecated-list--dense":o[3],"mdc-deprecated-list--textual-list":o[4],"mdc-deprecated-list--avatar-list":o[5]||o[17],"mdc-deprecated-list--icon-list":o[6],"mdc-deprecated-list--image-list":o[7],"mdc-deprecated-list--thumbnail-list":o[8],"mdc-deprecated-list--video-list":o[9],"mdc-deprecated-list--two-line":o[10],"smui-list--three-line":o[11]&&!o[10]})},l[0]&32768&&{role:o[15]},l[0]&33554432&&en(o[25])]);else for(let u=0;u<i.length;u+=1)c=Ut(c,i[u]);return{props:c}}return r&&(e=Yr(r,a(s)),s[43](e),e.$on("keydown",s[20]),e.$on("focusin",s[21]),e.$on("focusout",s[22]),e.$on("click",s[23]),e.$on("SMUIListItem:mount",s[18]),e.$on("SMUIListItem:unmount",s[19]),e.$on("SMUI:action",s[24])),{c(){e&&Ve(e.$$.fragment),t=dt()},l(o){e&&Je(e.$$.fragment,o),t=dt()},m(o,l){e&&We(e,o,l),Ge(o,t,l),n=!0},p(o,l){if(l[0]&4096&&r!==(r=o[12])){if(e){pn();const c=e;me(c.$$.fragment,1,0,()=>{Xe(c,1)}),mn()}r?(e=Yr(r,a(o,l)),o[43](e),e.$on("keydown",o[20]),e.$on("focusin",o[21]),e.$on("focusout",o[22]),e.$on("click",o[23]),e.$on("SMUIListItem:mount",o[18]),e.$on("SMUIListItem:unmount",o[19]),e.$on("SMUI:action",o[24]),Ve(e.$$.fragment),re(e.$$.fragment,1),We(e,t.parentNode,t)):e=null}else if(r){const c=l[0]&33796095?ni(i,[l[0]&8192&&{tag:o[13]},l[0]&65537&&{use:[o[16],...o[0]]},l[0]&135166&&{class:ti({[o[1]]:!0,"mdc-deprecated-list":!0,"mdc-deprecated-list--non-interactive":o[2],"mdc-deprecated-list--dense":o[3],"mdc-deprecated-list--textual-list":o[4],"mdc-deprecated-list--avatar-list":o[5]||o[17],"mdc-deprecated-list--icon-list":o[6],"mdc-deprecated-list--image-list":o[7],"mdc-deprecated-list--thumbnail-list":o[8],"mdc-deprecated-list--video-list":o[9],"mdc-deprecated-list--two-line":o[10],"smui-list--three-line":o[11]&&!o[10]})},l[0]&32768&&{role:o[15]},l[0]&33554432&&en(o[25])]):{};l[1]&8192&&(c.$$scope={dirty:l,ctx:o}),e.$set(c)}},i(o){n||(e&&re(e.$$.fragment,o),n=!0)},o(o){e&&me(e.$$.fragment,o),n=!1},d(o){o&&Ue(t),s[43](null),e&&Xe(e,o)}}}function s1(s,e,t){const n=["use","class","nonInteractive","dense","textualList","avatarList","iconList","imageList","thumbnailList","videoList","twoLine","threeLine","vertical","wrapFocus","singleSelection","disabledItemsFocusable","selectedIndex","radioList","checkList","hasTypeahead","component","tag","layout","setEnabled","getTypeaheadInProgress","getSelectedIndex","getFocusedItemIndex","focusItemAtIndex","getElement"];let i=bn(e,n),{$$slots:r={},$$scope:a}=e;var o;const{closest:l,matches:c}=Sg,u=ra(Ii());let{use:h=[]}=e,{class:f=""}=e,{nonInteractive:d=!1}=e,{dense:p=!1}=e,{textualList:_=!1}=e,{avatarList:g=!1}=e,{iconList:m=!1}=e,{imageList:y=!1}=e,{thumbnailList:v=!1}=e,{videoList:x=!1}=e,{twoLine:E=!1}=e,{threeLine:w=!1}=e,{vertical:A=!0}=e,{wrapFocus:P=(o=sn("SMUI:list:wrapFocus"))!==null&&o!==void 0?o:!1}=e,{singleSelection:M=!1}=e,{disabledItemsFocusable:R=!1}=e,{selectedIndex:V=-1}=e,{radioList:j=!1}=e,{checkList:ne=!1}=e,{hasTypeahead:F=!1}=e,H,B,q=[],ee=sn("SMUI:list:role"),Z=sn("SMUI:list:nav");const ie=new WeakMap;let G=sn("SMUI:dialog:selection"),Y=sn("SMUI:addLayoutListener"),ce,{component:ae=Qr}=e,{tag:ue=ae===Qr?Z?"nav":"ul":void 0}=e;qt("SMUI:list:nonInteractive",d),qt("SMUI:separator:context","list"),ee||(M?(ee="listbox",qt("SMUI:list:item:role","option")):j?(ee="radiogroup",qt("SMUI:list:item:role","radio")):ne?(ee="group",qt("SMUI:list:item:role","checkbox")):(ee="list",qt("SMUI:list:item:role",void 0))),Y&&(ce=Y(Lt)),ar(()=>{t(41,B=new IA({addClassForElementIndex:X,focusItemAtIndex:be,getAttributeForElementIndex:(se,U)=>{var ve,_e;return(_e=(ve=xe()[se])===null||ve===void 0?void 0:ve.getAttr(U))!==null&&_e!==void 0?_e:null},getFocusedElementIndex:()=>document.activeElement?xe().map(se=>se.element).indexOf(document.activeElement):-1,getListItemCount:()=>q.length,getPrimaryTextAtIndex:tt,hasCheckboxAtIndex:se=>{var U,ve;return(ve=(U=xe()[se])===null||U===void 0?void 0:U.hasCheckbox)!==null&&ve!==void 0?ve:!1},hasRadioAtIndex:se=>{var U,ve;return(ve=(U=xe()[se])===null||U===void 0?void 0:U.hasRadio)!==null&&ve!==void 0?ve:!1},isCheckboxCheckedAtIndex:se=>{var U;const ve=xe()[se];return(U=(ve==null?void 0:ve.hasCheckbox)&&ve.checked)!==null&&U!==void 0?U:!1},isFocusInsideList:()=>H!=null&&Me()!==document.activeElement&&Me().contains(document.activeElement),isRootFocused:()=>H!=null&&document.activeElement===Me(),listItemAtIndexHasClass:de,notifyAction:se=>{t(26,V=se),H!=null&&ys(Me(),"SMUIList:action",{index:se},void 0,!0)},notifySelectionChange:se=>{H!=null&&ys(Me(),"SMUIList:selectionChange",{changedIndices:se})},removeClassForElementIndex:Q,setAttributeForElementIndex:Le,setCheckedCheckboxOrRadioAtIndex:(se,U)=>{xe()[se].checked=U},setTabIndexForListItemChildren:(se,U)=>{const ve=xe()[se],_e="button:not(:disabled), a";Array.prototype.forEach.call(ve.element.querySelectorAll(_e),ot=>{ot.setAttribute("tabindex",U)})}}));const W={get element(){return Me()},get items(){return q},get typeaheadInProgress(){return B.isTypeaheadInProgress()},typeaheadMatchItem(se,U){return B.typeaheadMatchItem(se,U,!0)},getOrderedList:xe,focusItemAtIndex:be,addClassForElementIndex:X,removeClassForElementIndex:Q,setAttributeForElementIndex:Le,removeAttributeForElementIndex:Ne,getAttributeFromElementIndex:Fe,getPrimaryTextAtIndex:tt};return ys(Me(),"SMUIList:mount",W),B.init(),B.layout(),()=>{B.destroy()}}),cn(()=>{ce&&ce()});function he(W){q.push(W.detail),ie.set(W.detail.element,W.detail),M&&W.detail.selected&&t(26,V=mt(W.detail.element)),W.stopPropagation()}function ye(W){var se;const U=(se=W.detail&&q.indexOf(W.detail))!==null&&se!==void 0?se:-1;U!==-1&&(q.splice(U,1),q=q,ie.delete(W.detail.element)),W.stopPropagation()}function we(W){B&&W.target&&B.handleKeydown(W,W.target.classList.contains("mdc-deprecated-list-item"),mt(W.target))}function ge(W){B&&W.target&&B.handleFocusIn(mt(W.target))}function et(W){B&&W.target&&B.handleFocusOut(mt(W.target))}function Ke(W){B&&W.target&&B.handleClick(mt(W.target),!c(W.target,'input[type="checkbox"], input[type="radio"]'),W)}function k(W){if(j||ne){const se=mt(W.target);if(se!==-1){const U=xe()[se];U&&(j&&!U.checked||ne)&&(c(W.detail.target,'input[type="checkbox"], input[type="radio"]')||(U.checked=!U.checked),U.activateRipple(),window.requestAnimationFrame(()=>{U.deactivateRipple()}))}}}function xe(){return H==null?[]:[...Me().children].map(W=>ie.get(W)).filter(W=>W&&W._smui_list_item_accessor)}function de(W,se){var U;const ve=xe()[W];return(U=ve&&ve.hasClass(se))!==null&&U!==void 0?U:!1}function X(W,se){const U=xe()[W];U&&U.addClass(se)}function Q(W,se){const U=xe()[W];U&&U.removeClass(se)}function Le(W,se,U){const ve=xe()[W];ve&&ve.addAttr(se,U)}function Ne(W,se){const U=xe()[W];U&&U.removeAttr(se)}function Fe(W,se){const U=xe()[W];return U?U.getAttr(se):null}function tt(W){var se;const U=xe()[W];return(se=U&&U.getPrimaryText())!==null&&se!==void 0?se:""}function mt(W){const se=l(W,".mdc-deprecated-list-item, .mdc-deprecated-list");return se&&c(se,".mdc-deprecated-list-item")?xe().map(U=>U==null?void 0:U.element).indexOf(se):-1}function Lt(){return B.layout()}function O(W,se){return B.setEnabled(W,se)}function C(){return B.isTypeaheadInProgress()}function K(){return B.getSelectedIndex()}function Ae(){return B.getFocusedItemIndex()}function be(W){const se=xe()[W];se&&"focus"in se.element&&se.element.focus()}function Me(){return H.getElement()}function qe(W){fi[W?"unshift":"push"](()=>{H=W,t(14,H)})}return s.$$set=W=>{e=Ut(Ut({},e),Ti(W)),t(25,i=bn(e,n)),"use"in W&&t(0,h=W.use),"class"in W&&t(1,f=W.class),"nonInteractive"in W&&t(2,d=W.nonInteractive),"dense"in W&&t(3,p=W.dense),"textualList"in W&&t(4,_=W.textualList),"avatarList"in W&&t(5,g=W.avatarList),"iconList"in W&&t(6,m=W.iconList),"imageList"in W&&t(7,y=W.imageList),"thumbnailList"in W&&t(8,v=W.thumbnailList),"videoList"in W&&t(9,x=W.videoList),"twoLine"in W&&t(10,E=W.twoLine),"threeLine"in W&&t(11,w=W.threeLine),"vertical"in W&&t(27,A=W.vertical),"wrapFocus"in W&&t(28,P=W.wrapFocus),"singleSelection"in W&&t(29,M=W.singleSelection),"disabledItemsFocusable"in W&&t(30,R=W.disabledItemsFocusable),"selectedIndex"in W&&t(26,V=W.selectedIndex),"radioList"in W&&t(31,j=W.radioList),"checkList"in W&&t(32,ne=W.checkList),"hasTypeahead"in W&&t(33,F=W.hasTypeahead),"component"in W&&t(12,ae=W.component),"tag"in W&&t(13,ue=W.tag),"$$scope"in W&&t(44,a=W.$$scope)},s.$$.update=()=>{s.$$.dirty[0]&134217728|s.$$.dirty[1]&1024&&B&&B.setVerticalOrientation(A),s.$$.dirty[0]&268435456|s.$$.dirty[1]&1024&&B&&B.setWrapFocus(P),s.$$.dirty[1]&1028&&B&&B.setHasTypeahead(F),s.$$.dirty[0]&536870912|s.$$.dirty[1]&1024&&B&&B.setSingleSelection(M),s.$$.dirty[0]&1073741824|s.$$.dirty[1]&1024&&B&&B.setDisabledItemsFocusable(R),s.$$.dirty[0]&603979776|s.$$.dirty[1]&1024&&B&&M&&K()!==V&&B.setSelectedIndex(V)},[h,f,d,p,_,g,m,y,v,x,E,w,ae,ue,H,ee,u,G,he,ye,we,ge,et,Ke,k,i,V,A,P,M,R,j,ne,F,Lt,O,C,K,Ae,be,Me,B,r,qe,a]}class Bh extends Zt{constructor(e){super(),Jt(this,e,s1,i1,Ht,{use:0,class:1,nonInteractive:2,dense:3,textualList:4,avatarList:5,iconList:6,imageList:7,thumbnailList:8,videoList:9,twoLine:10,threeLine:11,vertical:27,wrapFocus:28,singleSelection:29,disabledItemsFocusable:30,selectedIndex:26,radioList:31,checkList:32,hasTypeahead:33,component:12,tag:13,layout:34,setEnabled:35,getTypeaheadInProgress:36,getSelectedIndex:37,getFocusedItemIndex:38,focusItemAtIndex:39,getElement:40},null,[-1,-1])}get layout(){return this.$$.ctx[34]}get setEnabled(){return this.$$.ctx[35]}get getTypeaheadInProgress(){return this.$$.ctx[36]}get getSelectedIndex(){return this.$$.ctx[37]}get getFocusedItemIndex(){return this.$$.ctx[38]}get focusItemAtIndex(){return this.$$.ctx[39]}get getElement(){return this.$$.ctx[40]}}var al;function r1(s,e){e===void 0&&(e=!1);var t=s.CSS,n=al;if(typeof al=="boolean"&&!e)return al;var i=t&&typeof t.supports=="function";if(!i)return!1;var r=t.supports("--css-vars","yes"),a=t.supports("(--css-vars: yes)")&&t.supports("color","#00000000");return n=r||a,e||(al=n),n}function a1(s,e,t){if(!s)return{x:0,y:0};var n=e.x,i=e.y,r=n+t.left,a=i+t.top,o,l;if(s.type==="touchstart"){var c=s;o=c.changedTouches[0].pageX-r,l=c.changedTouches[0].pageY-a}else{var u=s;o=u.pageX-r,l=u.pageY-a}return{x:o,y:l}}/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */var o1={BG_FOCUSED:"mdc-ripple-upgraded--background-focused",FG_ACTIVATION:"mdc-ripple-upgraded--foreground-activation",FG_DEACTIVATION:"mdc-ripple-upgraded--foreground-deactivation",ROOT:"mdc-ripple-upgraded",UNBOUNDED:"mdc-ripple-upgraded--unbounded"},l1={VAR_FG_SCALE:"--mdc-ripple-fg-scale",VAR_FG_SIZE:"--mdc-ripple-fg-size",VAR_FG_TRANSLATE_END:"--mdc-ripple-fg-translate-end",VAR_FG_TRANSLATE_START:"--mdc-ripple-fg-translate-start",VAR_LEFT:"--mdc-ripple-left",VAR_TOP:"--mdc-ripple-top"},Zd={DEACTIVATION_TIMEOUT_MS:225,FG_DEACTIVATION_MS:150,INITIAL_ORIGIN_SCALE:.6,PADDING:10,TAP_DELAY_MS:300};/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */var Jd=["touchstart","pointerdown","mousedown","keydown"],Kd=["touchend","pointerup","mouseup","contextmenu"],ol=[],c1=function(s){oc(e,s);function e(t){var n=s.call(this,es(es({},e.defaultAdapter),t))||this;return n.activationAnimationHasEnded=!1,n.activationTimer=0,n.fgDeactivationRemovalTimer=0,n.fgScale="0",n.frame={width:0,height:0},n.initialSize=0,n.layoutFrame=0,n.maxRadius=0,n.unboundedCoords={left:0,top:0},n.activationState=n.defaultActivationState(),n.activationTimerCallback=function(){n.activationAnimationHasEnded=!0,n.runDeactivationUXLogicIfReady()},n.activateHandler=function(i){n.activateImpl(i)},n.deactivateHandler=function(){n.deactivateImpl()},n.focusHandler=function(){n.handleFocus()},n.blurHandler=function(){n.handleBlur()},n.resizeHandler=function(){n.layout()},n}return Object.defineProperty(e,"cssClasses",{get:function(){return o1},enumerable:!1,configurable:!0}),Object.defineProperty(e,"strings",{get:function(){return l1},enumerable:!1,configurable:!0}),Object.defineProperty(e,"numbers",{get:function(){return Zd},enumerable:!1,configurable:!0}),Object.defineProperty(e,"defaultAdapter",{get:function(){return{addClass:function(){},browserSupportsCssVars:function(){return!0},computeBoundingRect:function(){return{top:0,right:0,bottom:0,left:0,width:0,height:0}},containsEventTarget:function(){return!0},deregisterDocumentInteractionHandler:function(){},deregisterInteractionHandler:function(){},deregisterResizeHandler:function(){},getWindowPageOffset:function(){return{x:0,y:0}},isSurfaceActive:function(){return!0},isSurfaceDisabled:function(){return!0},isUnbounded:function(){return!0},registerDocumentInteractionHandler:function(){},registerInteractionHandler:function(){},registerResizeHandler:function(){},removeClass:function(){},updateCssVariable:function(){}}},enumerable:!1,configurable:!0}),e.prototype.init=function(){var t=this,n=this.supportsPressRipple();if(this.registerRootHandlers(n),n){var i=e.cssClasses,r=i.ROOT,a=i.UNBOUNDED;requestAnimationFrame(function(){t.adapter.addClass(r),t.adapter.isUnbounded()&&(t.adapter.addClass(a),t.layoutInternal())})}},e.prototype.destroy=function(){var t=this;if(this.supportsPressRipple()){this.activationTimer&&(clearTimeout(this.activationTimer),this.activationTimer=0,this.adapter.removeClass(e.cssClasses.FG_ACTIVATION)),this.fgDeactivationRemovalTimer&&(clearTimeout(this.fgDeactivationRemovalTimer),this.fgDeactivationRemovalTimer=0,this.adapter.removeClass(e.cssClasses.FG_DEACTIVATION));var n=e.cssClasses,i=n.ROOT,r=n.UNBOUNDED;requestAnimationFrame(function(){t.adapter.removeClass(i),t.adapter.removeClass(r),t.removeCssVars()})}this.deregisterRootHandlers(),this.deregisterDeactivationHandlers()},e.prototype.activate=function(t){this.activateImpl(t)},e.prototype.deactivate=function(){this.deactivateImpl()},e.prototype.layout=function(){var t=this;this.layoutFrame&&cancelAnimationFrame(this.layoutFrame),this.layoutFrame=requestAnimationFrame(function(){t.layoutInternal(),t.layoutFrame=0})},e.prototype.setUnbounded=function(t){var n=e.cssClasses.UNBOUNDED;t?this.adapter.addClass(n):this.adapter.removeClass(n)},e.prototype.handleFocus=function(){var t=this;requestAnimationFrame(function(){return t.adapter.addClass(e.cssClasses.BG_FOCUSED)})},e.prototype.handleBlur=function(){var t=this;requestAnimationFrame(function(){return t.adapter.removeClass(e.cssClasses.BG_FOCUSED)})},e.prototype.supportsPressRipple=function(){return this.adapter.browserSupportsCssVars()},e.prototype.defaultActivationState=function(){return{activationEvent:void 0,hasDeactivationUXRun:!1,isActivated:!1,isProgrammatic:!1,wasActivatedByPointer:!1,wasElementMadeActive:!1}},e.prototype.registerRootHandlers=function(t){var n,i;if(t){try{for(var r=rl(Jd),a=r.next();!a.done;a=r.next()){var o=a.value;this.adapter.registerInteractionHandler(o,this.activateHandler)}}catch(l){n={error:l}}finally{try{a&&!a.done&&(i=r.return)&&i.call(r)}finally{if(n)throw n.error}}this.adapter.isUnbounded()&&this.adapter.registerResizeHandler(this.resizeHandler)}this.adapter.registerInteractionHandler("focus",this.focusHandler),this.adapter.registerInteractionHandler("blur",this.blurHandler)},e.prototype.registerDeactivationHandlers=function(t){var n,i;if(t.type==="keydown")this.adapter.registerInteractionHandler("keyup",this.deactivateHandler);else try{for(var r=rl(Kd),a=r.next();!a.done;a=r.next()){var o=a.value;this.adapter.registerDocumentInteractionHandler(o,this.deactivateHandler)}}catch(l){n={error:l}}finally{try{a&&!a.done&&(i=r.return)&&i.call(r)}finally{if(n)throw n.error}}},e.prototype.deregisterRootHandlers=function(){var t,n;try{for(var i=rl(Jd),r=i.next();!r.done;r=i.next()){var a=r.value;this.adapter.deregisterInteractionHandler(a,this.activateHandler)}}catch(o){t={error:o}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(t)throw t.error}}this.adapter.deregisterInteractionHandler("focus",this.focusHandler),this.adapter.deregisterInteractionHandler("blur",this.blurHandler),this.adapter.isUnbounded()&&this.adapter.deregisterResizeHandler(this.resizeHandler)},e.prototype.deregisterDeactivationHandlers=function(){var t,n;this.adapter.deregisterInteractionHandler("keyup",this.deactivateHandler);try{for(var i=rl(Kd),r=i.next();!r.done;r=i.next()){var a=r.value;this.adapter.deregisterDocumentInteractionHandler(a,this.deactivateHandler)}}catch(o){t={error:o}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(t)throw t.error}}},e.prototype.removeCssVars=function(){var t=this,n=e.strings,i=Object.keys(n);i.forEach(function(r){r.indexOf("VAR_")===0&&t.adapter.updateCssVariable(n[r],null)})},e.prototype.activateImpl=function(t){var n=this;if(!this.adapter.isSurfaceDisabled()){var i=this.activationState;if(!i.isActivated){var r=this.previousActivationEvent,a=r&&t!==void 0&&r.type!==t.type;if(!a){i.isActivated=!0,i.isProgrammatic=t===void 0,i.activationEvent=t,i.wasActivatedByPointer=i.isProgrammatic?!1:t!==void 0&&(t.type==="mousedown"||t.type==="touchstart"||t.type==="pointerdown");var o=t!==void 0&&ol.length>0&&ol.some(function(l){return n.adapter.containsEventTarget(l)});if(o){this.resetActivationState();return}t!==void 0&&(ol.push(t.target),this.registerDeactivationHandlers(t)),i.wasElementMadeActive=this.checkElementMadeActive(t),i.wasElementMadeActive&&this.animateActivation(),requestAnimationFrame(function(){ol=[],!i.wasElementMadeActive&&t!==void 0&&(t.key===" "||t.keyCode===32)&&(i.wasElementMadeActive=n.checkElementMadeActive(t),i.wasElementMadeActive&&n.animateActivation()),i.wasElementMadeActive||(n.activationState=n.defaultActivationState())})}}}},e.prototype.checkElementMadeActive=function(t){return t!==void 0&&t.type==="keydown"?this.adapter.isSurfaceActive():!0},e.prototype.animateActivation=function(){var t=this,n=e.strings,i=n.VAR_FG_TRANSLATE_START,r=n.VAR_FG_TRANSLATE_END,a=e.cssClasses,o=a.FG_DEACTIVATION,l=a.FG_ACTIVATION,c=e.numbers.DEACTIVATION_TIMEOUT_MS;this.layoutInternal();var u="",h="";if(!this.adapter.isUnbounded()){var f=this.getFgTranslationCoordinates(),d=f.startPoint,p=f.endPoint;u=d.x+"px, "+d.y+"px",h=p.x+"px, "+p.y+"px"}this.adapter.updateCssVariable(i,u),this.adapter.updateCssVariable(r,h),clearTimeout(this.activationTimer),clearTimeout(this.fgDeactivationRemovalTimer),this.rmBoundedActivationClasses(),this.adapter.removeClass(o),this.adapter.computeBoundingRect(),this.adapter.addClass(l),this.activationTimer=setTimeout(function(){t.activationTimerCallback()},c)},e.prototype.getFgTranslationCoordinates=function(){var t=this.activationState,n=t.activationEvent,i=t.wasActivatedByPointer,r;i?r=a1(n,this.adapter.getWindowPageOffset(),this.adapter.computeBoundingRect()):r={x:this.frame.width/2,y:this.frame.height/2},r={x:r.x-this.initialSize/2,y:r.y-this.initialSize/2};var a={x:this.frame.width/2-this.initialSize/2,y:this.frame.height/2-this.initialSize/2};return{startPoint:r,endPoint:a}},e.prototype.runDeactivationUXLogicIfReady=function(){var t=this,n=e.cssClasses.FG_DEACTIVATION,i=this.activationState,r=i.hasDeactivationUXRun,a=i.isActivated,o=r||!a;o&&this.activationAnimationHasEnded&&(this.rmBoundedActivationClasses(),this.adapter.addClass(n),this.fgDeactivationRemovalTimer=setTimeout(function(){t.adapter.removeClass(n)},Zd.FG_DEACTIVATION_MS))},e.prototype.rmBoundedActivationClasses=function(){var t=e.cssClasses.FG_ACTIVATION;this.adapter.removeClass(t),this.activationAnimationHasEnded=!1,this.adapter.computeBoundingRect()},e.prototype.resetActivationState=function(){var t=this;this.previousActivationEvent=this.activationState.activationEvent,this.activationState=this.defaultActivationState(),setTimeout(function(){return t.previousActivationEvent=void 0},e.numbers.TAP_DELAY_MS)},e.prototype.deactivateImpl=function(){var t=this,n=this.activationState;if(n.isActivated){var i=es({},n);n.isProgrammatic?(requestAnimationFrame(function(){t.animateDeactivation(i)}),this.resetActivationState()):(this.deregisterDeactivationHandlers(),requestAnimationFrame(function(){t.activationState.hasDeactivationUXRun=!0,t.animateDeactivation(i),t.resetActivationState()}))}},e.prototype.animateDeactivation=function(t){var n=t.wasActivatedByPointer,i=t.wasElementMadeActive;(n||i)&&this.runDeactivationUXLogicIfReady()},e.prototype.layoutInternal=function(){var t=this;this.frame=this.adapter.computeBoundingRect();var n=Math.max(this.frame.height,this.frame.width),i=function(){var a=Math.sqrt(Math.pow(t.frame.width,2)+Math.pow(t.frame.height,2));return a+e.numbers.PADDING};this.maxRadius=this.adapter.isUnbounded()?n:i();var r=Math.floor(n*e.numbers.INITIAL_ORIGIN_SCALE);this.adapter.isUnbounded()&&r%2!==0?this.initialSize=r-1:this.initialSize=r,this.fgScale=""+this.maxRadius/this.initialSize,this.updateLayoutCssVars()},e.prototype.updateLayoutCssVars=function(){var t=e.strings,n=t.VAR_FG_SIZE,i=t.VAR_LEFT,r=t.VAR_TOP,a=t.VAR_FG_SCALE;this.adapter.updateCssVariable(n,this.initialSize+"px"),this.adapter.updateCssVariable(a,this.fgScale),this.adapter.isUnbounded()&&(this.unboundedCoords={left:Math.round(this.frame.width/2-this.initialSize/2),top:Math.round(this.frame.height/2-this.initialSize/2)},this.adapter.updateCssVariable(i,this.unboundedCoords.left+"px"),this.adapter.updateCssVariable(r,this.unboundedCoords.top+"px"))},e}(kh);const{applyPassive:ll}=UA,{matches:u1}=Sg;function $c(s,{ripple:e=!0,surface:t=!1,unbounded:n=!1,disabled:i=!1,color:r,active:a,rippleElement:o,eventTarget:l,activeTarget:c,addClass:u=p=>s.classList.add(p),removeClass:h=p=>s.classList.remove(p),addStyle:f=(p,_)=>s.style.setProperty(p,_),initPromise:d=Promise.resolve()}={}){let p,_=sn("SMUI:addLayoutListener"),g,m=a,y=l,v=c;function x(){t?(u("mdc-ripple-surface"),r==="primary"?(u("smui-ripple-surface--primary"),h("smui-ripple-surface--secondary")):r==="secondary"?(h("smui-ripple-surface--primary"),u("smui-ripple-surface--secondary")):(h("smui-ripple-surface--primary"),h("smui-ripple-surface--secondary"))):(h("mdc-ripple-surface"),h("smui-ripple-surface--primary"),h("smui-ripple-surface--secondary")),p&&m!==a&&(m=a,a?p.activate():a===!1&&p.deactivate()),e&&!p?(p=new c1({addClass:u,browserSupportsCssVars:()=>r1(window),computeBoundingRect:()=>(o||s).getBoundingClientRect(),containsEventTarget:w=>s.contains(w),deregisterDocumentInteractionHandler:(w,A)=>document.documentElement.removeEventListener(w,A,ll()),deregisterInteractionHandler:(w,A)=>(l||s).removeEventListener(w,A,ll()),deregisterResizeHandler:w=>window.removeEventListener("resize",w),getWindowPageOffset:()=>({x:window.pageXOffset,y:window.pageYOffset}),isSurfaceActive:()=>a??u1(c||s,":active"),isSurfaceDisabled:()=>!!i,isUnbounded:()=>!!n,registerDocumentInteractionHandler:(w,A)=>document.documentElement.addEventListener(w,A,ll()),registerInteractionHandler:(w,A)=>(l||s).addEventListener(w,A,ll()),registerResizeHandler:w=>window.addEventListener("resize",w),removeClass:h,updateCssVariable:f}),d.then(()=>{p&&(p.init(),p.setUnbounded(n))})):p&&!e&&d.then(()=>{p&&(p.destroy(),p=void 0)}),p&&(y!==l||v!==c)&&(y=l,v=c,p.destroy(),requestAnimationFrame(()=>{p&&(p.init(),p.setUnbounded(n))})),!e&&n&&u("mdc-ripple-upgraded--unbounded")}x(),_&&(g=_(E));function E(){p&&p.layout()}return{update(w){({ripple:e,surface:t,unbounded:n,disabled:i,color:r,active:a,rippleElement:o,eventTarget:l,activeTarget:c,addClass:u,removeClass:h,addStyle:f,initPromise:d}=Object.assign({ripple:!0,surface:!1,unbounded:!1,disabled:!1,color:void 0,active:void 0,rippleElement:void 0,eventTarget:void 0,activeTarget:void 0,addClass:A=>s.classList.add(A),removeClass:A=>s.classList.remove(A),addStyle:(A,P)=>s.style.setProperty(A,P),initPromise:Promise.resolve()},w)),x()},destroy(){p&&(p.destroy(),p=void 0,h("mdc-ripple-surface"),h("smui-ripple-surface--primary"),h("smui-ripple-surface--secondary")),g&&g()}}}function $d(s){let e;return{c(){e=bs("span"),this.h()},l(t){e=Ss(t,"SPAN",{class:!0}),ss(e).forEach(Ue),this.h()},h(){Cl(e,"class","mdc-deprecated-list-item__ripple")},m(t,n){Ge(t,e,n)},d(t){t&&Ue(e)}}}function h1(s){let e,t,n=s[7]&&$d();const i=s[34].default,r=Un(i,s,s[37],null);return{c(){n&&n.c(),e=dt(),r&&r.c()},l(a){n&&n.l(a),e=dt(),r&&r.l(a)},m(a,o){n&&n.m(a,o),Ge(a,e,o),r&&r.m(a,o),t=!0},p(a,o){a[7]?n||(n=$d(),n.c(),n.m(e.parentNode,e)):n&&(n.d(1),n=null),r&&r.p&&(!t||o[1]&64)&&On(r,i,a,a[37],t?kn(i,a[37],o,null):Fn(a[37]),null)},i(a){t||(re(r,a),t=!0)},o(a){me(r,a),t=!1},d(a){a&&Ue(e),n&&n.d(a),r&&r.d(a)}}}function f1(s){let e,t,n;const i=[{tag:s[14]},{use:[...s[6]?[]:[[$c,{ripple:!s[16],unbounded:!1,color:(s[1]||s[0])&&s[5]==null?"primary":s[5],disabled:s[10],addClass:s[24],removeClass:s[25],addStyle:s[26]}]],s[22],...s[2]]},{class:ti({[s[3]]:!0,"mdc-deprecated-list-item":!s[8],"mdc-deprecated-list-item__wrapper":s[8],"mdc-deprecated-list-item--activated":s[1],"mdc-deprecated-list-item--selected":s[0],"mdc-deprecated-list-item--disabled":s[10],"mdc-menu-item--selected":!s[23]&&s[9]==="menuitem"&&s[0],"smui-menu-item--non-interactive":s[6],...s[18]})},{style:Object.entries(s[19]).map(Qc).concat([s[4]]).join(" ")},s[23]&&s[1]?{"aria-current":"page"}:{},!s[23]||s[8]?{role:s[9]}:{},!s[23]&&s[9]==="option"?{"aria-selected":s[0]?"true":"false"}:{},!s[23]&&(s[9]==="radio"||s[9]==="checkbox")?{"aria-checked":s[16]&&s[16].checked?"true":"false"}:{},s[23]?{}:{"aria-disabled":s[10]?"true":"false"},{"data-menu-item-skip-restore-focus":s[11]||void 0},{tabindex:s[21]},{href:s[12]},s[20],s[29]];var r=s[13];function a(o,l){let c={$$slots:{default:[h1]},$$scope:{ctx:o}};if(l!==void 0&&l[0]&670916479)c=ni(i,[l[0]&16384&&{tag:o[14]},l[0]&121701479&&{use:[...o[6]?[]:[[$c,{ripple:!o[16],unbounded:!1,color:(o[1]||o[0])&&o[5]==null?"primary":o[5],disabled:o[10],addClass:o[24],removeClass:o[25],addStyle:o[26]}]],o[22],...o[2]]},l[0]&8652619&&{class:ti({[o[3]]:!0,"mdc-deprecated-list-item":!o[8],"mdc-deprecated-list-item__wrapper":o[8],"mdc-deprecated-list-item--activated":o[1],"mdc-deprecated-list-item--selected":o[0],"mdc-deprecated-list-item--disabled":o[10],"mdc-menu-item--selected":!o[23]&&o[9]==="menuitem"&&o[0],"smui-menu-item--non-interactive":o[6],...o[18]})},l[0]&524304&&{style:Object.entries(o[19]).map(Qc).concat([o[4]]).join(" ")},l[0]&8388610&&en(o[23]&&o[1]?{"aria-current":"page"}:{}),l[0]&8389376&&en(!o[23]||o[8]?{role:o[9]}:{}),l[0]&8389121&&en(!o[23]&&o[9]==="option"?{"aria-selected":o[0]?"true":"false"}:{}),l[0]&8454656&&en(!o[23]&&(o[9]==="radio"||o[9]==="checkbox")?{"aria-checked":o[16]&&o[16].checked?"true":"false"}:{}),l[0]&8389632&&en(o[23]?{}:{"aria-disabled":o[10]?"true":"false"}),l[0]&2048&&{"data-menu-item-skip-restore-focus":o[11]||void 0},l[0]&2097152&&{tabindex:o[21]},l[0]&4096&&{href:o[12]},l[0]&1048576&&en(o[20]),l[0]&536870912&&en(o[29])]);else for(let u=0;u<i.length;u+=1)c=Ut(c,i[u]);return{props:c}}return r&&(e=Yr(r,a(s)),s[35](e),e.$on("click",s[15]),e.$on("keydown",s[27]),e.$on("SMUIGenericInput:mount",s[28]),e.$on("SMUIGenericInput:unmount",s[36])),{c(){e&&Ve(e.$$.fragment),t=dt()},l(o){e&&Je(e.$$.fragment,o),t=dt()},m(o,l){e&&We(e,o,l),Ge(o,t,l),n=!0},p(o,l){if(l[0]&8192&&r!==(r=o[13])){if(e){pn();const c=e;me(c.$$.fragment,1,0,()=>{Xe(c,1)}),mn()}r?(e=Yr(r,a(o,l)),o[35](e),e.$on("click",o[15]),e.$on("keydown",o[27]),e.$on("SMUIGenericInput:mount",o[28]),e.$on("SMUIGenericInput:unmount",o[36]),Ve(e.$$.fragment),re(e.$$.fragment,1),We(e,t.parentNode,t)):e=null}else if(r){const c=l[0]&670916479?ni(i,[l[0]&16384&&{tag:o[14]},l[0]&121701479&&{use:[...o[6]?[]:[[$c,{ripple:!o[16],unbounded:!1,color:(o[1]||o[0])&&o[5]==null?"primary":o[5],disabled:o[10],addClass:o[24],removeClass:o[25],addStyle:o[26]}]],o[22],...o[2]]},l[0]&8652619&&{class:ti({[o[3]]:!0,"mdc-deprecated-list-item":!o[8],"mdc-deprecated-list-item__wrapper":o[8],"mdc-deprecated-list-item--activated":o[1],"mdc-deprecated-list-item--selected":o[0],"mdc-deprecated-list-item--disabled":o[10],"mdc-menu-item--selected":!o[23]&&o[9]==="menuitem"&&o[0],"smui-menu-item--non-interactive":o[6],...o[18]})},l[0]&524304&&{style:Object.entries(o[19]).map(Qc).concat([o[4]]).join(" ")},l[0]&8388610&&en(o[23]&&o[1]?{"aria-current":"page"}:{}),l[0]&8389376&&en(!o[23]||o[8]?{role:o[9]}:{}),l[0]&8389121&&en(!o[23]&&o[9]==="option"?{"aria-selected":o[0]?"true":"false"}:{}),l[0]&8454656&&en(!o[23]&&(o[9]==="radio"||o[9]==="checkbox")?{"aria-checked":o[16]&&o[16].checked?"true":"false"}:{}),l[0]&8389632&&en(o[23]?{}:{"aria-disabled":o[10]?"true":"false"}),l[0]&2048&&{"data-menu-item-skip-restore-focus":o[11]||void 0},l[0]&2097152&&{tabindex:o[21]},l[0]&4096&&{href:o[12]},l[0]&1048576&&en(o[20]),l[0]&536870912&&en(o[29])]):{};l[0]&128|l[1]&64&&(c.$$scope={dirty:l,ctx:o}),e.$set(c)}},i(o){n||(e&&re(e.$$.fragment,o),n=!0)},o(o){e&&me(e.$$.fragment,o),n=!1},d(o){o&&Ue(t),s[35](null),e&&Xe(e,o)}}}let d1=0;const Qc=([s,e])=>`${s}: ${e};`;function p1(s,e,t){let n;const i=["use","class","style","color","nonInteractive","ripple","wrapper","activated","role","selected","disabled","skipRestoreFocus","tabindex","inputId","href","component","tag","action","getPrimaryText","getElement"];let r=bn(e,i),{$$slots:a={},$$scope:o}=e;var l;const c=ra(Ii());let u=()=>{};function h(X){return X===u}let{use:f=[]}=e,{class:d=""}=e,{style:p=""}=e,{color:_=void 0}=e,{nonInteractive:g=(l=sn("SMUI:list:nonInteractive"))!==null&&l!==void 0?l:!1}=e;qt("SMUI:list:nonInteractive",void 0);let{ripple:m=!g}=e,{wrapper:y=!1}=e,{activated:v=!1}=e,{role:x=y?"presentation":sn("SMUI:list:item:role")}=e;qt("SMUI:list:item:role",void 0);let{selected:E=!1}=e,{disabled:w=!1}=e,{skipRestoreFocus:A=!1}=e,{tabindex:P=u}=e,{inputId:M="SMUI-form-field-list-"+d1++}=e,{href:R=void 0}=e,V,j={},ne={},F={},H,B,q=sn("SMUI:list:item:nav"),{component:ee=Qr}=e,{tag:Z=ee===Qr?q?R?"a":"span":"li":void 0}=e;qt("SMUI:generic:input:props",{id:M}),qt("SMUI:separator:context",void 0),ar(()=>{if(!E&&!g){let Q=!0,Le=V.getElement();for(;Le.previousSibling;)if(Le=Le.previousSibling,Le.nodeType===1&&Le.classList.contains("mdc-deprecated-list-item")&&!Le.classList.contains("mdc-deprecated-list-item--disabled")){Q=!1;break}Q&&(B=window.requestAnimationFrame(()=>ye(Le)))}const X={_smui_list_item_accessor:!0,get element(){return k()},get selected(){return E},set selected(Q){t(0,E=Q)},hasClass:ie,addClass:G,removeClass:Y,getAttr:ae,addAttr:ue,removeAttr:he,getPrimaryText:Ke,get checked(){var Q;return(Q=H&&H.checked)!==null&&Q!==void 0?Q:!1},set checked(Q){H&&t(16,H.checked=!!Q,H)},get hasCheckbox(){return!!(H&&"_smui_checkbox_accessor"in H)},get hasRadio(){return!!(H&&"_smui_radio_accessor"in H)},activateRipple(){H&&H.activateRipple()},deactivateRipple(){H&&H.deactivateRipple()},getValue(){return r.value},action:et,get tabindex(){return n},set tabindex(Q){t(30,P=Q)},get disabled(){return w},get activated(){return v},set activated(Q){t(1,v=Q)}};return ys(k(),"SMUIListItem:mount",X),()=>{ys(k(),"SMUIListItem:unmount",X)}}),cn(()=>{B&&window.cancelAnimationFrame(B)});function ie(X){return X in j?j[X]:k().classList.contains(X)}function G(X){j[X]||t(18,j[X]=!0,j)}function Y(X){(!(X in j)||j[X])&&t(18,j[X]=!1,j)}function ce(X,Q){ne[X]!=Q&&(Q===""||Q==null?(delete ne[X],t(19,ne)):t(19,ne[X]=Q,ne))}function ae(X){var Q;return X in F?(Q=F[X])!==null&&Q!==void 0?Q:null:k().getAttribute(X)}function ue(X,Q){F[X]!==Q&&t(20,F[X]=Q,F)}function he(X){(!(X in F)||F[X]!=null)&&t(20,F[X]=void 0,F)}function ye(X){let Q=!0;for(;X.nextElementSibling;)if(X=X.nextElementSibling,X.nodeType===1&&X.classList.contains("mdc-deprecated-list-item")){const Le=X.attributes.getNamedItem("tabindex");if(Le&&Le.value==="0"){Q=!1;break}}Q&&t(21,n=0)}function we(X){const Q=X.key==="Enter",Le=X.key==="Space";(Q||Le)&&et(X)}function ge(X){("_smui_checkbox_accessor"in X.detail||"_smui_radio_accessor"in X.detail)&&t(16,H=X.detail)}function et(X){w||ys(k(),"SMUI:action",X)}function Ke(){var X,Q,Le;const Ne=k(),Fe=Ne.querySelector(".mdc-deprecated-list-item__primary-text");if(Fe)return(X=Fe.textContent)!==null&&X!==void 0?X:"";const tt=Ne.querySelector(".mdc-deprecated-list-item__text");return tt?(Q=tt.textContent)!==null&&Q!==void 0?Q:"":(Le=Ne.textContent)!==null&&Le!==void 0?Le:""}function k(){return V.getElement()}function xe(X){fi[X?"unshift":"push"](()=>{V=X,t(17,V)})}const de=()=>t(16,H=void 0);return s.$$set=X=>{e=Ut(Ut({},e),Ti(X)),t(29,r=bn(e,i)),"use"in X&&t(2,f=X.use),"class"in X&&t(3,d=X.class),"style"in X&&t(4,p=X.style),"color"in X&&t(5,_=X.color),"nonInteractive"in X&&t(6,g=X.nonInteractive),"ripple"in X&&t(7,m=X.ripple),"wrapper"in X&&t(8,y=X.wrapper),"activated"in X&&t(1,v=X.activated),"role"in X&&t(9,x=X.role),"selected"in X&&t(0,E=X.selected),"disabled"in X&&t(10,w=X.disabled),"skipRestoreFocus"in X&&t(11,A=X.skipRestoreFocus),"tabindex"in X&&t(30,P=X.tabindex),"inputId"in X&&t(31,M=X.inputId),"href"in X&&t(12,R=X.href),"component"in X&&t(13,ee=X.component),"tag"in X&&t(14,Z=X.tag),"$$scope"in X&&t(37,o=X.$$scope)},s.$$.update=()=>{s.$$.dirty[0]&1073808449&&t(21,n=h(P)?!g&&!w&&(E||H&&H.checked)?0:-1:P)},[E,v,f,d,p,_,g,m,y,x,w,A,R,ee,Z,et,H,V,j,ne,F,n,c,q,G,Y,ce,we,ge,r,P,M,Ke,k,a,xe,de,o]}class lc extends Zt{constructor(e){super(),Jt(this,e,p1,f1,Ht,{use:2,class:3,style:4,color:5,nonInteractive:6,ripple:7,wrapper:8,activated:1,role:9,selected:0,disabled:10,skipRestoreFocus:11,tabindex:30,inputId:31,href:12,component:13,tag:14,action:15,getPrimaryText:32,getElement:33},null,[-1,-1])}get action(){return this.$$.ctx[15]}get getPrimaryText(){return this.$$.ctx[32]}get getElement(){return this.$$.ctx[33]}}const Tg=xi({class:"mdc-deprecated-list-item__text",tag:"span"}),m1=xi({class:"mdc-deprecated-list-item__primary-text",tag:"span"}),g1=xi({class:"mdc-deprecated-list-item__secondary-text",tag:"span"});function _1(s){let e,t,n,i,r,a;const o=s[8].default,l=Un(o,s,s[7],null);let c=[{class:t=ti({[s[1]]:!0,"mdc-deprecated-list-item__graphic":!0,"mdc-menu__selection-group-icon":s[4]})},s[5]],u={};for(let h=0;h<c.length;h+=1)u=Ut(u,c[h]);return{c(){e=bs("span"),l&&l.c(),this.h()},l(h){e=Ss(h,"SPAN",{class:!0});var f=ss(e);l&&l.l(f),f.forEach(Ue),this.h()},h(){vl(e,u)},m(h,f){Ge(h,e,f),l&&l.m(e,null),s[9](e),i=!0,r||(a=[di(n=io.call(null,e,s[0])),di(s[3].call(null,e))],r=!0)},p(h,[f]){l&&l.p&&(!i||f&128)&&On(l,o,h,h[7],i?kn(o,h[7],f,null):Fn(h[7]),null),vl(e,u=ni(c,[(!i||f&2&&t!==(t=ti({[h[1]]:!0,"mdc-deprecated-list-item__graphic":!0,"mdc-menu__selection-group-icon":h[4]})))&&{class:t},f&32&&h[5]])),n&&Js(n.update)&&f&1&&n.update.call(null,h[0])},i(h){i||(re(l,h),i=!0)},o(h){me(l,h),i=!1},d(h){h&&Ue(e),l&&l.d(h),s[9](null),r=!1,qa(a)}}}function v1(s,e,t){const n=["use","class","getElement"];let i=bn(e,n),{$$slots:r={},$$scope:a}=e;const o=ra(Ii());let{use:l=[]}=e,{class:c=""}=e,u,h=sn("SMUI:list:graphic:menu-selection-group");function f(){return u}function d(p){fi[p?"unshift":"push"](()=>{u=p,t(2,u)})}return s.$$set=p=>{e=Ut(Ut({},e),Ti(p)),t(5,i=bn(e,n)),"use"in p&&t(0,l=p.use),"class"in p&&t(1,c=p.class),"$$scope"in p&&t(7,a=p.$$scope)},[l,c,u,o,h,i,f,a,r,d]}class zh extends Zt{constructor(e){super(),Jt(this,e,v1,_1,Ht,{use:0,class:1,getElement:6})}get getElement(){return this.$$.ctx[6]}}xi({class:"mdc-deprecated-list-item__meta",tag:"span"});xi({class:"mdc-deprecated-list-group",tag:"div"});xi({class:"mdc-deprecated-list-group__subheader",tag:"h3"});class y1{constructor(e,t=""){Rs(this,"filename");Rs(this,"name");Rs(this,"colors",{});Rs(this,"links",{});Rs(this,"joints",[]);Rs(this,"prefix","");this.filename=e,this.prefix=t}async load(){return fetch(this.filename).then(e=>e.text()).then(e=>new window.DOMParser().parseFromString(e,"text/xml")).then(e=>this.parseRobotXMLNode(e.documentElement))}parseRobotXMLNode(e){const t=e.nodeName;if(t!=="robot")throw new Error(`Invalid URDF: no root node ${t}`);return this.name=e.getAttribute("name"),this.parseColorsFromRobot(e),this.parseLinks(e),this.parseJoints(e),{name:this.name,links:this.links,joints:this.joints}}parseColorsFromRobot(e){const t=e.getElementsByTagName("material");for(let n=0;n<t.length;n++){const i=t[n],r=this.colorFromMaterial(i);r&&(this.colors[r.name]=r.rgba)}}colorFromMaterial(e){if(!e.hasAttribute("name")){console.warn("Found material-tag with name without name inside robot tag!");return}const t=e.getAttribute("name"),n=e.getElementsByTagName("color");if(n.length===0)return;const i=n[0];if(!i.hasAttribute("rgba")){console.warn(`Color tag ${t} does not have expected "rgba" attribute!`);return}return{name:t,rgba:zr(i,"rgba")}}parseLinks(e){const t=e.getElementsByTagName("link");for(let n=0;n<t.length;n++){const i=t[n],r=i.getElementsByTagName("visual"),a={visual:[]};i.hasAttribute("name")&&(a.name=i.getAttribute("name"),this.links[a.name]=a);for(let o=0;o<r.length;o++)a.visual.push(this.parseVisual(r[o]))}}parseVisual(e){let t={};for(let n=0;n<e.childNodes.length;n++){const i=e.childNodes[n];switch(i.nodeName){case"geometry":this.parseGeometry(i,t);break;case"origin":let r=zr(i);r&&(t.origin_xyz=r);let a=zr(i,"rpy");a&&(t.origin_rpy=a);break;case"material":const o=i.getElementsByTagName("color");if(o.length>0&&o[0].hasAttribute("rgba"))t.color_rgba=zr(o[0],"rgba");else if(i.hasAttribute("name")){let l=i.getAttribute("name");t.color_rgba=this.colors[l]}}}return t}parseGeometry(e,t){for(let n=0;n<e.childNodes.length;n++){const i=e.childNodes[n];switch(i.nodeName){case"mesh":let r=[1,1,1],a=i.getAttribute("scale");if(a){const h=a.split(" ");for(const f in h)r[f]=parseFloat(h[f])}let o=i.getAttribute("filename");o=o.replace("package:/",this.prefix);let l="stl";switch(o.substring(o.length-3)){case"fbx":l="fbx";break;case"obj":l="obj";break;case"stl":l="stl";break;case"dae":l="dae";break;default:throw new Error("Unknown type "+o)}t.geometry={filename:o,type:l,scale:r},t.type="mesh";return;case"cylinder":const c={};i.hasAttribute("length")&&(c.length=parseFloat(i.getAttribute("length"))),i.hasAttribute("radius")&&(c.radius=parseFloat(i.getAttribute("radius"))),t.geometry=c,t.type="cylinder";return;case"box":const u={size:[1,1,1]};if(i.hasAttribute("size")){const f=i.getAttribute("size").split(" ");for(const d in f)u.size[d]=parseFloat(f[d])}t.geometry=u;return}}}parseJoints(e){const t=e.getElementsByTagName("joint");for(let n=0;n<t.length;n++){const i=t[n],r=i.getElementsByTagName("origin");let a=[0,0,0],o=[0,0,0];if(r.length===1){let f=zr(r[0]);f&&(o=f);let d=zr(r[0],"rpy");d&&(a=d)}let l;const c=i.getElementsByTagName("parent");if(c.length===1){const f=c[0].getAttribute("link");f&&this.links[f]?l=this.links[f]:l={name:f,visual:[]}}let u;const h=i.getElementsByTagName("child");if(h.length===1){const f=h[0].getAttribute("link");f&&this.links[f]?u=this.links[f]:u={name:f,visual:[]}}if(u&&l){const f={name:i.getAttribute("name")||void 0,origin_rpy:a,origin_xyz:o,parent:l,child:u};this.joints.push(f)}}}getRootJoints(){const e=[];for(const t of this.joints){let n=!0;for(const i of this.joints)if(t.parent.name===i.child.name){n=!1;break}n&&e.push(t)}return e}getChildJoints(e){const t=[];if(!this.joints)return[];for(const n of this.joints)n.parent===e&&t.push(n);return t}}function Qd(s,e,t){const n=s.slice();return n[5]=e[t],n}function x1(s){let e,t;return e=new zh({props:{class:"material-icons",$$slots:{default:[S1]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&256&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function b1(s){let e,t;return e=new zh({props:{class:"material-icons",$$slots:{default:[M1]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&257&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function S1(s){let e;return{c(){e=ms("circle")},l(t){e=gs(t,"circle")},m(t,n){Ge(t,e,n)},d(t){t&&Ue(e)}}}function M1(s){let e=s[0]?"folder_open":"folder",t;return{c(){t=ms(e)},l(n){t=gs(n,e)},m(n,i){Ge(n,t,i)},p(n,i){i&1&&e!==(e=n[0]?"folder_open":"folder")&&jr(t,e)},d(n){n&&Ue(t)}}}function E1(s){let e=s[2].name+"",t;return{c(){t=ms(e)},l(n){t=gs(n,e)},m(n,i){Ge(n,t,i)},p(n,i){i&4&&e!==(e=n[2].name+"")&&jr(t,e)},d(n){n&&Ue(t)}}}function A1(s){let e=s[2].parent.name+"",t,n,i=s[2].child.name+"",r;return{c(){t=ms(e),n=ms(" -> "),r=ms(i)},l(a){t=gs(a,e),n=gs(a," -> "),r=gs(a,i)},m(a,o){Ge(a,t,o),Ge(a,n,o),Ge(a,r,o)},p(a,o){o&4&&e!==(e=a[2].parent.name+"")&&jr(t,e),o&4&&i!==(i=a[2].child.name+"")&&jr(r,i)},d(a){a&&(Ue(t),Ue(n),Ue(r))}}}function T1(s){let e,t,n,i;return e=new m1({props:{$$slots:{default:[E1]},$$scope:{ctx:s}}}),n=new g1({props:{$$slots:{default:[A1]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment),t=Bt(),Ve(n.$$.fragment)},l(r){Je(e.$$.fragment,r),t=zt(r),Je(n.$$.fragment,r)},m(r,a){We(e,r,a),Ge(r,t,a),We(n,r,a),i=!0},p(r,a){const o={};a&260&&(o.$$scope={dirty:a,ctx:r}),e.$set(o);const l={};a&260&&(l.$$scope={dirty:a,ctx:r}),n.$set(l)},i(r){i||(re(e.$$.fragment,r),re(n.$$.fragment,r),i=!0)},o(r){me(e.$$.fragment,r),me(n.$$.fragment,r),i=!1},d(r){r&&Ue(t),Xe(e,r),Xe(n,r)}}}function w1(s){let e,t,n,i,r;const a=[b1,x1],o=[];function l(c,u){return c[3].length>0?0:1}return e=l(s),t=o[e]=a[e](s),i=new Tg({props:{class:"bigtext",$$slots:{default:[T1]},$$scope:{ctx:s}}}),{c(){t.c(),n=Bt(),Ve(i.$$.fragment)},l(c){t.l(c),n=zt(c),Je(i.$$.fragment,c)},m(c,u){o[e].m(c,u),Ge(c,n,u),We(i,c,u),r=!0},p(c,u){t.p(c,u);const h={};u&260&&(h.$$scope={dirty:u,ctx:c}),i.$set(h)},i(c){r||(re(t),re(i.$$.fragment,c),r=!0)},o(c){me(t),me(i.$$.fragment,c),r=!1},d(c){c&&Ue(n),o[e].d(c),Xe(i,c)}}}function ep(s){let e,t;return e=new lc({props:{wrapper:!0,$$slots:{default:[R1]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&258&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function tp(s){let e,t;return e=new wg({props:{joint:s[5],parser:s[1]}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.parser=n[1]),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function C1(s){let e,t,n=wi(s[3]),i=[];for(let a=0;a<n.length;a+=1)i[a]=tp(Qd(s,n,a));const r=a=>me(i[a],1,1,()=>{i[a]=null});return{c(){for(let a=0;a<i.length;a+=1)i[a].c();e=dt()},l(a){for(let o=0;o<i.length;o+=1)i[o].l(a);e=dt()},m(a,o){for(let l=0;l<i.length;l+=1)i[l]&&i[l].m(a,o);Ge(a,e,o),t=!0},p(a,o){if(o&10){n=wi(a[3]);let l;for(l=0;l<n.length;l+=1){const c=Qd(a,n,l);i[l]?(i[l].p(c,o),re(i[l],1)):(i[l]=tp(c),i[l].c(),re(i[l],1),i[l].m(e.parentNode,e))}for(pn(),l=n.length;l<i.length;l+=1)r(l);mn()}},i(a){if(!t){for(let o=0;o<n.length;o+=1)re(i[o]);t=!0}},o(a){i=i.filter(Boolean);for(let o=0;o<i.length;o+=1)me(i[o]);t=!1},d(a){a&&Ue(e),Xa(i,a)}}}function R1(s){let e,t;return e=new Bh({props:{class:"sub-list",$$slots:{default:[C1]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&258&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function I1(s){let e,t,n,i;e=new lc({props:{$$slots:{default:[w1]},$$scope:{ctx:s}}}),e.$on("SMUI:action",s[4]);let r=s[3].length>0&&s[0]&&ep(s);return{c(){Ve(e.$$.fragment),t=Bt(),r&&r.c(),n=dt()},l(a){Je(e.$$.fragment,a),t=zt(a),r&&r.l(a),n=dt()},m(a,o){We(e,a,o),Ge(a,t,o),r&&r.m(a,o),Ge(a,n,o),i=!0},p(a,[o]){const l={};o&261&&(l.$$scope={dirty:o,ctx:a}),e.$set(l),a[3].length>0&&a[0]?r?(r.p(a,o),o&1&&re(r,1)):(r=ep(a),r.c(),re(r,1),r.m(n.parentNode,n)):r&&(pn(),me(r,1,1,()=>{r=null}),mn())},i(a){i||(re(e.$$.fragment,a),re(r),i=!0)},o(a){me(e.$$.fragment,a),me(r),i=!1},d(a){a&&(Ue(t),Ue(n)),Xe(e,a),r&&r.d(a)}}}function L1(s,e,t){let{parser:n}=e,{joint:i}=e,{expanded:r=!0}=e;const a=n.getChildJoints(i.child),o=()=>{t(0,r=!r)};return s.$$set=l=>{"parser"in l&&t(1,n=l.parser),"joint"in l&&t(2,i=l.joint),"expanded"in l&&t(0,r=l.expanded)},[r,n,i,a,o]}class wg extends Zt{constructor(e){super(),Jt(this,e,L1,I1,Ht,{parser:1,joint:2,expanded:0})}}function np(s,e,t){const n=s.slice();return n[3]=e[t],n}function P1(s){let e=s[0]?"folder_open":"folder",t;return{c(){t=ms(e)},l(n){t=gs(n,e)},m(n,i){Ge(n,t,i)},p(n,i){i&1&&e!==(e=n[0]?"folder_open":"folder")&&jr(t,e)},d(n){n&&Ue(t)}}}function D1(s){let e=s[1].name+"",t;return{c(){t=ms(e)},l(n){t=gs(n,e)},m(n,i){Ge(n,t,i)},p(n,i){i&2&&e!==(e=n[1].name+"")&&jr(t,e)},d(n){n&&Ue(t)}}}function N1(s){let e,t,n,i;return e=new zh({props:{class:"material-icons",$$slots:{default:[P1]},$$scope:{ctx:s}}}),n=new Tg({props:{$$slots:{default:[D1]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment),t=Bt(),Ve(n.$$.fragment)},l(r){Je(e.$$.fragment,r),t=zt(r),Je(n.$$.fragment,r)},m(r,a){We(e,r,a),Ge(r,t,a),We(n,r,a),i=!0},p(r,a){const o={};a&65&&(o.$$scope={dirty:a,ctx:r}),e.$set(o);const l={};a&66&&(l.$$scope={dirty:a,ctx:r}),n.$set(l)},i(r){i||(re(e.$$.fragment,r),re(n.$$.fragment,r),i=!0)},o(r){me(e.$$.fragment,r),me(n.$$.fragment,r),i=!1},d(r){r&&Ue(t),Xe(e,r),Xe(n,r)}}}function ip(s){let e,t;return e=new lc({props:{wrapper:!0,$$slots:{default:[O1]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&66&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function sp(s){let e,t;return e=new wg({props:{joint:s[3],parser:s[1]}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.joint=n[3]),i&2&&(r.parser=n[1]),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function U1(s){let e,t,n=wi(s[1].getRootJoints()),i=[];for(let a=0;a<n.length;a+=1)i[a]=sp(np(s,n,a));const r=a=>me(i[a],1,1,()=>{i[a]=null});return{c(){for(let a=0;a<i.length;a+=1)i[a].c();e=dt()},l(a){for(let o=0;o<i.length;o+=1)i[o].l(a);e=dt()},m(a,o){for(let l=0;l<i.length;l+=1)i[l]&&i[l].m(a,o);Ge(a,e,o),t=!0},p(a,o){if(o&2){n=wi(a[1].getRootJoints());let l;for(l=0;l<n.length;l+=1){const c=np(a,n,l);i[l]?(i[l].p(c,o),re(i[l],1)):(i[l]=sp(c),i[l].c(),re(i[l],1),i[l].m(e.parentNode,e))}for(pn(),l=n.length;l<i.length;l+=1)r(l);mn()}},i(a){if(!t){for(let o=0;o<n.length;o+=1)re(i[o]);t=!0}},o(a){i=i.filter(Boolean);for(let o=0;o<i.length;o+=1)me(i[o]);t=!1},d(a){a&&Ue(e),Xa(i,a)}}}function O1(s){let e,t;return e=new Bh({props:{class:"sub-list",$$slots:{default:[U1]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&66&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function F1(s){let e,t,n,i;e=new lc({props:{$$slots:{default:[N1]},$$scope:{ctx:s}}}),e.$on("SMUI:action",s[2]);let r=s[0]&&ip(s);return{c(){Ve(e.$$.fragment),t=Bt(),r&&r.c(),n=dt()},l(a){Je(e.$$.fragment,a),t=zt(a),r&&r.l(a),n=dt()},m(a,o){We(e,a,o),Ge(a,t,o),r&&r.m(a,o),Ge(a,n,o),i=!0},p(a,o){const l={};o&67&&(l.$$scope={dirty:o,ctx:a}),e.$set(l),a[0]?r?(r.p(a,o),o&1&&re(r,1)):(r=ip(a),r.c(),re(r,1),r.m(n.parentNode,n)):r&&(pn(),me(r,1,1,()=>{r=null}),mn())},i(a){i||(re(e.$$.fragment,a),re(r),i=!0)},o(a){me(e.$$.fragment,a),me(r),i=!1},d(a){a&&(Ue(t),Ue(n)),Xe(e,a),r&&r.d(a)}}}function k1(s){let e,t;return e=new Bh({props:{$$slots:{default:[F1]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,[i]){const r={};i&67&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function B1(s,e,t){let{parser:n}=e,{expanded:i=!0}=e;const r=()=>{t(0,i=!i)};return s.$$set=a=>{"parser"in a&&t(1,n=a.parser),"expanded"in a&&t(0,i=a.expanded)},[i,n,r]}class z1 extends Zt{constructor(e){super(),Jt(this,e,B1,k1,Ht,{parser:1,expanded:0})}}function H1(s){return{c:kt,l:kt,m:kt,p:kt,i:kt,o:kt,d:kt}}function G1(s){let e,t=`<!-- ${so} -->`,n,i,r;return i=new z1({props:{parser:s[3]}}),{c(){e=new or(!1),n=Bt(),Ve(i.$$.fragment),this.h()},l(a){e=lr(a,!1),n=zt(a),Je(i.$$.fragment,a),this.h()},h(){e.a=n},m(a,o){e.m(t,a,o),Ge(a,n,o),We(i,a,o),r=!0},p:kt,i(a){r||(re(i.$$.fragment,a),r=!0)},o(a){me(i.$$.fragment,a),r=!1},d(a){a&&(e.d(),Ue(n)),Xe(i,a)}}}function V1(s){let e,t=`<!-- loading ${so} -->`,n;return{c(){e=new or(!1),n=dt(),this.h()},l(i){e=lr(i,!1),n=dt(),this.h()},h(){e.a=n},m(i,r){e.m(t,i,r),Ge(i,n,r)},p:kt,i:kt,o:kt,d(i){i&&(Ue(n),e.d())}}}function W1(s){let e,t,n,i={ctx:s,current:null,token:null,hasCatch:!1,pending:V1,then:G1,catch:H1,value:7,blocks:[,,,]};return xl(t=s[0],i),{c(){e=dt(),i.block.c()},l(r){e=dt(),i.block.l(r)},m(r,a){Ge(r,e,a),i.block.m(r,i.anchor=a),i.mount=()=>e.parentNode,i.anchor=e,n=!0},p(r,a){s=r,i.ctx=s,a&1&&t!==(t=s[0])&&xl(t,i)||op(i,s,a)},i(r){n||(re(i.block),n=!0)},o(r){for(let a=0;a<3;a+=1){const o=i.blocks[a];me(o)}n=!1},d(r){r&&Ue(e),i.block.d(r),i.token=null,i=null}}}function X1(s){let e,t;return e=new t1({props:{$$slots:{default:[W1]},$$scope:{ctx:s}}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p(n,i){const r={};i&513&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function q1(s){let e,t;return e=new FE({props:{enableZoom:!0}}),{c(){Ve(e.$$.fragment)},l(n){Je(e.$$.fragment,n)},m(n,i){We(e,n,i),t=!0},p:kt,i(n){t||(re(e.$$.fragment,n),t=!0)},o(n){me(e.$$.fragment,n),t=!1},d(n){Xe(e,n)}}}function Y1(s){return{c:kt,l:kt,m:kt,p:kt,i:kt,o:kt,d:kt}}function j1(s){let e,t=`<!-- ${so} -->`,n,i,r;return i=new hA({props:{parser:s[3]}}),{c(){e=new or(!1),n=Bt(),Ve(i.$$.fragment),this.h()},l(a){e=lr(a,!1),n=zt(a),Je(i.$$.fragment,a),this.h()},h(){e.a=n},m(a,o){e.m(t,a,o),Ge(a,n,o),We(i,a,o),r=!0},p:kt,i(a){r||(re(i.$$.fragment,a),r=!0)},o(a){me(i.$$.fragment,a),r=!1},d(a){a&&(e.d(),Ue(n)),Xe(i,a)}}}function Z1(s){let e,t=`<!-- loading ${so} -->`,n;return{c(){e=new or(!1),n=dt(),this.h()},l(i){e=lr(i,!1),n=dt(),this.h()},h(){e.a=n},m(i,r){e.m(t,i,r),Ge(i,n,r)},p:kt,i:kt,o:kt,d(i){i&&(Ue(n),e.d())}}}function J1(s){let e,t,n,i,r,a,o,l,c,u,h,f,d,p,_;e=new jt.PointLight({props:{color:"white",intensity:.2,position:[0,5,0]}}),n=new jt.PointLight({props:{color:"blue",intensity:.5,position:[5,5,0]}}),r=new jt.PointLight({props:{color:"yellow",intensity:.5,position:[-5,-5,0]}}),o=new jt.PerspectiveCamera({props:{makeDefault:!0,position:[.6,.6,.6],fov:25,$$slots:{default:[q1,({ref:m})=>({8:m}),({ref:m})=>m?256:0]},$$scope:{ctx:s}}}),c=new mA({props:{preset_name:"soft"}}),h=new _A({});let g={ctx:s,current:null,token:null,hasCatch:!1,pending:Z1,then:j1,catch:Y1,value:7,blocks:[,,,]};return xl(p=s[0],g),{c(){Ve(e.$$.fragment),t=Bt(),Ve(n.$$.fragment),i=Bt(),Ve(r.$$.fragment),a=Bt(),Ve(o.$$.fragment),l=Bt(),Ve(c.$$.fragment),u=Bt(),Ve(h.$$.fragment),f=Bt(),d=dt(),g.block.c()},l(m){Je(e.$$.fragment,m),t=zt(m),Je(n.$$.fragment,m),i=zt(m),Je(r.$$.fragment,m),a=zt(m),Je(o.$$.fragment,m),l=zt(m),Je(c.$$.fragment,m),u=zt(m),Je(h.$$.fragment,m),f=zt(m),d=dt(),g.block.l(m)},m(m,y){We(e,m,y),Ge(m,t,y),We(n,m,y),Ge(m,i,y),We(r,m,y),Ge(m,a,y),We(o,m,y),Ge(m,l,y),We(c,m,y),Ge(m,u,y),We(h,m,y),Ge(m,f,y),Ge(m,d,y),g.block.m(m,g.anchor=y),g.mount=()=>d.parentNode,g.anchor=d,_=!0},p(m,y){s=m;const v={};y&512&&(v.$$scope={dirty:y,ctx:s}),o.$set(v),g.ctx=s,y&1&&p!==(p=s[0])&&xl(p,g)||op(g,s,y)},i(m){_||(re(e.$$.fragment,m),re(n.$$.fragment,m),re(r.$$.fragment,m),re(o.$$.fragment,m),re(c.$$.fragment,m),re(h.$$.fragment,m),re(g.block),_=!0)},o(m){me(e.$$.fragment,m),me(n.$$.fragment,m),me(r.$$.fragment,m),me(o.$$.fragment,m),me(c.$$.fragment,m),me(h.$$.fragment,m);for(let y=0;y<3;y+=1){const v=g.blocks[y];me(v)}_=!1},d(m){m&&(Ue(t),Ue(i),Ue(a),Ue(l),Ue(u),Ue(f),Ue(d)),Xe(e,m),Xe(n,m),Xe(r,m),Xe(o,m),Xe(c,m),Xe(h,m),g.block.d(m),g.token=null,g=null}}}function K1(s){let e,t,n;return t=new _E({props:{shadows:!0,size:{height:s[1]-2,width:s[2]-rp-2},rendererParameters:{logarithmicDepthBuffer:!0},$$slots:{default:[J1]},$$scope:{ctx:s}}}),{c(){e=bs("main"),Ve(t.$$.fragment),this.h()},l(i){e=Ss(i,"MAIN",{class:!0});var r=ss(e);Je(t.$$.fragment,r),r.forEach(Ue),this.h()},h(){Cl(e,"class","main-content svelte-1mtnv3k")},m(i,r){Ge(i,e,r),We(t,e,null),n=!0},p(i,r){const a={};r&6&&(a.size={height:i[1]-2,width:i[2]-rp-2}),r&513&&(a.$$scope={dirty:r,ctx:i}),t.$set(a)},i(i){n||(re(t.$$.fragment,i),n=!0)},o(i){me(t.$$.fragment,i),n=!1},d(i){i&&Ue(e),Xe(t)}}}function $1(s){let e,t,n,i,r,a,o;return Bg(s[4]),t=new WA({props:{$$slots:{default:[X1]},$$scope:{ctx:s}}}),i=new e1({props:{class:"app-content",$$slots:{default:[K1]},$$scope:{ctx:s}}}),{c(){e=bs("div"),Ve(t.$$.fragment),n=Bt(),Ve(i.$$.fragment),this.h()},l(l){e=Ss(l,"DIV",{class:!0});var c=ss(e);Je(t.$$.fragment,c),n=zt(c),Je(i.$$.fragment,c),c.forEach(Ue),this.h()},h(){Cl(e,"class","drawer-container svelte-1mtnv3k")},m(l,c){Ge(l,e,c),We(t,e,null),zg(e,n),We(i,e,null),r=!0,a||(o=eu(window,"resize",s[4]),a=!0)},p(l,[c]){const u={};c&513&&(u.$$scope={dirty:c,ctx:l}),t.$set(u);const h={};c&519&&(h.$$scope={dirty:c,ctx:l}),i.$set(h)},i(l){r||(re(t.$$.fragment,l),re(i.$$.fragment,l),r=!0)},o(l){me(t.$$.fragment,l),me(i.$$.fragment,l),r=!1},d(l){l&&Ue(e),Xe(t),Xe(i),a=!1,o()}}}const so="/turtlebot3_description/turtlebot3_burger.xml",rp=256;function Q1(s,e,t){let n;Dn(s,Hg,u=>t(5,n=u));let i=n.url.href;const r=new y1(`${i}/${so}`,i);let a;ar(()=>{t(0,a=r.load())});let o=0,l=0;function c(){t(1,o=window.innerHeight),t(2,l=window.innerWidth)}return[a,o,l,r,c]}class oT extends Zt{constructor(e){super(),Jt(this,e,Q1,$1,Ht,{})}}export{oT as component};
